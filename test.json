{
"id": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"name": "Autodesk Forge",
"description": "API Collection for Autodesk Forge",
"auth": null,
"events": null,
"variables": [],
"order": [],
"folders_order": [
"aa6fbf08-6622-4c6c-bb6e-d72c73cbbdfa",
"c4127be5-4813-47a7-9cc5-362fa78fa988",
"67ccc792-23b1-44e0-959e-d3a991dce762",
"63cd52eb-ecb1-4353-88c2-cab4ea26dd8f",
"4384a4d0-d96f-475c-9559-bc7e4d57dd68"
],
"folders": [
{
"id": "40290aaf-3397-4747-ac05-bbd012dc6b75",
"name": "ActivitiesApi",
"description": "",
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"id": "b952cbdb-be83-4640-b480-81623ec852fd",
"type": "text/javascript",
"exec": [
""
]
}
},
{
"listen": "test",
"script": {
"id": "a5406256-f97d-48cb-ad66-d5e3d61b3dcd",
"type": "text/javascript",
"exec": [
""
]
}
}
],
"collection": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folder": "4384a4d0-d96f-475c-9559-bc7e4d57dd68",
"order": [
"f406c475-16ea-473d-b05b-b7e72c64d3c3",
"e0a081ac-782d-4761-a769-127eec027c6b",
"03cb556c-6dac-46f0-b5de-3b6d8cff97a3",
"8d16b809-200a-4690-aaa5-a433986433a0",
"86b985dc-77e0-44ef-b501-6df90f59c659",
"11c6e379-dd43-4ce5-816c-0aeee02f4294",
"9c234258-6400-466f-9a88-9c71baa25cc4"
],
"folders_order": [],
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folderId": "40290aaf-3397-4747-ac05-bbd012dc6b75"
},
{
"id": "71990473-bdaf-45d7-8834-a563578ef8ba",
"name": "AppBundlesApi",
"description": "",
"auth": null,
"events": null,
"collection": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folder": "4384a4d0-d96f-475c-9559-bc7e4d57dd68",
"order": [
"72fc2d70-5a8a-48b6-b243-b5d5c3957627",
"58351161-730c-464b-b3f2-cb94197352ad",
"cb01efd1-b3df-4ae0-913c-8599a225754e",
"955bbed8-94a6-4674-8199-5a9df23307da",
"e228a621-77b1-4a11-8d6a-7363ce004383",
"f522b009-0b6e-49ba-9c24-3bc70c3fad0d",
"5b624946-970e-4559-839b-f97f28b94001"
],
"folders_order": [],
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folderId": "71990473-bdaf-45d7-8834-a563578ef8ba"
},
{
"id": "aa6fbf08-6622-4c6c-bb6e-d72c73cbbdfa",
"name": "Authenticate (OAuth)",
"description": "",
"auth": null,
"events": null,
"collection": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folder": null,
"order": [
"812ccd70-311e-4615-9f17-af89cdf2aba5",
"43c24e01-4f34-44e6-8a4c-d19d09608527",
"b4607ada-3d07-48da-8c54-fb54ca8df1d2"
],
"folders_order": [],
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folderId": "aa6fbf08-6622-4c6c-bb6e-d72c73cbbdfa"
},
{
"id": "c4127be5-4813-47a7-9cc5-362fa78fa988",
"name": "BIM360",
"description": "API Sets for BIM360 cloud platform",
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"id": "0a0a07a7-7988-4046-9b01-ad893180b071",
"type": "text/javascript",
"exec": [
""
]
}
},
{
"listen": "test",
"script": {
"id": "eb70d5bc-77b9-40f1-8d96-f2e4100d4052",
"type": "text/javascript",
"exec": [
""
]
}
}
],
"collection": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folder": null,
"order": [],
"folders_order": [
"dc6ff017-a212-42aa-9104-e2e71f5199dc",
"36b5c55e-1372-4a60-9cb6-3014f8ca89a4",
"176b1e9c-d3a6-4f92-8bb9-9570be2399d7"
],
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folderId": "c4127be5-4813-47a7-9cc5-362fa78fa988"
},
{
"id": "67ccc792-23b1-44e0-959e-d3a991dce762",
"name": "Data Management API",
"description": "",
"auth": null,
"events": null,
"collection": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folder": null,
"order": [
"3644207f-9768-446b-8f56-6f5ad3d1e72a",
"40bca3b2-6c63-4969-80ca-08753442b7c8",
"81f8f83c-3ff6-4ed4-9ee0-274ef4acb0d4",
"917a7ebe-255d-4649-ba12-8f91bcce2cd2",
"90be0bfd-b019-4b14-81cb-3218515d4ee9",
"ddcf2607-cf9e-4eaf-9156-b6ecde011f5d",
"f17ae40f-ae08-47f1-a1c0-a3e410dce6c1",
"486323a9-c4ff-4029-b07f-7fc152020723",
"92615d9d-eaad-4a60-bcbb-7461722ead02",
"19d61efd-84fe-4b36-bdd4-b19321084c6e",
"05b8a379-a581-4ed1-a608-9e1781ae2d5b",
"9f9d6842-ec85-4019-a67d-79c8bc24cdfb",
"f5f8f331-72f9-455d-9061-507fb5f168d4"
],
"folders_order": [],
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folderId": "67ccc792-23b1-44e0-959e-d3a991dce762"
},
{
"id": "dc6ff017-a212-42aa-9104-e2e71f5199dc",
"name": "Data Management API",
"description": "",
"auth": null,
"events": null,
"collection": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folder": "c4127be5-4813-47a7-9cc5-362fa78fa988",
"order": [
"43d9a843-15cc-4f33-ae86-a943bbb09263",
"9142bf30-7e85-445b-b9ae-116df940f70f",
"9b61b1d8-45eb-46b8-a829-58da7ecc1b37",
"e9b44dc7-754c-4762-a8e6-4a629ffe340e"
],
"folders_order": [
"d1d9b5ce-9844-4787-9cfc-1725027606be",
"58ed33dd-80ec-4ff7-ac2b-73f8a0224af2",
"5635befe-82b8-453d-b0df-440eee29ccdc",
"d69ef64e-eb4d-49d4-a9d6-522960edf6a6",
"f43d812c-e698-4de9-8e25-186813f25eb4",
"b31706b7-1e86-4b20-9655-e34255160c8d"
],
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folderId": "dc6ff017-a212-42aa-9104-e2e71f5199dc"
},
{
"id": "4384a4d0-d96f-475c-9559-bc7e4d57dd68",
"name": "Design Automation API",
"description": "https://forge.autodesk.com/en/docs/design-automation/v3/developers_guide/overview/",
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"id": "a6dc983d-65c1-4330-965e-250c8bc0bd77",
"type": "text/javascript",
"exec": [
""
]
}
},
{
"listen": "test",
"script": {
"id": "0dd9639e-8f34-40c0-8f71-07ab236d96a8",
"type": "text/javascript",
"exec": [
""
]
}
}
],
"collection": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folder": null,
"order": [],
"folders_order": [
"8b102939-3020-4983-a2fb-f3cc601def15",
"71990473-bdaf-45d7-8834-a563578ef8ba",
"5aca7d2d-20e4-4e32-a0de-8b6eb589e3e0",
"40290aaf-3397-4747-ac05-bbd012dc6b75",
"9ea29340-cec2-44f3-ab2c-a3a13bbc76ee"
],
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folderId": "4384a4d0-d96f-475c-9559-bc7e4d57dd68"
},
{
"id": "92fe8767-e6b5-4de9-ba3e-d022709b4453",
"name": "Dropbox",
"description": "",
"auth": null,
"events": null,
"collection": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folder": "9ea29340-cec2-44f3-ab2c-a3a13bbc76ee",
"order": [
"39400c89-95a8-462c-8de0-c36bdb7f093a",
"fa8bb22f-d7cf-4d48-85c4-1a0d729184b0",
"61af3bed-7fbf-4737-80c1-f647202de969",
"23b71716-796e-4e45-ac99-a65989c1a859"
],
"folders_order": [],
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folderId": "92fe8767-e6b5-4de9-ba3e-d022709b4453"
},
{
"id": "5aca7d2d-20e4-4e32-a0de-8b6eb589e3e0",
"name": "EnginesApi",
"description": "",
"auth": null,
"events": null,
"collection": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folder": "4384a4d0-d96f-475c-9559-bc7e4d57dd68",
"order": [
"86772843-3224-4f38-9bdd-954816d023af"
],
"folders_order": [],
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folderId": "5aca7d2d-20e4-4e32-a0de-8b6eb589e3e0"
},
{
"id": "5635befe-82b8-453d-b0df-440eee29ccdc",
"name": "Folders",
"description": "",
"auth": null,
"events": null,
"collection": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folder": "dc6ff017-a212-42aa-9104-e2e71f5199dc",
"order": [
"f8126c91-9fcb-4cd0-abcd-089632d9d213",
"fa671c3b-0b8d-4b1d-b00e-dbbb2579a9d0",
"6e50730b-da6b-4ca0-81d3-b0b98fdfc0ee",
"40abadfc-4e40-4c8a-acf2-3f49fe248cd7",
"ad9d02ec-14b2-4789-ad29-369ff04a0cac"
],
"folders_order": [],
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folderId": "5635befe-82b8-453d-b0df-440eee29ccdc"
},
{
"id": "8b102939-3020-4983-a2fb-f3cc601def15",
"name": "ForgeAppsAPI",
"description": "",
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"id": "6f8279ba-a074-424e-9a16-6169a2554503",
"type": "text/javascript",
"exec": [
""
]
}
},
{
"listen": "test",
"script": {
"id": "a75eed76-5ea6-4f4d-919a-ab09d3a8dbf8",
"type": "text/javascript",
"exec": [
""
]
}
}
],
"collection": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folder": "4384a4d0-d96f-475c-9559-bc7e4d57dd68",
"order": [
"2a20672c-2a06-4243-ad4c-7bc27753bc24",
"578effb1-c95d-4c9a-9883-c0ddbb60d386",
"90086aa4-737f-4fa4-b470-eba51a517f62"
],
"folders_order": [],
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folderId": "8b102939-3020-4983-a2fb-f3cc601def15"
},
{
"id": "36b5c55e-1372-4a60-9cb6-3014f8ca89a4",
"name": "HQ API",
"description": "The BIM 360 API allows developers to develop apps that integrate with the Autodesk BIM 360 platform to extend its capabilities in the construction ecosystem.\n\nhttps://developer.autodesk.com/en/docs/bim360/v1/overview/",
"auth": null,
"events": null,
"collection": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folder": "c4127be5-4813-47a7-9cc5-362fa78fa988",
"order": [
"9cafda70-e12b-40aa-bec2-8fe6b95c2722",
"32ea86a1-c9e9-49ca-b3e2-9bbafcb3cd23",
"15357a64-8dc3-4558-bb42-1c0db19b3a88",
"7181b354-5199-41e4-961c-69d5cf8e76a0",
"5d147790-5fa9-4ce4-9c46-912b17a6dddb",
"4c3dc5cd-9c8b-4be0-a7b7-eb4067f74822",
"3d21071b-3af9-41ee-8140-d3ebb65f938b",
"1c3857ac-a39e-43c9-8d59-b2b9a488a86c",
"48d1d18e-c55e-4e3d-8188-1815df84084b"
],
"folders_order": [],
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folderId": "36b5c55e-1372-4a60-9cb6-3014f8ca89a4"
},
{
"id": "d1d9b5ce-9844-4787-9cfc-1725027606be",
"name": "Hubs",
"description": "",
"auth": null,
"events": null,
"collection": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folder": "dc6ff017-a212-42aa-9104-e2e71f5199dc",
"order": [
"24b4aaee-79d0-459b-8ff7-bc76b3ab15cb",
"724f7348-4f95-408a-a0f5-1a879c55d9f6",
"214b4f02-b66b-4854-a611-3110a8591118",
"b41fcf57-3096-4efc-a074-7754e8f5b0c2",
"6fc915f6-a072-4f11-a3aa-e8880491e978"
],
"folders_order": [],
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folderId": "d1d9b5ce-9844-4787-9cfc-1725027606be"
},
{
"id": "176b1e9c-d3a6-4f92-8bb9-9570be2399d7",
"name": "Issue API",
"description": "",
"auth": null,
"events": null,
"collection": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folder": "c4127be5-4813-47a7-9cc5-362fa78fa988",
"order": [
"b667f735-19f6-476a-b435-3193dc7e302d",
"f448d4a2-f1f0-41bc-829d-822bfbad744b"
],
"folders_order": [],
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folderId": "176b1e9c-d3a6-4f92-8bb9-9570be2399d7"
},
{
"id": "d69ef64e-eb4d-49d4-a9d6-522960edf6a6",
"name": "Items",
"description": "",
"auth": null,
"events": null,
"collection": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folder": "dc6ff017-a212-42aa-9104-e2e71f5199dc",
"order": [
"bf70e37a-10c1-42c4-ae3d-8023ff0dc93a",
"91134e06-13b7-4482-9dc6-d7fb3412797e"
],
"folders_order": [],
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folderId": "d69ef64e-eb4d-49d4-a9d6-522960edf6a6"
},
{
"id": "63cd52eb-ecb1-4353-88c2-cab4ea26dd8f",
"name": "Model Derivative API",
"description": "",
"auth": null,
"events": null,
"collection": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folder": null,
"order": [
"ef5df910-ace7-46e8-ac7e-6e91a36c833b",
"77b6ab2e-d06e-4af2-925d-5c4eed663851",
"681e0eca-8f14-4299-be48-12bf98d3dd4c",
"8c8335b6-2fc4-4ce2-98da-284d5a4265c1",
"250da7e5-e5ce-47da-86e7-4f8a09c288cc",
"2a7f7df7-a375-4987-b315-e96470399186",
"b3ccbea9-064b-458d-8da2-896772f46f88",
"5f9350c9-eae0-4a4a-b2af-d86ece84e843",
"dc4fec61-4ba4-451c-9f12-72fb7cddb369",
"399fd668-4bfd-4cba-afdd-36970c237cab",
"153d69de-5376-46cc-9749-5544b0b4ce07",
"0cb8231e-6175-4598-ada2-6420e815dc67"
],
"folders_order": [],
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folderId": "63cd52eb-ecb1-4353-88c2-cab4ea26dd8f"
},
{
"id": "58ed33dd-80ec-4ff7-ac2b-73f8a0224af2",
"name": "Projects",
"description": "",
"auth": null,
"events": null,
"collection": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folder": "dc6ff017-a212-42aa-9104-e2e71f5199dc",
"order": [
"4d4146ad-d175-4878-a1e8-f53693e5487b",
"e749086a-8ca9-44d9-8060-222b496ec72f",
"208d2240-2d4c-4e90-81c6-2366b153d89f",
"dd9b1e23-2cf7-4c16-b501-c1094a168941"
],
"folders_order": [],
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folderId": "58ed33dd-80ec-4ff7-ac2b-73f8a0224af2"
},
{
"id": "b31706b7-1e86-4b20-9655-e34255160c8d",
"name": "Storage",
"description": "",
"auth": null,
"events": null,
"collection": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folder": "dc6ff017-a212-42aa-9104-e2e71f5199dc",
"order": [
"51946080-f2d6-448b-b3ed-15d632f6e84c",
"a208332c-4dc0-48c4-b309-3b2ed06698c5",
"856d1bae-f6e5-42f6-b158-9c32d973b930",
"6728496a-e493-4f5f-a888-68d8ed27bab8",
"7608812a-06f2-4fe3-a940-4fde168639c2",
"f399fc18-fde0-4964-928c-ba9d5f9de8ba"
],
"folders_order": [],
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folderId": "b31706b7-1e86-4b20-9655-e34255160c8d"
},
{
"id": "f43d812c-e698-4de9-8e25-186813f25eb4",
"name": "Versions",
"description": "",
"auth": null,
"events": null,
"collection": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folder": "dc6ff017-a212-42aa-9104-e2e71f5199dc",
"order": [
"0f0366fa-184b-4de7-9bbe-dc913d3a5e34",
"d10d7eef-8362-4c2a-ae16-c25ea95f6d83",
"21f4f2e8-d097-45ab-959e-57837ad29c15"
],
"folders_order": [],
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folderId": "f43d812c-e698-4de9-8e25-186813f25eb4"
},
{
"id": "9ea29340-cec2-44f3-ab2c-a3a13bbc76ee",
"name": "WorkItemsApi",
"description": "",
"auth": null,
"events": null,
"collection": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folder": "4384a4d0-d96f-475c-9559-bc7e4d57dd68",
"order": [
"0a0960a9-66a8-42ac-b458-b018e438fd7e"
],
"folders_order": [
"92fe8767-e6b5-4de9-ba3e-d022709b4453"
],
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"folderId": "9ea29340-cec2-44f3-ab2c-a3a13bbc76ee"
}
],
"requests": [
{
"id": "03cb556c-6dac-46f0-b5de-3b6d8cff97a3",
"name": "DA - Get Activities ",
"url": "https://{{ForgeURL}}/da/us-east/v3/activities",
"description": "GET\tactivities\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/activities-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"type": "text",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"type": "text",
"value": "application/json"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": null,
"folder": "40290aaf-3397-4747-ac05-bbd012dc6b75",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "05b8a379-a581-4ed1-a608-9e1781ae2d5b",
"name": "Data Mgmt - Download a file",
"url": "https://{{ForgeURL}}/oss/v2/buckets/{{BucketName}}/objects/{{Filename}}",
"description": "Download afile.\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/buckets-:bucketKey-objects-:objectName-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"type": "text/javascript",
"exec": [
"var fileName = postman.getEnvironmentVariable( \"Filename\" );",
"",
"if( !fileName ) throw \"Filename cannot be empty\";"
]
}
},
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );"
]
}
}
],
"folder": "67ccc792-23b1-44e0-959e-d3a991dce762",
"preRequestScript": "var fileName = postman.getEnvironmentVariable( \"Filename\" );\n\nif( !fileName ) throw \"Filename cannot be empty\";",
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\n",
"pathVariables": {}
},
{
"id": "0a0960a9-66a8-42ac-b458-b018e438fd7e",
"name": "DA - Get Workitem by Id",
"url": "https://{{ForgeURL}}/da/us-east/v3/workitems/:id",
"description": "GET\tworkitems/:id\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/workitems-id-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"type": "text",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"type": "text",
"value": "application/json"
}
],
"method": "GET",
"pathVariableData": [
{
"key": "id",
"value": "{{WorkItemId}}"
}
],
"queryParams": [],
"auth": null,
"events": null,
"folder": "9ea29340-cec2-44f3-ab2c-a3a13bbc76ee",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {
"id": "{{WorkItemId}}"
}
},
{
"id": "0cb8231e-6175-4598-ada2-6420e815dc67",
"name": "Model - Get Item Properties",
"url": "https://{{ForgeURL}}/modelderivative/v2/designdata/{{base64URN}}/metadata/{{modelGuid}}/properties?objectid={{objectId}}",
"description": "Get Model Properties.\n\nhttps://developer.autodesk.com/en/docs/model-derivative/v2/reference/http/urn-metadata-guid-properties-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/json",
"description": "",
"enabled": true
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [
{
"key": "objectid",
"value": "{{objectId}}",
"equals": true,
"description": "",
"enabled": true
}
],
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"type": "text/javascript",
"exec": [
"/*",
" * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $",
" *",
" *  Licensed under the BSD 3-Clause License.",
" *    http://opensource.org/licenses/BSD-3-Clause",
" *",
" *  References:",
" *    http://en.wikipedia.org/wiki/Base64",
" */",
"",
"(function(global) {",
"    'use strict';",
"    // existing version for noConflict()",
"    var _Base64 = global.Base64;",
"    var version = \"2.1.9\";",
"    // if node.js, we use Buffer",
"    var buffer;",
"    if (typeof module !== 'undefined' && module.exports) {",
"        try {",
"            buffer = require('buffer').Buffer;",
"        } catch (err) {}",
"    }",
"    // constants",
"    var b64chars",
"        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';",
"    var b64tab = function(bin) {",
"        var t = {};",
"        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;",
"        return t;",
"    }(b64chars);",
"    var fromCharCode = String.fromCharCode;",
"    // encoder stuff",
"    var cb_utob = function(c) {",
"        if (c.length < 2) {",
"            var cc = c.charCodeAt(0);",
"            return cc < 0x80 ? c",
"                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))",
"                                + fromCharCode(0x80 | (cc & 0x3f)))",
"                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))",
"                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                   + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        } else {",
"            var cc = 0x10000",
"                + (c.charCodeAt(0) - 0xD800) * 0x400",
"                + (c.charCodeAt(1) - 0xDC00);",
"            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))",
"                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))",
"                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                    + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        }",
"    };",
"    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;",
"    var utob = function(u) {",
"        return u.replace(re_utob, cb_utob);",
"    };",
"    var cb_encode = function(ccc) {",
"        var padlen = [0, 2, 1][ccc.length % 3],",
"        ord = ccc.charCodeAt(0) << 16",
"            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)",
"            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),",
"        chars = [",
"            b64chars.charAt( ord >>> 18),",
"            b64chars.charAt((ord >>> 12) & 63),",
"            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),",
"            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)",
"        ];",
"        return chars.join('');",
"    };",
"    var btoa = global.btoa ? function(b) {",
"        return global.btoa(b);",
"    } : function(b) {",
"        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);",
"    };",
"    var _encode = buffer ? function (u) {",
"        return (u.constructor === buffer.constructor ? u : new buffer(u))",
"        .toString('base64')",
"    }",
"    : function (u) { return btoa(utob(u)) }",
"    ;",
"    var encode = function(u, urisafe) {",
"        return !urisafe",
"            ? _encode(String(u))",
"            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {",
"                return m0 == '+' ? '-' : '_';",
"            }).replace(/=/g, '');",
"    };",
"    var encodeURI = function(u) { return encode(u, true) };",
"    // decoder stuff",
"    var re_btou = new RegExp([",
"        '[\\xC0-\\xDF][\\x80-\\xBF]',",
"        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',",
"        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'",
"    ].join('|'), 'g');",
"    var cb_btou = function(cccc) {",
"        switch(cccc.length) {",
"        case 4:",
"            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)",
"                |    ((0x3f & cccc.charCodeAt(1)) << 12)",
"                |    ((0x3f & cccc.charCodeAt(2)) <<  6)",
"                |     (0x3f & cccc.charCodeAt(3)),",
"            offset = cp - 0x10000;",
"            return (fromCharCode((offset  >>> 10) + 0xD800)",
"                    + fromCharCode((offset & 0x3FF) + 0xDC00));",
"        case 3:",
"            return fromCharCode(",
"                ((0x0f & cccc.charCodeAt(0)) << 12)",
"                    | ((0x3f & cccc.charCodeAt(1)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(2))",
"            );",
"        default:",
"            return  fromCharCode(",
"                ((0x1f & cccc.charCodeAt(0)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(1))",
"            );",
"        }",
"    };",
"    var btou = function(b) {",
"        return b.replace(re_btou, cb_btou);",
"    };",
"    var cb_decode = function(cccc) {",
"        var len = cccc.length,",
"        padlen = len % 4,",
"        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)",
"            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)",
"            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)",
"            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),",
"        chars = [",
"            fromCharCode( n >>> 16),",
"            fromCharCode((n >>>  8) & 0xff),",
"            fromCharCode( n         & 0xff)",
"        ];",
"        chars.length -= [0, 0, 2, 1][padlen];",
"        return chars.join('');",
"    };",
"    var atob = global.atob ? function(a) {",
"        return global.atob(a);",
"    } : function(a){",
"        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);",
"    };",
"    var _decode = buffer ? function(a) {",
"        return (a.constructor === buffer.constructor",
"                ? a : new buffer(a, 'base64')).toString();",
"    }",
"    : function(a) { return btou(atob(a)) };",
"    var decode = function(a){",
"        return _decode(",
"            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })",
"                .replace(/[^A-Za-z0-9\\+\\/]/g, '')",
"        );",
"    };",
"    var noConflict = function() {",
"        var Base64 = global.Base64;",
"        global.Base64 = _Base64;",
"        return Base64;",
"    };",
"    // export Base64",
"    global.Base64 = {",
"        VERSION: version,",
"        atob: atob,",
"        btoa: btoa,",
"        fromBase64: decode,",
"        toBase64: encode,",
"        utob: utob,",
"        encode: encode,",
"        encodeURI: encodeURI,",
"        btou: btou,",
"        decode: decode,",
"        noConflict: noConflict",
"    };",
"    // if ES5 is available, make Base64.extendString() available",
"    if (typeof Object.defineProperty === 'function') {",
"        var noEnum = function(v){",
"            return {value:v,enumerable:false,writable:true,configurable:true};",
"        };",
"        global.Base64.extendString = function () {",
"            Object.defineProperty(",
"                String.prototype, 'fromBase64', noEnum(function () {",
"                    return decode(this)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64', noEnum(function (urisafe) {",
"                    return encode(this, urisafe)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64URI', noEnum(function () {",
"                    return encode(this, true)",
"                }));",
"        };",
"    }",
"    // that's it!",
"    if (global['Meteor']) {",
"        Base64 = global.Base64; // for normal export in Meteor.js",
"    }",
"    if (typeof module !== 'undefined' && module.exports) {",
"        module.exports.Base64 = global.Base64;",
"    }",
"    if (typeof define === 'function' && define.amd) {",
"        // AMD. Register as an anonymous module.",
"        define([], function(){ return global.Base64 });",
"    }",
"})(typeof self !== 'undefined' ? self",
" : typeof window !== 'undefined' ? window",
" : typeof global !== 'undefined' ? global",
" : this",
");",
"",
"postman.setEnvironmentVariable( \"base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );"
]
}
},
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200 ;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data = JSON.parse( responseBody );",
"tests[\"Response has progress\"] = data.hasOwnProperty( \"progress\" );",
"tests[\"Response has status\"] = data.hasOwnProperty( \"status\" );",
"tests[\"Response has urn\"] = data.hasOwnProperty( \"urn\" );",
"tests[\"urn verified\"] = data.urn === postman.getEnvironmentVariable( \"base64URN\" );"
]
}
}
],
"folder": "63cd52eb-ecb1-4353-88c2-cab4ea26dd8f",
"preRequestScript": "/*\n * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n\n(function(global) {\n    'use strict';\n    // existing version for noConflict()\n    var _Base64 = global.Base64;\n    var version = \"2.1.9\";\n    // if node.js, we use Buffer\n    var buffer;\n    if (typeof module !== 'undefined' && module.exports) {\n        try {\n            buffer = require('buffer').Buffer;\n        } catch (err) {}\n    }\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                   + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa ? function(b) {\n        return global.btoa(b);\n    } : function(b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = buffer ? function (u) {\n        return (u.constructor === buffer.constructor ? u : new buffer(u))\n        .toString('base64')\n    }\n    : function (u) { return btoa(utob(u)) }\n    ;\n    var encode = function(u, urisafe) {\n        return !urisafe\n            ? _encode(String(u))\n            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {\n                return m0 == '+' ? '-' : '_';\n            }).replace(/=/g, '');\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    // decoder stuff\n    var re_btou = new RegExp([\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n    ].join('|'), 'g');\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var atob = global.atob ? function(a) {\n        return global.atob(a);\n    } : function(a){\n        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);\n    };\n    var _decode = buffer ? function(a) {\n        return (a.constructor === buffer.constructor\n                ? a : new buffer(a, 'base64')).toString();\n    }\n    : function(a) { return btou(atob(a)) };\n    var decode = function(a){\n        return _decode(\n            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n        );\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    // that's it!\n    if (global['Meteor']) {\n        Base64 = global.Base64; // for normal export in Meteor.js\n    }\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], function(){ return global.Base64 });\n    }\n})(typeof self !== 'undefined' ? self\n : typeof window !== 'undefined' ? window\n : typeof global !== 'undefined' ? global\n : this\n);\n\npostman.setEnvironmentVariable( \"base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );",
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200 ;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data = JSON.parse( responseBody );\ntests[\"Response has progress\"] = data.hasOwnProperty( \"progress\" );\ntests[\"Response has status\"] = data.hasOwnProperty( \"status\" );\ntests[\"Response has urn\"] = data.hasOwnProperty( \"urn\" );\ntests[\"urn verified\"] = data.urn === postman.getEnvironmentVariable( \"base64URN\" );",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "0f0366fa-184b-4de7-9bbe-dc913d3a5e34",
"name": "Data Mgmt - GET Item Versions",
"url": "https://{{ForgeURL}}/data/v1/projects/{{ProjectId}}/items/{{ItemId}}/versions",
"description": "GET projects/:project_id/items/:item_id/versions\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/projects-project_id-items-item_id-versions-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/vnd.api+json",
"description": "",
"enabled": true
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
]
}
}
],
"folder": "f43d812c-e698-4de9-8e25-186813f25eb4",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "11c6e379-dd43-4ce5-816c-0aeee02f4294",
"name": "DA - Create Activity Zip output",
"url": "https://{{ForgeURL}}/da/us-east/v3/activities",
"description": null,
"data": [],
"dataMode": "raw",
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"type": "text",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"type": "text",
"value": "application/json"
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": null,
"folder": "40290aaf-3397-4747-ac05-bbd012dc6b75",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\r\n    \"id\": \"{{ActivityName}}\",\r\n    \"commandLine\": [ \"$(engine.path)\\\\\\\\revitcoreconsole.exe /i $(args[inputFile].path) /al $(appbundles[{{AppBundleName}}].path)\" ],\r\n    \"parameters\": {\r\n      \"inputFile\": {\r\n        \"zip\": false,\r\n        \"ondemand\": false,\r\n        \"verb\": \"get\",\r\n        \"description\": \"Input Revit model\",\r\n        \"required\": true,\r\n        \"localName\": \"$(inputFile)\"\r\n      },\r\n      \"outputFile\": {\r\n        \"zip\": true,\r\n        \"ondemand\": false,\r\n        \"verb\": \"put\",\r\n        \"description\": \"Exported files\",\r\n        \"required\": true,\r\n        \"localName\": \"exported\"\r\n      }\r\n    },\r\n    \"engine\": \"{{EngineName}}\",\r\n    \"appbundles\": [ \"{{AppNickName}}.{{AppBundleName}}+{{AppBundleAliasId}}\" ],\r\n    \"description\": \"{{AppBundleName}}\"\r\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "15357a64-8dc3-4558-bb42-1c0db19b3a88",
"name": "BIM360 - GET Project Companies",
"url": "https://{{ForgeURL}}/hq/v1/accounts/{{AccountId}}/projects/{{ProjectId}}/companies\n",
"description": "Patch project image\n\nhttps://forge.autodesk.com/en/docs/bim360/v1/reference/http/projects-:project_id-image-PATCH/",
"data": null,
"dataMode": null,
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"key": "Content-Type",
"value": "multipart/form-data"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "19cbcbfd-0ac8-43b6-81dc-91b000adef01",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
],
"type": "text/javascript"
}
}
],
"folder": "36b5c55e-1372-4a60-9cb6-3014f8ca89a4",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: multipart/form-data\n",
"pathVariables": {}
},
{
"id": "153d69de-5376-46cc-9749-5544b0b4ce07",
"name": "Model - Get Properties",
"url": "https://{{ForgeURL}}/modelderivative/v2/designdata/{{base64URN}}/metadata/{{modelGuid}}/properties?forceget=true",
"description": "Get Model Properties.\n\nhttps://developer.autodesk.com/en/docs/model-derivative/v2/reference/http/urn-metadata-guid-properties-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/json",
"description": "",
"enabled": true
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [
{
"key": "forceget",
"value": "true",
"equals": true,
"description": "",
"enabled": true
}
],
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"id": "01c52af8-a773-4e3b-8c4f-24ca6b5ddd8a",
"exec": [
"/*",
" * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $",
" *",
" *  Licensed under the BSD 3-Clause License.",
" *    http://opensource.org/licenses/BSD-3-Clause",
" *",
" *  References:",
" *    http://en.wikipedia.org/wiki/Base64",
" */",
"",
"(function(global) {",
"    'use strict';",
"    // existing version for noConflict()",
"    var _Base64 = global.Base64;",
"    var version = \"2.1.9\";",
"    // if node.js, we use Buffer",
"    var buffer;",
"    if (typeof module !== 'undefined' && module.exports) {",
"        try {",
"            buffer = require('buffer').Buffer;",
"        } catch (err) {}",
"    }",
"    // constants",
"    var b64chars",
"        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';",
"    var b64tab = function(bin) {",
"        var t = {};",
"        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;",
"        return t;",
"    }(b64chars);",
"    var fromCharCode = String.fromCharCode;",
"    // encoder stuff",
"    var cb_utob = function(c) {",
"        if (c.length < 2) {",
"            var cc = c.charCodeAt(0);",
"            return cc < 0x80 ? c",
"                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))",
"                                + fromCharCode(0x80 | (cc & 0x3f)))",
"                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))",
"                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                   + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        } else {",
"            var cc = 0x10000",
"                + (c.charCodeAt(0) - 0xD800) * 0x400",
"                + (c.charCodeAt(1) - 0xDC00);",
"            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))",
"                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))",
"                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                    + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        }",
"    };",
"    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;",
"    var utob = function(u) {",
"        return u.replace(re_utob, cb_utob);",
"    };",
"    var cb_encode = function(ccc) {",
"        var padlen = [0, 2, 1][ccc.length % 3],",
"        ord = ccc.charCodeAt(0) << 16",
"            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)",
"            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),",
"        chars = [",
"            b64chars.charAt( ord >>> 18),",
"            b64chars.charAt((ord >>> 12) & 63),",
"            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),",
"            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)",
"        ];",
"        return chars.join('');",
"    };",
"    var btoa = global.btoa ? function(b) {",
"        return global.btoa(b);",
"    } : function(b) {",
"        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);",
"    };",
"    var _encode = buffer ? function (u) {",
"        return (u.constructor === buffer.constructor ? u : new buffer(u))",
"        .toString('base64')",
"    }",
"    : function (u) { return btoa(utob(u)) }",
"    ;",
"    var encode = function(u, urisafe) {",
"        return !urisafe",
"            ? _encode(String(u))",
"            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {",
"                return m0 == '+' ? '-' : '_';",
"            }).replace(/=/g, '');",
"    };",
"    var encodeURI = function(u) { return encode(u, true) };",
"    // decoder stuff",
"    var re_btou = new RegExp([",
"        '[\\xC0-\\xDF][\\x80-\\xBF]',",
"        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',",
"        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'",
"    ].join('|'), 'g');",
"    var cb_btou = function(cccc) {",
"        switch(cccc.length) {",
"        case 4:",
"            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)",
"                |    ((0x3f & cccc.charCodeAt(1)) << 12)",
"                |    ((0x3f & cccc.charCodeAt(2)) <<  6)",
"                |     (0x3f & cccc.charCodeAt(3)),",
"            offset = cp - 0x10000;",
"            return (fromCharCode((offset  >>> 10) + 0xD800)",
"                    + fromCharCode((offset & 0x3FF) + 0xDC00));",
"        case 3:",
"            return fromCharCode(",
"                ((0x0f & cccc.charCodeAt(0)) << 12)",
"                    | ((0x3f & cccc.charCodeAt(1)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(2))",
"            );",
"        default:",
"            return  fromCharCode(",
"                ((0x1f & cccc.charCodeAt(0)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(1))",
"            );",
"        }",
"    };",
"    var btou = function(b) {",
"        return b.replace(re_btou, cb_btou);",
"    };",
"    var cb_decode = function(cccc) {",
"        var len = cccc.length,",
"        padlen = len % 4,",
"        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)",
"            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)",
"            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)",
"            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),",
"        chars = [",
"            fromCharCode( n >>> 16),",
"            fromCharCode((n >>>  8) & 0xff),",
"            fromCharCode( n         & 0xff)",
"        ];",
"        chars.length -= [0, 0, 2, 1][padlen];",
"        return chars.join('');",
"    };",
"    var atob = global.atob ? function(a) {",
"        return global.atob(a);",
"    } : function(a){",
"        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);",
"    };",
"    var _decode = buffer ? function(a) {",
"        return (a.constructor === buffer.constructor",
"                ? a : new buffer(a, 'base64')).toString();",
"    }",
"    : function(a) { return btou(atob(a)) };",
"    var decode = function(a){",
"        return _decode(",
"            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })",
"                .replace(/[^A-Za-z0-9\\+\\/]/g, '')",
"        );",
"    };",
"    var noConflict = function() {",
"        var Base64 = global.Base64;",
"        global.Base64 = _Base64;",
"        return Base64;",
"    };",
"    // export Base64",
"    global.Base64 = {",
"        VERSION: version,",
"        atob: atob,",
"        btoa: btoa,",
"        fromBase64: decode,",
"        toBase64: encode,",
"        utob: utob,",
"        encode: encode,",
"        encodeURI: encodeURI,",
"        btou: btou,",
"        decode: decode,",
"        noConflict: noConflict",
"    };",
"    // if ES5 is available, make Base64.extendString() available",
"    if (typeof Object.defineProperty === 'function') {",
"        var noEnum = function(v){",
"            return {value:v,enumerable:false,writable:true,configurable:true};",
"        };",
"        global.Base64.extendString = function () {",
"            Object.defineProperty(",
"                String.prototype, 'fromBase64', noEnum(function () {",
"                    return decode(this)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64', noEnum(function (urisafe) {",
"                    return encode(this, urisafe)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64URI', noEnum(function () {",
"                    return encode(this, true)",
"                }));",
"        };",
"    }",
"    // that's it!",
"    if (global['Meteor']) {",
"        Base64 = global.Base64; // for normal export in Meteor.js",
"    }",
"    if (typeof module !== 'undefined' && module.exports) {",
"        module.exports.Base64 = global.Base64;",
"    }",
"    if (typeof define === 'function' && define.amd) {",
"        // AMD. Register as an anonymous module.",
"        define([], function(){ return global.Base64 });",
"    }",
"})(typeof self !== 'undefined' ? self",
" : typeof window !== 'undefined' ? window",
" : typeof global !== 'undefined' ? global",
" : this",
");",
"",
"postman.setEnvironmentVariable( \"base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );"
],
"type": "text/javascript"
}
},
{
"listen": "test",
"script": {
"id": "ef088834-7c7c-4cc5-97a2-7b1e872f5998",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200 ;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data = JSON.parse( responseBody );",
"tests[\"Response has progress\"] = data.hasOwnProperty( \"progress\" );",
"tests[\"Response has status\"] = data.hasOwnProperty( \"status\" );",
"tests[\"Response has urn\"] = data.hasOwnProperty( \"urn\" );",
"tests[\"urn verified\"] = data.urn === postman.getEnvironmentVariable( \"base64URN\" );"
],
"type": "text/javascript"
}
}
],
"folder": "63cd52eb-ecb1-4353-88c2-cab4ea26dd8f",
"preRequestScript": "/*\n * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n\n(function(global) {\n    'use strict';\n    // existing version for noConflict()\n    var _Base64 = global.Base64;\n    var version = \"2.1.9\";\n    // if node.js, we use Buffer\n    var buffer;\n    if (typeof module !== 'undefined' && module.exports) {\n        try {\n            buffer = require('buffer').Buffer;\n        } catch (err) {}\n    }\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                   + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa ? function(b) {\n        return global.btoa(b);\n    } : function(b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = buffer ? function (u) {\n        return (u.constructor === buffer.constructor ? u : new buffer(u))\n        .toString('base64')\n    }\n    : function (u) { return btoa(utob(u)) }\n    ;\n    var encode = function(u, urisafe) {\n        return !urisafe\n            ? _encode(String(u))\n            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {\n                return m0 == '+' ? '-' : '_';\n            }).replace(/=/g, '');\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    // decoder stuff\n    var re_btou = new RegExp([\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n    ].join('|'), 'g');\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var atob = global.atob ? function(a) {\n        return global.atob(a);\n    } : function(a){\n        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);\n    };\n    var _decode = buffer ? function(a) {\n        return (a.constructor === buffer.constructor\n                ? a : new buffer(a, 'base64')).toString();\n    }\n    : function(a) { return btou(atob(a)) };\n    var decode = function(a){\n        return _decode(\n            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n        );\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    // that's it!\n    if (global['Meteor']) {\n        Base64 = global.Base64; // for normal export in Meteor.js\n    }\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], function(){ return global.Base64 });\n    }\n})(typeof self !== 'undefined' ? self\n : typeof window !== 'undefined' ? window\n : typeof global !== 'undefined' ? global\n : this\n);\n\npostman.setEnvironmentVariable( \"base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );",
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200 ;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data = JSON.parse( responseBody );\ntests[\"Response has progress\"] = data.hasOwnProperty( \"progress\" );\ntests[\"Response has status\"] = data.hasOwnProperty( \"status\" );\ntests[\"Response has urn\"] = data.hasOwnProperty( \"urn\" );\ntests[\"urn verified\"] = data.urn === postman.getEnvironmentVariable( \"base64URN\" );",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "19d61efd-84fe-4b36-bdd4-b19321084c6e",
"name": "Data Mgmt - Greate Signed Object",
"url": "https://{{ForgeURL}}/oss/v2/buckets/{{BucketName}}/objects/{{Filename}}/signed",
"description": "https://forge.autodesk.com/en/docs/data/v2/reference/http/buckets-:bucketKey-objects-:objectName-signed-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"key": "Content-Type",
"value": "application/json"
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"type": "text/javascript",
"exec": [
"var fileName = postman.getEnvironmentVariable( \"Filename\" );",
"",
"if( !fileName ) throw \"Filename cannot be empty\";"
]
}
},
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data = JSON.parse( responseBody );",
"tests[\"Key verified\"] = data.objectKey === postman.getEnvironmentVariable( \"Filename\" );"
]
}
}
],
"folder": "67ccc792-23b1-44e0-959e-d3a991dce762",
"preRequestScript": "var fileName = postman.getEnvironmentVariable( \"Filename\" );\n\nif( !fileName ) throw \"Filename cannot be empty\";",
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data = JSON.parse( responseBody );\ntests[\"Key verified\"] = data.objectKey === postman.getEnvironmentVariable( \"Filename\" );",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\n\t\"minutesExpiration\" : 30,\n\t\"singleUse\" : true\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "1c3857ac-a39e-43c9-8d59-b2b9a488a86c",
"name": "BIM360 - GET User",
"url": "https://{{ForgeURL}}/hq/v1/accounts/{{AccountId}}/users/{{UserId}}",
"description": "GET\tusers/:user_id\n\nhttps://forge.autodesk.com/en/docs/bim360/v1/reference/http/users-:user_id-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"enabled": true,
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"enabled": false,
"key": "Content-Type",
"value": "application/vnd.api+json"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "ed5c5b1f-bd70-4dc5-b5f2-1fdb28ba9451",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
],
"type": "text/javascript"
}
}
],
"folder": "36b5c55e-1372-4a60-9cb6-3014f8ca89a4",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\n//Content-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "208d2240-2d4c-4e90-81c6-2366b153d89f",
"name": "Data Mgmt - GET Docs Project List",
"url": "https://{{ForgeURL}}/project/v1/hubs/{{HubId}}/projects?filter[extension.type]=projects:autodesk.bim360:Project",
"description": "Get Project List\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/hubs-hub_id-projects-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"value": "application/vnd.api+json"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [
{
"key": "filter[extension.type]",
"value": "projects:autodesk.bim360:Project",
"equals": true,
"description": "",
"enabled": true
}
],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
]
}
}
],
"folder": "58ed33dd-80ec-4ff7-ac2b-73f8a0224af2",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "214b4f02-b66b-4854-a611-3110a8591118",
"name": "Data Mgmt - GET Docs Hub List",
"url": "https://{{ForgeURL}}/project/v1/hubs?filter[extension.type]=hubs:autodesk.bim360:Account",
"description": "Get Hub list\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/hubs-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"value": "application/vnd.api+json"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [
{
"key": "filter[extension.type]",
"value": "hubs:autodesk.bim360:Account",
"equals": true,
"description": "",
"enabled": true
}
],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
]
}
}
],
"folder": "d1d9b5ce-9844-4787-9cfc-1725027606be",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "21f4f2e8-d097-45ab-959e-57837ad29c15",
"name": "Data Mgmt - PATCH Item Versions",
"url": "https://{{ForgeURL}}/data/v1/projects/{{ProjectId}}/versions/urn%3Aadsk.wipprod%3Afs.file%3Avf.uaoPlkTISk6lUmPm-tL1qw%3Fversion%3D1",
"description": "",
"data": [],
"dataMode": "raw",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/vnd.api+json",
"description": "",
"enabled": true
}
],
"method": "PATCH",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "787af177-e89a-4460-b3d9-f0f63660891a",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
],
"type": "text/javascript"
}
}
],
"folder": "f43d812c-e698-4de9-8e25-186813f25eb4",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\n  \"jsonapi\": {\n    \"version\": \"1.0\"\n  },\n  \"data\": {\n    \"type\": \"versions\",\n    \"id\": \"urn:adsk.wipprod:fs.file:vf.uaoPlkTISk6lUmPm-tL1qw?version=1\",\n    \"attributes\": {\n      \"name\": \"Autodesk Design Description\",\n      \"version\": \"0.1\",\n      \"designDescription\": {\n        \"id\": \"0\",\n        \"name\": \"XRef File Design\",\n        \"currentVersion\": \"1\",\n        \"designGraphs\": [\n          {\n            \"creationDate\": \"2019-01-23T11:07:00+0000\",\n            \"creatingService\": \"wipdm\",\n            \"rootIds\": [\n              120224\n            ],\n            \"designObjectRefs\": [],\n            \"designObjects\": [\n              {\n                \"id\": 120224,\n                \"version\": 1,\n                \"about\": \"urn:adsk.wipprod:fs.file:vf.uaoPlkTISk6lUmPm-tL1qw?version=1\",\n                \"lineage\": \"urn:adsk.wipprod:dm.lineage:uaoPlkTISk6lUmPm-tL1qw\",\n                \"from\": \"urn:adsk.objects:os.object:wip.dm.prod/1b26be58-6419-436b-ae10-fa6976fd705d.zip\",\n                \"relativePath\": \"house_ar.zip\",\n                \"downloadAs\": \"house_ar.zip\",\n                \"friendlyName\": \"\",\n                \"displayName\": \"house_ar.zip\",\n                \"zipped\": true,\n                \"rootFile\": \"\",\n                \"contentType\": \"zip\",\n                \"shareInfo\": null,\n                \"references\": [],\n                \"metadata\": {}\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "23b71716-796e-4e45-ac99-a65989c1a859",
"name": "DA - Create Workitem IFC",
"url": "https://{{ForgeURL}}/da/us-east/v3/workitems",
"description": "POST\tworkitems\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/workitems-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"type": "text",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"type": "text",
"value": "application/json"
},
{
"description": "",
"enabled": false,
"key": "x-request-id",
"type": "text",
"value": "fpd-t-kange-da-test-001"
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": null,
"folder": "92fe8767-e6b5-4de9-ba3e-d022709b4453",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\r\n\t\"activityId\": \"{{AppNickName}}.{{ActivityName}}+{{ActivityAliasId}}\",\r\n\t\"arguments\": {\r\n\t  \"inputFile\": {\r\n\t  \t\"verb\": \"get\",\r\n\t    \"url\": \"https://content.dropboxapi.com/2/files/download\",\r\n        \"headers\": {\r\n            \"Authorization\": \"Bearer {{DropboxBearer}}\",\r\n            \"Dropbox-API-Arg\": \"{ \\\"path\\\":\\\"\\/adsk-forge\\/InputFile.rvt\\\" }\"\r\n\t\t}\r\n\t  },\r\n\t  \"inputIFC\": {\r\n\t  \t\"verb\": \"get\",\r\n\t    \"url\": \"https://content.dropboxapi.com/2/files/download\",\r\n        \"headers\": {\r\n            \"Authorization\": \"Bearer {{DropboxBearer}}\",\r\n            \"Dropbox-API-Arg\": \"{ \\\"path\\\":\\\"\\/adsk-forge\\/InputFile.ifc\\\" }\"\r\n\t\t}\r\n\t  },\r\n\t  \"outputFile\": {\r\n        \"verb\": \"post\",\r\n        \"url\": \"https://content.dropboxapi.com/2/files/upload\",\r\n        \"headers\":{\r\n            \"Authorization\": \"Bearer {{DropboxBearer}}\",\r\n        \t\"Content-Type\": \"application/octet-stream\",\r\n        \t\"Dropbox-API-Arg\": \"{\\\"path\\\":\\\"\\/adsk-forge\\/OutputFile.rvt\\\", \\\"mode\\\":\\\"add\\\"}\"\r\n        }\r\n\t  }\r\n\t}\r\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n//x-request-id: fpd-t-kange-da-test-001\n",
"pathVariables": {}
},
{
"id": "24b4aaee-79d0-459b-8ff7-bc76b3ab15cb",
"name": "Data Mgmt - GET Hub List",
"url": "https://{{ForgeURL}}/project/v1/hubs",
"description": "Get Hub list\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/hubs-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"value": "application/vnd.api+json"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
]
}
}
],
"folder": "d1d9b5ce-9844-4787-9cfc-1725027606be",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "250da7e5-e5ce-47da-86e7-4f8a09c288cc",
"name": "Model - Request Geometry Extraction (To OBJ)",
"url": "https://{{ForgeURL}}/modelderivative/v2/designdata/job",
"description": "Extract geometrics to OBJ\n\nhttps://developer.autodesk.com/en/docs/model-derivative/v2/reference/http/job-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/json",
"description": "",
"enabled": true
},
{
"key": "x-ads-force",
"value": "true",
"description": "",
"enabled": true
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"id": "9e494eb0-53a8-4861-9866-af27bfda886f",
"exec": [
"/*",
" * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $",
" *",
" *  Licensed under the BSD 3-Clause License.",
" *    http://opensource.org/licenses/BSD-3-Clause",
" *",
" *  References:",
" *    http://en.wikipedia.org/wiki/Base64",
" */",
"",
"(function(global) {",
"    'use strict';",
"    // existing version for noConflict()",
"    var _Base64 = global.Base64;",
"    var version = \"2.1.9\";",
"    // if node.js, we use Buffer",
"    var buffer;",
"    if (typeof module !== 'undefined' && module.exports) {",
"        try {",
"            buffer = require('buffer').Buffer;",
"        } catch (err) {}",
"    }",
"    // constants",
"    var b64chars",
"        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';",
"    var b64tab = function(bin) {",
"        var t = {};",
"        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;",
"        return t;",
"    }(b64chars);",
"    var fromCharCode = String.fromCharCode;",
"    // encoder stuff",
"    var cb_utob = function(c) {",
"        if (c.length < 2) {",
"            var cc = c.charCodeAt(0);",
"            return cc < 0x80 ? c",
"                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))",
"                                + fromCharCode(0x80 | (cc & 0x3f)))",
"                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))",
"                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                   + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        } else {",
"            var cc = 0x10000",
"                + (c.charCodeAt(0) - 0xD800) * 0x400",
"                + (c.charCodeAt(1) - 0xDC00);",
"            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))",
"                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))",
"                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                    + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        }",
"    };",
"    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;",
"    var utob = function(u) {",
"        return u.replace(re_utob, cb_utob);",
"    };",
"    var cb_encode = function(ccc) {",
"        var padlen = [0, 2, 1][ccc.length % 3],",
"        ord = ccc.charCodeAt(0) << 16",
"            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)",
"            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),",
"        chars = [",
"            b64chars.charAt( ord >>> 18),",
"            b64chars.charAt((ord >>> 12) & 63),",
"            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),",
"            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)",
"        ];",
"        return chars.join('');",
"    };",
"    var btoa = global.btoa ? function(b) {",
"        return global.btoa(b);",
"    } : function(b) {",
"        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);",
"    };",
"    var _encode = buffer ? function (u) {",
"        return (u.constructor === buffer.constructor ? u : new buffer(u))",
"        .toString('base64')",
"    }",
"    : function (u) { return btoa(utob(u)) }",
"    ;",
"    var encode = function(u, urisafe) {",
"        return !urisafe",
"            ? _encode(String(u))",
"            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {",
"                return m0 == '+' ? '-' : '_';",
"            }).replace(/=/g, '');",
"    };",
"    var encodeURI = function(u) { return encode(u, true) };",
"    // decoder stuff",
"    var re_btou = new RegExp([",
"        '[\\xC0-\\xDF][\\x80-\\xBF]',",
"        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',",
"        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'",
"    ].join('|'), 'g');",
"    var cb_btou = function(cccc) {",
"        switch(cccc.length) {",
"        case 4:",
"            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)",
"                |    ((0x3f & cccc.charCodeAt(1)) << 12)",
"                |    ((0x3f & cccc.charCodeAt(2)) <<  6)",
"                |     (0x3f & cccc.charCodeAt(3)),",
"            offset = cp - 0x10000;",
"            return (fromCharCode((offset  >>> 10) + 0xD800)",
"                    + fromCharCode((offset & 0x3FF) + 0xDC00));",
"        case 3:",
"            return fromCharCode(",
"                ((0x0f & cccc.charCodeAt(0)) << 12)",
"                    | ((0x3f & cccc.charCodeAt(1)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(2))",
"            );",
"        default:",
"            return  fromCharCode(",
"                ((0x1f & cccc.charCodeAt(0)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(1))",
"            );",
"        }",
"    };",
"    var btou = function(b) {",
"        return b.replace(re_btou, cb_btou);",
"    };",
"    var cb_decode = function(cccc) {",
"        var len = cccc.length,",
"        padlen = len % 4,",
"        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)",
"            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)",
"            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)",
"            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),",
"        chars = [",
"            fromCharCode( n >>> 16),",
"            fromCharCode((n >>>  8) & 0xff),",
"            fromCharCode( n         & 0xff)",
"        ];",
"        chars.length -= [0, 0, 2, 1][padlen];",
"        return chars.join('');",
"    };",
"    var atob = global.atob ? function(a) {",
"        return global.atob(a);",
"    } : function(a){",
"        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);",
"    };",
"    var _decode = buffer ? function(a) {",
"        return (a.constructor === buffer.constructor",
"                ? a : new buffer(a, 'base64')).toString();",
"    }",
"    : function(a) { return btou(atob(a)) };",
"    var decode = function(a){",
"        return _decode(",
"            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })",
"                .replace(/[^A-Za-z0-9\\+\\/]/g, '')",
"        );",
"    };",
"    var noConflict = function() {",
"        var Base64 = global.Base64;",
"        global.Base64 = _Base64;",
"        return Base64;",
"    };",
"    // export Base64",
"    global.Base64 = {",
"        VERSION: version,",
"        atob: atob,",
"        btoa: btoa,",
"        fromBase64: decode,",
"        toBase64: encode,",
"        utob: utob,",
"        encode: encode,",
"        encodeURI: encodeURI,",
"        btou: btou,",
"        decode: decode,",
"        noConflict: noConflict",
"    };",
"    // if ES5 is available, make Base64.extendString() available",
"    if (typeof Object.defineProperty === 'function') {",
"        var noEnum = function(v){",
"            return {value:v,enumerable:false,writable:true,configurable:true};",
"        };",
"        global.Base64.extendString = function () {",
"            Object.defineProperty(",
"                String.prototype, 'fromBase64', noEnum(function () {",
"                    return decode(this)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64', noEnum(function (urisafe) {",
"                    return encode(this, urisafe)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64URI', noEnum(function () {",
"                    return encode(this, true)",
"                }));",
"        };",
"    }",
"    // that's it!",
"    if (global['Meteor']) {",
"        Base64 = global.Base64; // for normal export in Meteor.js",
"    }",
"    if (typeof module !== 'undefined' && module.exports) {",
"        module.exports.Base64 = global.Base64;",
"    }",
"    if (typeof define === 'function' && define.amd) {",
"        // AMD. Register as an anonymous module.",
"        define([], function(){ return global.Base64 });",
"    }",
"})(typeof self !== 'undefined' ? self",
" : typeof window !== 'undefined' ? window",
" : typeof global !== 'undefined' ? global",
" : this",
");",
"",
"var rootFilename = postman.getEnvironmentVariable( \"RootFilename\" );",
"",
"if( !rootFilename ) throw \"rootFilename cannot be empty\";",
"",
"postman.setEnvironmentVariable( \"Base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );"
],
"type": "text/javascript"
}
},
{
"listen": "test",
"script": {
"id": "a498d1f5-0400-40bc-b913-b1b09e1152eb",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200; // or 201 if called a second time",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data =JSON.parse( responseBody );",
"tests[\"Success\"] = data.result === \"success\"; // or Created if called a second time"
],
"type": "text/javascript"
}
}
],
"folder": "63cd52eb-ecb1-4353-88c2-cab4ea26dd8f",
"preRequestScript": "/*\n * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n\n(function(global) {\n    'use strict';\n    // existing version for noConflict()\n    var _Base64 = global.Base64;\n    var version = \"2.1.9\";\n    // if node.js, we use Buffer\n    var buffer;\n    if (typeof module !== 'undefined' && module.exports) {\n        try {\n            buffer = require('buffer').Buffer;\n        } catch (err) {}\n    }\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                   + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa ? function(b) {\n        return global.btoa(b);\n    } : function(b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = buffer ? function (u) {\n        return (u.constructor === buffer.constructor ? u : new buffer(u))\n        .toString('base64')\n    }\n    : function (u) { return btoa(utob(u)) }\n    ;\n    var encode = function(u, urisafe) {\n        return !urisafe\n            ? _encode(String(u))\n            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {\n                return m0 == '+' ? '-' : '_';\n            }).replace(/=/g, '');\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    // decoder stuff\n    var re_btou = new RegExp([\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n    ].join('|'), 'g');\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var atob = global.atob ? function(a) {\n        return global.atob(a);\n    } : function(a){\n        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);\n    };\n    var _decode = buffer ? function(a) {\n        return (a.constructor === buffer.constructor\n                ? a : new buffer(a, 'base64')).toString();\n    }\n    : function(a) { return btou(atob(a)) };\n    var decode = function(a){\n        return _decode(\n            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n        );\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    // that's it!\n    if (global['Meteor']) {\n        Base64 = global.Base64; // for normal export in Meteor.js\n    }\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], function(){ return global.Base64 });\n    }\n})(typeof self !== 'undefined' ? self\n : typeof window !== 'undefined' ? window\n : typeof global !== 'undefined' ? global\n : this\n);\n\nvar rootFilename = postman.getEnvironmentVariable( \"RootFilename\" );\n\nif( !rootFilename ) throw \"rootFilename cannot be empty\";\n\npostman.setEnvironmentVariable( \"Base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );",
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200; // or 201 if called a second time\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data =JSON.parse( responseBody );\ntests[\"Success\"] = data.result === \"success\"; // or Created if called a second time",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\n   \"input\": {\n     \"urn\": \"{{Base64URN}}\"\n   },\n   \"output\": {\n     \"formats\": [\n       {\n         \"type\": \"obj\",\n         \"advanced\": {\n           \"modelGuid\":\"{{ModelGuid}}\",\n           \"objectIds\":[1,2,3]\n         }\n       }\n     ]\n   }\n }",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\nx-ads-force: true\n",
"pathVariables": {}
},
{
"id": "2a20672c-2a06-4243-ad4c-7bc27753bc24",
"name": "DA - Setup Nickname",
"url": "https://{{ForgeURL}}/da/us-east/v3/forgeapps/:id",
"description": "PATCH\tforgeapps/:id\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/forgeapps-id-PATCH/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"type": "text",
"enabled": true,
"description": ""
},
{
"key": "Content-Type",
"value": "application/json",
"type": "text",
"enabled": true,
"description": ""
}
],
"method": "PATCH",
"pathVariableData": [
{
"key": "id",
"value": "me"
}
],
"queryParams": [],
"auth": null,
"events": null,
"folder": "8b102939-3020-4983-a2fb-f3cc601def15",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\r\n\t\"nickname\": \"{{AppNickName}}\"\r\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {
"id": "me"
}
},
{
"id": "2a7f7df7-a375-4987-b315-e96470399186",
"name": "Model - Translation Status",
"url": "https://{{ForgeURL}}/modelderivative/v2/designdata/{{Base64URN}}/manifest",
"description": "Check File Translation Status.\n\nhttps://developer.autodesk.com/en/docs/model-derivative/v2/reference/http/urn-manifest-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/json",
"description": "",
"enabled": true
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"id": "2ae6e4e7-f60b-4139-a5a4-8ff22e83040b",
"exec": [
"/*",
" * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $",
" *",
" *  Licensed under the BSD 3-Clause License.",
" *    http://opensource.org/licenses/BSD-3-Clause",
" *",
" *  References:",
" *    http://en.wikipedia.org/wiki/Base64",
" */",
"",
"(function(global) {",
"    'use strict';",
"    // existing version for noConflict()",
"    var _Base64 = global.Base64;",
"    var version = \"2.1.9\";",
"    // if node.js, we use Buffer",
"    var buffer;",
"    if (typeof module !== 'undefined' && module.exports) {",
"        try {",
"            buffer = require('buffer').Buffer;",
"        } catch (err) {}",
"    }",
"    // constants",
"    var b64chars",
"        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';",
"    var b64tab = function(bin) {",
"        var t = {};",
"        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;",
"        return t;",
"    }(b64chars);",
"    var fromCharCode = String.fromCharCode;",
"    // encoder stuff",
"    var cb_utob = function(c) {",
"        if (c.length < 2) {",
"            var cc = c.charCodeAt(0);",
"            return cc < 0x80 ? c",
"                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))",
"                                + fromCharCode(0x80 | (cc & 0x3f)))",
"                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))",
"                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                   + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        } else {",
"            var cc = 0x10000",
"                + (c.charCodeAt(0) - 0xD800) * 0x400",
"                + (c.charCodeAt(1) - 0xDC00);",
"            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))",
"                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))",
"                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                    + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        }",
"    };",
"    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;",
"    var utob = function(u) {",
"        return u.replace(re_utob, cb_utob);",
"    };",
"    var cb_encode = function(ccc) {",
"        var padlen = [0, 2, 1][ccc.length % 3],",
"        ord = ccc.charCodeAt(0) << 16",
"            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)",
"            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),",
"        chars = [",
"            b64chars.charAt( ord >>> 18),",
"            b64chars.charAt((ord >>> 12) & 63),",
"            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),",
"            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)",
"        ];",
"        return chars.join('');",
"    };",
"    var btoa = global.btoa ? function(b) {",
"        return global.btoa(b);",
"    } : function(b) {",
"        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);",
"    };",
"    var _encode = buffer ? function (u) {",
"        return (u.constructor === buffer.constructor ? u : new buffer(u))",
"        .toString('base64')",
"    }",
"    : function (u) { return btoa(utob(u)) }",
"    ;",
"    var encode = function(u, urisafe) {",
"        return !urisafe",
"            ? _encode(String(u))",
"            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {",
"                return m0 == '+' ? '-' : '_';",
"            }).replace(/=/g, '');",
"    };",
"    var encodeURI = function(u) { return encode(u, true) };",
"    // decoder stuff",
"    var re_btou = new RegExp([",
"        '[\\xC0-\\xDF][\\x80-\\xBF]',",
"        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',",
"        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'",
"    ].join('|'), 'g');",
"    var cb_btou = function(cccc) {",
"        switch(cccc.length) {",
"        case 4:",
"            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)",
"                |    ((0x3f & cccc.charCodeAt(1)) << 12)",
"                |    ((0x3f & cccc.charCodeAt(2)) <<  6)",
"                |     (0x3f & cccc.charCodeAt(3)),",
"            offset = cp - 0x10000;",
"            return (fromCharCode((offset  >>> 10) + 0xD800)",
"                    + fromCharCode((offset & 0x3FF) + 0xDC00));",
"        case 3:",
"            return fromCharCode(",
"                ((0x0f & cccc.charCodeAt(0)) << 12)",
"                    | ((0x3f & cccc.charCodeAt(1)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(2))",
"            );",
"        default:",
"            return  fromCharCode(",
"                ((0x1f & cccc.charCodeAt(0)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(1))",
"            );",
"        }",
"    };",
"    var btou = function(b) {",
"        return b.replace(re_btou, cb_btou);",
"    };",
"    var cb_decode = function(cccc) {",
"        var len = cccc.length,",
"        padlen = len % 4,",
"        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)",
"            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)",
"            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)",
"            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),",
"        chars = [",
"            fromCharCode( n >>> 16),",
"            fromCharCode((n >>>  8) & 0xff),",
"            fromCharCode( n         & 0xff)",
"        ];",
"        chars.length -= [0, 0, 2, 1][padlen];",
"        return chars.join('');",
"    };",
"    var atob = global.atob ? function(a) {",
"        return global.atob(a);",
"    } : function(a){",
"        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);",
"    };",
"    var _decode = buffer ? function(a) {",
"        return (a.constructor === buffer.constructor",
"                ? a : new buffer(a, 'base64')).toString();",
"    }",
"    : function(a) { return btou(atob(a)) };",
"    var decode = function(a){",
"        return _decode(",
"            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })",
"                .replace(/[^A-Za-z0-9\\+\\/]/g, '')",
"        );",
"    };",
"    var noConflict = function() {",
"        var Base64 = global.Base64;",
"        global.Base64 = _Base64;",
"        return Base64;",
"    };",
"    // export Base64",
"    global.Base64 = {",
"        VERSION: version,",
"        atob: atob,",
"        btoa: btoa,",
"        fromBase64: decode,",
"        toBase64: encode,",
"        utob: utob,",
"        encode: encode,",
"        encodeURI: encodeURI,",
"        btou: btou,",
"        decode: decode,",
"        noConflict: noConflict",
"    };",
"    // if ES5 is available, make Base64.extendString() available",
"    if (typeof Object.defineProperty === 'function') {",
"        var noEnum = function(v){",
"            return {value:v,enumerable:false,writable:true,configurable:true};",
"        };",
"        global.Base64.extendString = function () {",
"            Object.defineProperty(",
"                String.prototype, 'fromBase64', noEnum(function () {",
"                    return decode(this)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64', noEnum(function (urisafe) {",
"                    return encode(this, urisafe)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64URI', noEnum(function () {",
"                    return encode(this, true)",
"                }));",
"        };",
"    }",
"    // that's it!",
"    if (global['Meteor']) {",
"        Base64 = global.Base64; // for normal export in Meteor.js",
"    }",
"    if (typeof module !== 'undefined' && module.exports) {",
"        module.exports.Base64 = global.Base64;",
"    }",
"    if (typeof define === 'function' && define.amd) {",
"        // AMD. Register as an anonymous module.",
"        define([], function(){ return global.Base64 });",
"    }",
"})(typeof self !== 'undefined' ? self",
" : typeof window !== 'undefined' ? window",
" : typeof global !== 'undefined' ? global",
" : this",
");",
"",
"postman.setEnvironmentVariable( \"Base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );"
],
"type": "text/javascript"
}
},
{
"listen": "test",
"script": {
"id": "e325f52d-f675-49e7-8ed0-ff768e22b356",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200 ;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data = JSON.parse( responseBody );",
"tests[\"Response has progress\"] = data.hasOwnProperty( \"progress\" );",
"tests[\"Response has status\"] = data.hasOwnProperty( \"status\" );",
"tests[\"Response has urn\"] = data.hasOwnProperty( \"urn\" );",
"tests[\"urn verified\"] = data.urn === postman.getEnvironmentVariable( \"base64URN\" );"
],
"type": "text/javascript"
}
}
],
"folder": "63cd52eb-ecb1-4353-88c2-cab4ea26dd8f",
"preRequestScript": "/*\n * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n\n(function(global) {\n    'use strict';\n    // existing version for noConflict()\n    var _Base64 = global.Base64;\n    var version = \"2.1.9\";\n    // if node.js, we use Buffer\n    var buffer;\n    if (typeof module !== 'undefined' && module.exports) {\n        try {\n            buffer = require('buffer').Buffer;\n        } catch (err) {}\n    }\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                   + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa ? function(b) {\n        return global.btoa(b);\n    } : function(b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = buffer ? function (u) {\n        return (u.constructor === buffer.constructor ? u : new buffer(u))\n        .toString('base64')\n    }\n    : function (u) { return btoa(utob(u)) }\n    ;\n    var encode = function(u, urisafe) {\n        return !urisafe\n            ? _encode(String(u))\n            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {\n                return m0 == '+' ? '-' : '_';\n            }).replace(/=/g, '');\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    // decoder stuff\n    var re_btou = new RegExp([\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n    ].join('|'), 'g');\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var atob = global.atob ? function(a) {\n        return global.atob(a);\n    } : function(a){\n        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);\n    };\n    var _decode = buffer ? function(a) {\n        return (a.constructor === buffer.constructor\n                ? a : new buffer(a, 'base64')).toString();\n    }\n    : function(a) { return btou(atob(a)) };\n    var decode = function(a){\n        return _decode(\n            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n        );\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    // that's it!\n    if (global['Meteor']) {\n        Base64 = global.Base64; // for normal export in Meteor.js\n    }\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], function(){ return global.Base64 });\n    }\n})(typeof self !== 'undefined' ? self\n : typeof window !== 'undefined' ? window\n : typeof global !== 'undefined' ? global\n : this\n);\n\npostman.setEnvironmentVariable( \"Base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );",
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200 ;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data = JSON.parse( responseBody );\ntests[\"Response has progress\"] = data.hasOwnProperty( \"progress\" );\ntests[\"Response has status\"] = data.hasOwnProperty( \"status\" );\ntests[\"Response has urn\"] = data.hasOwnProperty( \"urn\" );\ntests[\"urn verified\"] = data.urn === postman.getEnvironmentVariable( \"base64URN\" );",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "32ea86a1-c9e9-49ca-b3e2-9bbafcb3cd23",
"name": "BIM360 - PATCH Project Image",
"url": "https://{{ForgeURL}}/hq/v1/accounts/{{AccountId}}/projects/{{ProjectId}}/image\n",
"description": "Patch project image\n\nhttps://forge.autodesk.com/en/docs/bim360/v1/reference/http/projects-:project_id-image-PATCH/",
"data": [
{
"key": "chunk",
"value": "",
"description": "",
"type": "file",
"enabled": true
},
{
"key": "type",
"value": "image/png",
"description": "",
"type": "text",
"enabled": true
}
],
"dataMode": "params",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "multipart/form-data",
"description": ""
}
],
"method": "PATCH",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "19cbcbfd-0ac8-43b6-81dc-91b000adef01",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
],
"type": "text/javascript"
}
}
],
"folder": "36b5c55e-1372-4a60-9cb6-3014f8ca89a4",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: multipart/form-data\n",
"pathVariables": {}
},
{
"id": "3644207f-9768-446b-8f56-6f5ad3d1e72a",
"name": "Data Mgmt - GET Bucket List",
"url": "https://{{ForgeURL}}/oss/v2/buckets",
"description": "Get bucket list\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/buckets-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"value": "application/json"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;"
]
}
}
],
"folder": "67ccc792-23b1-44e0-959e-d3a991dce762",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "39400c89-95a8-462c-8de0-c36bdb7f093a",
"name": "DA - Create Workitem",
"url": "https://{{ForgeURL}}/da/us-east/v3/workitems",
"description": "POST\tworkitems\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/workitems-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"type": "text",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"type": "text",
"value": "application/json"
},
{
"description": "",
"enabled": false,
"key": "x-request-id",
"type": "text",
"value": "fpd-t-kange-da-test-001"
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": null,
"folder": "92fe8767-e6b5-4de9-ba3e-d022709b4453",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\r\n\t\"activityId\": \"{{AppNickName}}.{{ActivityName}}+{{ActivityAliasId}}\",\r\n\t\"arguments\": {\r\n\t  \"inputFile\": {\r\n\t  \t\"verb\": \"get\",\r\n\t    \"url\": \"https://content.dropboxapi.com/2/files/download\",\r\n        \"headers\": {\r\n            \"Authorization\": \"Bearer {{DropboxBearer}}\",\r\n            \"Dropbox-API-Arg\": \"{ \\\"path\\\":\\\"\\/adsk-forge\\/host.rvt\\\" }\"\r\n\t\t}\r\n\t  },\r\n\t  \"outputFile\": {\r\n        \"verb\": \"post\",\r\n        \"url\": \"https://content.dropboxapi.com/2/files/upload\",\r\n        \"headers\":{\r\n            \"Authorization\": \"Bearer {{DropboxBearer}}\",\r\n        \t\"Content-Type\": \"application/octet-stream\",\r\n        \t\"Dropbox-API-Arg\": \"{\\\"path\\\":\\\"\\/adsk-forge\\/result.rvt\\\", \\\"mode\\\":\\\"add\\\"}\"\r\n        }\r\n\t  }\r\n\t}\r\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n//x-request-id: fpd-t-kange-da-test-001\n",
"pathVariables": {}
},
{
"id": "399fd668-4bfd-4cba-afdd-36970c237cab",
"name": "Model - Dowload Viewable Bubble (Translated File)",
"url": "https://{{ForgeURL}}/modelderivative/v2/designdata/{{Base64URN}}/manifest/{{EscapedBubbleURN}}",
"description": "Check File Translation Status.\n\nhttps://developer.autodesk.com/en/docs/model-derivative/v2/reference/http/urn-manifest-derivativeurn-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"enabled": true,
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"enabled": true,
"key": "Content-Type",
"value": "application/json"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"id": "4c410dc3-36c6-4c21-ba97-70dac85b0a87",
"exec": [
"/*",
" * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $",
" *",
" *  Licensed under the BSD 3-Clause License.",
" *    http://opensource.org/licenses/BSD-3-Clause",
" *",
" *  References:",
" *    http://en.wikipedia.org/wiki/Base64",
" */",
"",
"(function(global) {",
"    'use strict';",
"    // existing version for noConflict()",
"    var _Base64 = global.Base64;",
"    var version = \"2.1.9\";",
"    // if node.js, we use Buffer",
"    var buffer;",
"    if (typeof module !== 'undefined' && module.exports) {",
"        try {",
"            buffer = require('buffer').Buffer;",
"        } catch (err) {}",
"    }",
"    // constants",
"    var b64chars",
"        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';",
"    var b64tab = function(bin) {",
"        var t = {};",
"        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;",
"        return t;",
"    }(b64chars);",
"    var fromCharCode = String.fromCharCode;",
"    // encoder stuff",
"    var cb_utob = function(c) {",
"        if (c.length < 2) {",
"            var cc = c.charCodeAt(0);",
"            return cc < 0x80 ? c",
"                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))",
"                                + fromCharCode(0x80 | (cc & 0x3f)))",
"                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))",
"                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                   + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        } else {",
"            var cc = 0x10000",
"                + (c.charCodeAt(0) - 0xD800) * 0x400",
"                + (c.charCodeAt(1) - 0xDC00);",
"            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))",
"                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))",
"                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                    + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        }",
"    };",
"    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;",
"    var utob = function(u) {",
"        return u.replace(re_utob, cb_utob);",
"    };",
"    var cb_encode = function(ccc) {",
"        var padlen = [0, 2, 1][ccc.length % 3],",
"        ord = ccc.charCodeAt(0) << 16",
"            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)",
"            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),",
"        chars = [",
"            b64chars.charAt( ord >>> 18),",
"            b64chars.charAt((ord >>> 12) & 63),",
"            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),",
"            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)",
"        ];",
"        return chars.join('');",
"    };",
"    var btoa = global.btoa ? function(b) {",
"        return global.btoa(b);",
"    } : function(b) {",
"        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);",
"    };",
"    var _encode = buffer ? function (u) {",
"        return (u.constructor === buffer.constructor ? u : new buffer(u))",
"        .toString('base64')",
"    }",
"    : function (u) { return btoa(utob(u)) }",
"    ;",
"    var encode = function(u, urisafe) {",
"        return !urisafe",
"            ? _encode(String(u))",
"            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {",
"                return m0 == '+' ? '-' : '_';",
"            }).replace(/=/g, '');",
"    };",
"    var encodeURI = function(u) { return encode(u, true) };",
"    // decoder stuff",
"    var re_btou = new RegExp([",
"        '[\\xC0-\\xDF][\\x80-\\xBF]',",
"        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',",
"        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'",
"    ].join('|'), 'g');",
"    var cb_btou = function(cccc) {",
"        switch(cccc.length) {",
"        case 4:",
"            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)",
"                |    ((0x3f & cccc.charCodeAt(1)) << 12)",
"                |    ((0x3f & cccc.charCodeAt(2)) <<  6)",
"                |     (0x3f & cccc.charCodeAt(3)),",
"            offset = cp - 0x10000;",
"            return (fromCharCode((offset  >>> 10) + 0xD800)",
"                    + fromCharCode((offset & 0x3FF) + 0xDC00));",
"        case 3:",
"            return fromCharCode(",
"                ((0x0f & cccc.charCodeAt(0)) << 12)",
"                    | ((0x3f & cccc.charCodeAt(1)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(2))",
"            );",
"        default:",
"            return  fromCharCode(",
"                ((0x1f & cccc.charCodeAt(0)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(1))",
"            );",
"        }",
"    };",
"    var btou = function(b) {",
"        return b.replace(re_btou, cb_btou);",
"    };",
"    var cb_decode = function(cccc) {",
"        var len = cccc.length,",
"        padlen = len % 4,",
"        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)",
"            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)",
"            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)",
"            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),",
"        chars = [",
"            fromCharCode( n >>> 16),",
"            fromCharCode((n >>>  8) & 0xff),",
"            fromCharCode( n         & 0xff)",
"        ];",
"        chars.length -= [0, 0, 2, 1][padlen];",
"        return chars.join('');",
"    };",
"    var atob = global.atob ? function(a) {",
"        return global.atob(a);",
"    } : function(a){",
"        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);",
"    };",
"    var _decode = buffer ? function(a) {",
"        return (a.constructor === buffer.constructor",
"                ? a : new buffer(a, 'base64')).toString();",
"    }",
"    : function(a) { return btou(atob(a)) };",
"    var decode = function(a){",
"        return _decode(",
"            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })",
"                .replace(/[^A-Za-z0-9\\+\\/]/g, '')",
"        );",
"    };",
"    var noConflict = function() {",
"        var Base64 = global.Base64;",
"        global.Base64 = _Base64;",
"        return Base64;",
"    };",
"    // export Base64",
"    global.Base64 = {",
"        VERSION: version,",
"        atob: atob,",
"        btoa: btoa,",
"        fromBase64: decode,",
"        toBase64: encode,",
"        utob: utob,",
"        encode: encode,",
"        encodeURI: encodeURI,",
"        btou: btou,",
"        decode: decode,",
"        noConflict: noConflict",
"    };",
"    // if ES5 is available, make Base64.extendString() available",
"    if (typeof Object.defineProperty === 'function') {",
"        var noEnum = function(v){",
"            return {value:v,enumerable:false,writable:true,configurable:true};",
"        };",
"        global.Base64.extendString = function () {",
"            Object.defineProperty(",
"                String.prototype, 'fromBase64', noEnum(function () {",
"                    return decode(this)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64', noEnum(function (urisafe) {",
"                    return encode(this, urisafe)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64URI', noEnum(function () {",
"                    return encode(this, true)",
"                }));",
"        };",
"    }",
"    // that's it!",
"    if (global['Meteor']) {",
"        Base64 = global.Base64; // for normal export in Meteor.js",
"    }",
"    if (typeof module !== 'undefined' && module.exports) {",
"        module.exports.Base64 = global.Base64;",
"    }",
"    if (typeof define === 'function' && define.amd) {",
"        // AMD. Register as an anonymous module.",
"        define([], function(){ return global.Base64 });",
"    }",
"})(typeof self !== 'undefined' ? self",
" : typeof window !== 'undefined' ? window",
" : typeof global !== 'undefined' ? global",
" : this",
");",
"",
"var bubbleURN = postman.getEnvironmentVariable( \"BubbleURN\" );",
"",
"if( !bubbleURN ) throw \"BubbleURN cannot be empty\";",
"",
"postman.setEnvironmentVariable( \"Base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );",
"",
"postman.setEnvironmentVariable( \"EscapedBubbleURN\", encodeURIComponent( bubbleURN ) );"
],
"type": "text/javascript"
}
},
{
"listen": "test",
"script": {
"id": "c6bd230d-21b9-45a6-8cf6-9107c6ff8062",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200 ;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );"
],
"type": "text/javascript"
}
}
],
"folder": "63cd52eb-ecb1-4353-88c2-cab4ea26dd8f",
"preRequestScript": "/*\n * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n\n(function(global) {\n    'use strict';\n    // existing version for noConflict()\n    var _Base64 = global.Base64;\n    var version = \"2.1.9\";\n    // if node.js, we use Buffer\n    var buffer;\n    if (typeof module !== 'undefined' && module.exports) {\n        try {\n            buffer = require('buffer').Buffer;\n        } catch (err) {}\n    }\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                   + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa ? function(b) {\n        return global.btoa(b);\n    } : function(b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = buffer ? function (u) {\n        return (u.constructor === buffer.constructor ? u : new buffer(u))\n        .toString('base64')\n    }\n    : function (u) { return btoa(utob(u)) }\n    ;\n    var encode = function(u, urisafe) {\n        return !urisafe\n            ? _encode(String(u))\n            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {\n                return m0 == '+' ? '-' : '_';\n            }).replace(/=/g, '');\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    // decoder stuff\n    var re_btou = new RegExp([\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n    ].join('|'), 'g');\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var atob = global.atob ? function(a) {\n        return global.atob(a);\n    } : function(a){\n        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);\n    };\n    var _decode = buffer ? function(a) {\n        return (a.constructor === buffer.constructor\n                ? a : new buffer(a, 'base64')).toString();\n    }\n    : function(a) { return btou(atob(a)) };\n    var decode = function(a){\n        return _decode(\n            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n        );\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    // that's it!\n    if (global['Meteor']) {\n        Base64 = global.Base64; // for normal export in Meteor.js\n    }\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], function(){ return global.Base64 });\n    }\n})(typeof self !== 'undefined' ? self\n : typeof window !== 'undefined' ? window\n : typeof global !== 'undefined' ? global\n : this\n);\n\nvar bubbleURN = postman.getEnvironmentVariable( \"BubbleURN\" );\n\nif( !bubbleURN ) throw \"BubbleURN cannot be empty\";\n\npostman.setEnvironmentVariable( \"Base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );\n\npostman.setEnvironmentVariable( \"EscapedBubbleURN\", encodeURIComponent( bubbleURN ) );",
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200 ;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "3d21071b-3af9-41ee-8140-d3ebb65f938b",
"name": "BIM360 - GET Project Industry Roles",
"url": "https://{{ForgeURL}}/hq/v2/accounts/{{AccountId}}/projects/{{ProjectId}}/industry_roles",
"description": "GET\tprojects/:project_id/industry_roles\n\nhttps://forge.autodesk.com/en/docs/bim360/v1/reference/http/projects-project_id-industry_roles-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/json",
"enabled": true
},
{
"key": "x-user-id",
"value": "Y7NCQCJ6KWDV",
"description": "",
"type": "text",
"enabled": false
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "fc644405-677b-4add-adfc-6e2e14d4baef",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
],
"type": "text/javascript"
}
}
],
"folder": "36b5c55e-1372-4a60-9cb6-3014f8ca89a4",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n//x-user-id: Y7NCQCJ6KWDV\n",
"pathVariables": {}
},
{
"id": "40abadfc-4e40-4c8a-acf2-3f49fe248cd7",
"name": "Data Mgmt - GET Folder Search",
"url": "https://{{ForgeURL}}/data/v1/projects/{{ProjectId}}/folders/{{FolderId}}/search?filter[*]",
"description": "Get Project\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/hubs-hub_id-projects-project_id-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/vnd.api+json",
"description": "",
"enabled": true
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [
{
"key": "filter[*]",
"value": "",
"equals": false,
"description": "",
"enabled": true
}
],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
]
}
}
],
"folder": "5635befe-82b8-453d-b0df-440eee29ccdc",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "40bca3b2-6c63-4969-80ca-08753442b7c8",
"name": "Data Mgmt - Bucket Creation",
"url": "https://{{ForgeURL}}/oss/v2/buckets",
"description": "To create a bucket for store files.\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/buckets-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"key": "Content-Type",
"value": "application/json"
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"type": "text/javascript",
"exec": [
"var bucketName = postman.getEnvironmentVariable( \"ClientKey\" );\r",
"var d1 = new Date ();\r",
"bucketName += d1.toISOString();\r",
"bucketName = bucketName.replace( /[\\-:\\.]/g, '' ).toLowerCase();\r",
"postman.setEnvironmentVariable( \"BucketName\", bucketName );"
]
}
},
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data = JSON.parse( responseBody );",
"tests[\"Key verified\"] = data.key === postman.getEnvironmentVariable( \"BucketName\" );"
]
}
}
],
"folder": "67ccc792-23b1-44e0-959e-d3a991dce762",
"preRequestScript": "var bucketName = postman.getEnvironmentVariable( \"ClientKey\" );\r\nvar d1 = new Date ();\r\nbucketName += d1.toISOString();\r\nbucketName = bucketName.replace( /[\\-:\\.]/g, '' ).toLowerCase();\r\npostman.setEnvironmentVariable( \"BucketName\", bucketName );",
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data = JSON.parse( responseBody );\ntests[\"Key verified\"] = data.key === postman.getEnvironmentVariable( \"BucketName\" );",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\n    \"bucketKey\": \"{{BucketName}}\",\n    \"policyKey\": \"{{BucketType}}\"\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "43c24e01-4f34-44e6-8a4c-d19d09608527",
"name": "Three Legged - Token Request",
"url": "https://{{ForgeURL}}/authentication/v1/authenticate",
"description": "https://developer.autodesk.com/en/docs/oauth/v2/reference/http/authenticate-POST/",
"data": [
{
"key": "client_id",
"value": "{{ClientKey}}",
"type": "text",
"enabled": true
},
{
"key": "client_secret",
"value": "{{ClientSecret}}",
"type": "text",
"enabled": true
},
{
"key": "grant_type",
"value": "client_credentials",
"type": "text",
"enabled": true
},
{
"key": "scope",
"value": "{{OAuthScopes}}",
"type": "text",
"enabled": true
}
],
"dataMode": "urlencoded",
"headerData": [],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": {
"type": "oauth2",
"oauth2": [
{
"key": "accessToken",
"value": "eyJhbGciOiJIUzI1NiIsImtpZCI6Imp3dF9zeW1tZXRyaWNfa2V5In0.eyJ1c2VyaWQiOiJXOFpEUExVVFNKS1oiLCJleHAiOjE1NTE2MDUwMTUsInNjb3BlIjpbImRhdGE6cmVhZCIsImRhdGE6d3JpdGUiLCJkYXRhOmNyZWF0ZSIsImRhdGE6c2VhcmNoIiwiYnVja2V0OmNyZWF0ZSIsImJ1Y2tldDpyZWFkIiwiYnVja2V0OnVwZGF0ZSIsImJ1Y2tldDpkZWxldGUiLCJhY2NvdW50OnJlYWQiLCJhY2NvdW50OndyaXRlIiwiY29kZTphbGwiXSwiY2xpZW50X2lkIjoiTGtXRUo3eHBiR1A2M3g0SEwzMzVZNm0yNm9Ba0dHb0YiLCJncmFudF9pZCI6IldvWGc3T0ZsTUZxaWJsT2hMd1RmaWdTZzBLcTc1NXhxIiwiYXVkIjoiaHR0cHM6Ly9hdXRvZGVzay5jb20vYXVkL2p3dGV4cDYwIiwianRpIjoiSmNCVFpqc3RvVE5lOHNUQjFmYnpUTWY3TnB6SG9LVFFOTjN4a2x6aXZPMk9KNjVDZVFQNFdrRlF1T1g2cTRHUyJ9.rGAXZ4ETZFmLbGFlbT8dQoM2R4NinoeO9RGEQfvtnls",
"type": "string"
},
{
"key": "tokenType",
"value": "Bearer",
"type": "string"
},
{
"key": "addTokenTo",
"value": "header",
"type": "string"
}
]
},
"events": [
{
"listen": "test",
"script": {
"id": "fd77ff38-172a-4524-a86f-96d52c161887",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200 ;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data = JSON.parse( responseBody );",
"tests[\"Bearer ok\"] = data.access_token !== '' ;",
"",
"postman.setEnvironmentVariable( \"Bearer\", data.access_token );"
],
"type": "text/javascript"
}
}
],
"folder": "aa6fbf08-6622-4c6c-bb6e-d72c73cbbdfa",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200 ;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data = JSON.parse( responseBody );\ntests[\"Bearer ok\"] = data.access_token !== '' ;\n\npostman.setEnvironmentVariable( \"Bearer\", data.access_token );",
"currentHelper": "oAuth2",
"helperAttributes": {
"id": "oAuth2",
"accessToken": "eyJhbGciOiJIUzI1NiIsImtpZCI6Imp3dF9zeW1tZXRyaWNfa2V5In0.eyJ1c2VyaWQiOiJXOFpEUExVVFNKS1oiLCJleHAiOjE1NTE2MDUwMTUsInNjb3BlIjpbImRhdGE6cmVhZCIsImRhdGE6d3JpdGUiLCJkYXRhOmNyZWF0ZSIsImRhdGE6c2VhcmNoIiwiYnVja2V0OmNyZWF0ZSIsImJ1Y2tldDpyZWFkIiwiYnVja2V0OnVwZGF0ZSIsImJ1Y2tldDpkZWxldGUiLCJhY2NvdW50OnJlYWQiLCJhY2NvdW50OndyaXRlIiwiY29kZTphbGwiXSwiY2xpZW50X2lkIjoiTGtXRUo3eHBiR1A2M3g0SEwzMzVZNm0yNm9Ba0dHb0YiLCJncmFudF9pZCI6IldvWGc3T0ZsTUZxaWJsT2hMd1RmaWdTZzBLcTc1NXhxIiwiYXVkIjoiaHR0cHM6Ly9hdXRvZGVzay5jb20vYXVkL2p3dGV4cDYwIiwianRpIjoiSmNCVFpqc3RvVE5lOHNUQjFmYnpUTWY3TnB6SG9LVFFOTjN4a2x6aXZPMk9KNjVDZVFQNFdrRlF1T1g2cTRHUyJ9.rGAXZ4ETZFmLbGFlbT8dQoM2R4NinoeO9RGEQfvtnls",
"addTokenTo": "header",
"tokenType": "Bearer"
},
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "",
"pathVariables": {}
},
{
"id": "43d9a843-15cc-4f33-ae86-a943bbb09263",
"name": "Data Mgmt - GET Personal Project List",
"url": "https://{{ForgeURL}}/project/v1/hubs/{{HubId}}/projects?filter[extension.type]=projects:autodesk.a360:PersonalProject",
"description": "Get Project List\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/hubs-hub_id-projects-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"value": "application/vnd.api+json"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [
{
"key": "filter[extension.type]",
"value": "projects:autodesk.a360:PersonalProject",
"equals": true,
"description": "",
"enabled": true
}
],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
]
}
}
],
"folder": "dc6ff017-a212-42aa-9104-e2e71f5199dc",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "486323a9-c4ff-4029-b07f-7fc152020723",
"name": "Data Mgmt - Get File List",
"url": "https://{{ForgeURL}}/oss/v2/buckets/{{BucketName}}/objects",
"description": "List files in a bucket.\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/buckets-:bucketKey-objects-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"key": "Content-Type",
"value": "application/json"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[ \"Content-Type is json\" ] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;"
]
}
}
],
"folder": "67ccc792-23b1-44e0-959e-d3a991dce762",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[ \"Content-Type is json\" ] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "48d1d18e-c55e-4e3d-8188-1815df84084b",
"name": "BIM360 - PATCH Account Users Copy",
"url": "https://{{ForgeURL}}/hq/v1/accounts/{{AccountId}}/users/{{UserId}}",
"description": "Get account user list\n\nhttps://developer.autodesk.com/en/docs/bim360/v1/reference/http/users-GET/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/json"
}
],
"method": "PATCH",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "6f7865eb-9447-422c-973d-fdc6114b7fc3",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
],
"type": "text/javascript"
}
}
],
"folder": "36b5c55e-1372-4a60-9cb6-3014f8ca89a4",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\n  \"status\":\"inactive\"\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "4c3dc5cd-9c8b-4be0-a7b7-eb4067f74822",
"name": "BIM360 - PATCH Disable User",
"url": "https://{{ForgeURL}}/hq/v1/accounts/{{AccountId}}/users/{{UserId}}",
"description": "Get account user list\n\nhttps://developer.autodesk.com/en/docs/bim360/v1/reference/http/users-GET/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/json",
"description": ""
}
],
"method": "PATCH",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "0ff1c5fe-d501-442c-9006-c2d810bd01cc",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
],
"type": "text/javascript"
}
}
],
"folder": "36b5c55e-1372-4a60-9cb6-3014f8ca89a4",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\n  \"status\":\"inactive\"\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "4d4146ad-d175-4878-a1e8-f53693e5487b",
"name": "Data Mgmt - GET Project List",
"url": "https://{{ForgeURL}}/project/v1/hubs/{{HubId}}/projects",
"description": "Get Project List\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/hubs-hub_id-projects-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"value": "application/vnd.api+json"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
]
}
}
],
"folder": "58ed33dd-80ec-4ff7-ac2b-73f8a0224af2",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "51946080-f2d6-448b-b3ed-15d632f6e84c",
"name": "Data Mgmt - Create Storage",
"url": "https://{{ForgeURL}}/data/v1/projects/{{ProjectId}}/storage",
"description": "Data Mgmt - Create Storage\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/projects-project_id-storage-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/vnd.api+json",
"enabled": true
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "d622f540-5486-46f2-bf43-61aa63a30381",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"",
"var response = JSON.parse( responseBody );",
"var data = response.data;",
"var urn = data.id.split('/');",
"",
"postman.setEnvironmentVariable( \"StorageFilename\", urn[1] );",
"postman.setEnvironmentVariable( \"rootFilename\", urn[1] );"
],
"type": "text/javascript"
}
}
],
"folder": "b31706b7-1e86-4b20-9655-e34255160c8d",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;\n\nvar response = JSON.parse( responseBody );\nvar data = response.data;\nvar urn = data.id.split('/');\n\npostman.setEnvironmentVariable( \"StorageFilename\", urn[1] );\npostman.setEnvironmentVariable( \"rootFilename\", urn[1] );",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\n   \"jsonapi\":{\n      \"version\":\"1.0\"\n   },\n   \"data\":{\n      \"type\":\"objects\",\n      \"attributes\":{\n         \"name\":\"{{Filename}}\"\n      },\n      \"relationships\":{\n         \"target\":{\n            \"data\":{\n               \"type\":\"folders\",\n               \"id\":\"{{FolderId}}\"\n            }\n         }\n      }\n   }\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "578effb1-c95d-4c9a-9883-c0ddbb60d386",
"name": "DA - Get Nickname",
"url": "https://{{ForgeURL}}/da/us-east/v3/forgeapps/:id",
"description": "GET\tforgeapps/:id\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/forgeapps-id-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"type": "text",
"enabled": true,
"description": ""
},
{
"key": "Content-Type",
"value": "application/json",
"type": "text",
"enabled": true,
"description": ""
}
],
"method": "GET",
"pathVariableData": [
{
"key": "id",
"value": "me"
}
],
"queryParams": [],
"auth": null,
"events": null,
"folder": "8b102939-3020-4983-a2fb-f3cc601def15",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {
"id": "me"
}
},
{
"id": "58351161-730c-464b-b3f2-cb94197352ad",
"name": "DA - Upload AppBundle",
"url": "{{AppBundleUploadURL}}",
"description": "POST\tappbundles\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/appbundles-POST/",
"data": [
{
"key": "key",
"value": "{{AppBundleFormKey}}",
"description": "",
"type": "text",
"enabled": true
},
{
"key": "content-type",
"value": "{{AppBundleFormCT}}",
"description": "",
"type": "text",
"enabled": true
},
{
"key": "policy",
"value": "{{AppBundleFormPolicy}}",
"description": "",
"type": "text",
"enabled": true
},
{
"key": "success_action_status",
"value": "{{AppBundleFormSAS}}",
"description": "",
"type": "text",
"enabled": true
},
{
"key": "success_action_redirect",
"value": "{{AppBundleFormRedirect}}",
"description": "",
"type": "text",
"enabled": true
},
{
"key": "x-amz-signature",
"value": "{{AppBundleFormSignature}}",
"description": "",
"type": "text",
"enabled": true
},
{
"key": "x-amz-credential",
"value": "{{AppBundleFormCredential}}",
"description": "",
"type": "text",
"enabled": true
},
{
"key": "x-amz-algorithm",
"value": "{{AppBundleFormAlgorithm}}",
"description": "",
"type": "text",
"enabled": true
},
{
"key": "x-amz-date",
"value": "{{AppBundleFormDate}}",
"description": "",
"type": "text",
"enabled": true
},
{
"key": "x-amz-server-side-encryption",
"value": "{{AppBundleFormEncryption}}",
"description": "",
"type": "text",
"enabled": true
},
{
"key": "x-amz-security-token",
"value": "{{AppBundleFormToken}}",
"description": "",
"type": "text",
"enabled": true
},
{
"key": "file",
"value": "",
"description": "",
"type": "file",
"enabled": true
}
],
"dataMode": "params",
"headerData": [],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": null,
"folder": "71990473-bdaf-45d7-8834-a563578ef8ba",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "",
"pathVariables": {}
},
{
"id": "5b624946-970e-4559-839b-f97f28b94001",
"name": "DA - Modify AppBundle alias",
"url": "https://{{ForgeURL}}/da/us-east/v3/appbundles/:id/aliases/:aliasId",
"description": "PATCH\tappbundles/:id/aliases/:aliasId\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/appbundles-id-aliases-aliasId-PATCH/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"type": "text",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"type": "text",
"value": "application/json"
}
],
"method": "PATCH",
"pathVariableData": [
{
"key": "id",
"value": "{{AppBundleName}}"
},
{
"key": "aliasId",
"value": "{{AppBundleAliasId}}"
}
],
"queryParams": [],
"auth": null,
"events": null,
"folder": "71990473-bdaf-45d7-8834-a563578ef8ba",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\r\n      \"version\": 2\r\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {
"id": "{{AppBundleName}}",
"aliasId": "{{AppBundleAliasId}}"
}
},
{
"id": "5d147790-5fa9-4ce4-9c46-912b17a6dddb",
"name": "BIM360 - PATCH Account Users",
"url": "https://{{ForgeURL}}/hq/v1/accounts/{{AccountId}}/users/{{UserId}}",
"description": "Get account user list\n\nhttps://developer.autodesk.com/en/docs/bim360/v1/reference/http/users-GET/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/json",
"description": ""
}
],
"method": "PATCH",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "6f7865eb-9447-422c-973d-fdc6114b7fc3",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
],
"type": "text/javascript"
}
}
],
"folder": "36b5c55e-1372-4a60-9cb6-3014f8ca89a4",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\n  \"status\":\"inactive\"\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "5f9350c9-eae0-4a4a-b2af-d86ece84e843",
"name": "Model - Get InstanceTree",
"url": "https://{{ForgeURL}}/modelderivative/v2/designdata/{{Base64URN}}/metadata/{{ModelGuid}}",
"description": "Get Model InstanceTree.\n\nhttps://developer.autodesk.com/en/docs/model-derivative/v2/reference/http/urn-metadata-guid-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/json",
"description": "",
"enabled": true
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"id": "1be54a19-7f7d-45f3-bb94-ef872f169d63",
"exec": [
"/*",
" * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $",
" *",
" *  Licensed under the BSD 3-Clause License.",
" *    http://opensource.org/licenses/BSD-3-Clause",
" *",
" *  References:",
" *    http://en.wikipedia.org/wiki/Base64",
" */",
"",
"(function(global) {",
"    'use strict';",
"    // existing version for noConflict()",
"    var _Base64 = global.Base64;",
"    var version = \"2.1.9\";",
"    // if node.js, we use Buffer",
"    var buffer;",
"    if (typeof module !== 'undefined' && module.exports) {",
"        try {",
"            buffer = require('buffer').Buffer;",
"        } catch (err) {}",
"    }",
"    // constants",
"    var b64chars",
"        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';",
"    var b64tab = function(bin) {",
"        var t = {};",
"        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;",
"        return t;",
"    }(b64chars);",
"    var fromCharCode = String.fromCharCode;",
"    // encoder stuff",
"    var cb_utob = function(c) {",
"        if (c.length < 2) {",
"            var cc = c.charCodeAt(0);",
"            return cc < 0x80 ? c",
"                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))",
"                                + fromCharCode(0x80 | (cc & 0x3f)))",
"                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))",
"                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                   + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        } else {",
"            var cc = 0x10000",
"                + (c.charCodeAt(0) - 0xD800) * 0x400",
"                + (c.charCodeAt(1) - 0xDC00);",
"            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))",
"                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))",
"                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                    + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        }",
"    };",
"    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;",
"    var utob = function(u) {",
"        return u.replace(re_utob, cb_utob);",
"    };",
"    var cb_encode = function(ccc) {",
"        var padlen = [0, 2, 1][ccc.length % 3],",
"        ord = ccc.charCodeAt(0) << 16",
"            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)",
"            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),",
"        chars = [",
"            b64chars.charAt( ord >>> 18),",
"            b64chars.charAt((ord >>> 12) & 63),",
"            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),",
"            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)",
"        ];",
"        return chars.join('');",
"    };",
"    var btoa = global.btoa ? function(b) {",
"        return global.btoa(b);",
"    } : function(b) {",
"        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);",
"    };",
"    var _encode = buffer ? function (u) {",
"        return (u.constructor === buffer.constructor ? u : new buffer(u))",
"        .toString('base64')",
"    }",
"    : function (u) { return btoa(utob(u)) }",
"    ;",
"    var encode = function(u, urisafe) {",
"        return !urisafe",
"            ? _encode(String(u))",
"            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {",
"                return m0 == '+' ? '-' : '_';",
"            }).replace(/=/g, '');",
"    };",
"    var encodeURI = function(u) { return encode(u, true) };",
"    // decoder stuff",
"    var re_btou = new RegExp([",
"        '[\\xC0-\\xDF][\\x80-\\xBF]',",
"        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',",
"        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'",
"    ].join('|'), 'g');",
"    var cb_btou = function(cccc) {",
"        switch(cccc.length) {",
"        case 4:",
"            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)",
"                |    ((0x3f & cccc.charCodeAt(1)) << 12)",
"                |    ((0x3f & cccc.charCodeAt(2)) <<  6)",
"                |     (0x3f & cccc.charCodeAt(3)),",
"            offset = cp - 0x10000;",
"            return (fromCharCode((offset  >>> 10) + 0xD800)",
"                    + fromCharCode((offset & 0x3FF) + 0xDC00));",
"        case 3:",
"            return fromCharCode(",
"                ((0x0f & cccc.charCodeAt(0)) << 12)",
"                    | ((0x3f & cccc.charCodeAt(1)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(2))",
"            );",
"        default:",
"            return  fromCharCode(",
"                ((0x1f & cccc.charCodeAt(0)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(1))",
"            );",
"        }",
"    };",
"    var btou = function(b) {",
"        return b.replace(re_btou, cb_btou);",
"    };",
"    var cb_decode = function(cccc) {",
"        var len = cccc.length,",
"        padlen = len % 4,",
"        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)",
"            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)",
"            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)",
"            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),",
"        chars = [",
"            fromCharCode( n >>> 16),",
"            fromCharCode((n >>>  8) & 0xff),",
"            fromCharCode( n         & 0xff)",
"        ];",
"        chars.length -= [0, 0, 2, 1][padlen];",
"        return chars.join('');",
"    };",
"    var atob = global.atob ? function(a) {",
"        return global.atob(a);",
"    } : function(a){",
"        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);",
"    };",
"    var _decode = buffer ? function(a) {",
"        return (a.constructor === buffer.constructor",
"                ? a : new buffer(a, 'base64')).toString();",
"    }",
"    : function(a) { return btou(atob(a)) };",
"    var decode = function(a){",
"        return _decode(",
"            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })",
"                .replace(/[^A-Za-z0-9\\+\\/]/g, '')",
"        );",
"    };",
"    var noConflict = function() {",
"        var Base64 = global.Base64;",
"        global.Base64 = _Base64;",
"        return Base64;",
"    };",
"    // export Base64",
"    global.Base64 = {",
"        VERSION: version,",
"        atob: atob,",
"        btoa: btoa,",
"        fromBase64: decode,",
"        toBase64: encode,",
"        utob: utob,",
"        encode: encode,",
"        encodeURI: encodeURI,",
"        btou: btou,",
"        decode: decode,",
"        noConflict: noConflict",
"    };",
"    // if ES5 is available, make Base64.extendString() available",
"    if (typeof Object.defineProperty === 'function') {",
"        var noEnum = function(v){",
"            return {value:v,enumerable:false,writable:true,configurable:true};",
"        };",
"        global.Base64.extendString = function () {",
"            Object.defineProperty(",
"                String.prototype, 'fromBase64', noEnum(function () {",
"                    return decode(this)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64', noEnum(function (urisafe) {",
"                    return encode(this, urisafe)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64URI', noEnum(function () {",
"                    return encode(this, true)",
"                }));",
"        };",
"    }",
"    // that's it!",
"    if (global['Meteor']) {",
"        Base64 = global.Base64; // for normal export in Meteor.js",
"    }",
"    if (typeof module !== 'undefined' && module.exports) {",
"        module.exports.Base64 = global.Base64;",
"    }",
"    if (typeof define === 'function' && define.amd) {",
"        // AMD. Register as an anonymous module.",
"        define([], function(){ return global.Base64 });",
"    }",
"})(typeof self !== 'undefined' ? self",
" : typeof window !== 'undefined' ? window",
" : typeof global !== 'undefined' ? global",
" : this",
");",
"",
"postman.setEnvironmentVariable( \"base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );"
],
"type": "text/javascript"
}
},
{
"listen": "test",
"script": {
"id": "a27b3bae-e469-4ba2-8755-3b405680ec29",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200 ;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data = JSON.parse( responseBody );",
"tests[\"Response has progress\"] = data.hasOwnProperty( \"progress\" );",
"tests[\"Response has status\"] = data.hasOwnProperty( \"status\" );",
"tests[\"Response has urn\"] = data.hasOwnProperty( \"urn\" );",
"tests[\"urn verified\"] = data.urn === postman.getEnvironmentVariable( \"base64URN\" );"
],
"type": "text/javascript"
}
}
],
"folder": "63cd52eb-ecb1-4353-88c2-cab4ea26dd8f",
"preRequestScript": "/*\n * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n\n(function(global) {\n    'use strict';\n    // existing version for noConflict()\n    var _Base64 = global.Base64;\n    var version = \"2.1.9\";\n    // if node.js, we use Buffer\n    var buffer;\n    if (typeof module !== 'undefined' && module.exports) {\n        try {\n            buffer = require('buffer').Buffer;\n        } catch (err) {}\n    }\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                   + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa ? function(b) {\n        return global.btoa(b);\n    } : function(b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = buffer ? function (u) {\n        return (u.constructor === buffer.constructor ? u : new buffer(u))\n        .toString('base64')\n    }\n    : function (u) { return btoa(utob(u)) }\n    ;\n    var encode = function(u, urisafe) {\n        return !urisafe\n            ? _encode(String(u))\n            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {\n                return m0 == '+' ? '-' : '_';\n            }).replace(/=/g, '');\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    // decoder stuff\n    var re_btou = new RegExp([\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n    ].join('|'), 'g');\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var atob = global.atob ? function(a) {\n        return global.atob(a);\n    } : function(a){\n        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);\n    };\n    var _decode = buffer ? function(a) {\n        return (a.constructor === buffer.constructor\n                ? a : new buffer(a, 'base64')).toString();\n    }\n    : function(a) { return btou(atob(a)) };\n    var decode = function(a){\n        return _decode(\n            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n        );\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    // that's it!\n    if (global['Meteor']) {\n        Base64 = global.Base64; // for normal export in Meteor.js\n    }\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], function(){ return global.Base64 });\n    }\n})(typeof self !== 'undefined' ? self\n : typeof window !== 'undefined' ? window\n : typeof global !== 'undefined' ? global\n : this\n);\n\npostman.setEnvironmentVariable( \"base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );",
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200 ;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data = JSON.parse( responseBody );\ntests[\"Response has progress\"] = data.hasOwnProperty( \"progress\" );\ntests[\"Response has status\"] = data.hasOwnProperty( \"status\" );\ntests[\"Response has urn\"] = data.hasOwnProperty( \"urn\" );\ntests[\"urn verified\"] = data.urn === postman.getEnvironmentVariable( \"base64URN\" );",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "61af3bed-7fbf-4737-80c1-f647202de969",
"name": "DA - Create Workitem ZIP w/ XRef",
"url": "https://{{ForgeURL}}/da/us-east/v3/workitems",
"description": "POST\tworkitems\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/workitems-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"type": "text",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"type": "text",
"value": "application/json"
},
{
"description": "",
"enabled": false,
"key": "x-request-id",
"type": "text",
"value": "fpd-t-kange-da-test-001"
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": null,
"folder": "92fe8767-e6b5-4de9-ba3e-d022709b4453",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\r\n\t\"activityId\": \"{{AppNickName}}.{{ActivityName}}+{{ActivityAliasId}}\",\r\n\t\"arguments\": {\r\n\t  \"inputFile\": {\r\n\t  \t\"verb\": \"get\",\r\n\t    \"url\": \"https://content.dropboxapi.com/2/files/download\",\r\n        \"headers\": {\r\n            \"Authorization\": \"Bearer {{DropboxBearer}}\",\r\n            \"Dropbox-API-Arg\": \"{ \\\"path\\\":\\\"\\/adsk-forge\\/DWG\\/input.rvt\\\" }\"\r\n\t\t},\r\n\t\t\"references\": [\r\n\t\t\t{\r\n\t\t\t\t\"verb\": \"get\",\r\n\t\t\t\t\"url\": \"https://content.dropboxapi.com/2/files/download\",\r\n\t\t\t\t\"localName\": \"GUGCI(A) - V4.rvt\",\r\n\t\t\t\t\"headers\": {\r\n\t\t\t\t\t\"Authorization\": \"Bearer {{DropboxBearer}}\",\r\n\t\t\t\t\t\"Dropbox-API-Arg\": \"{ \\\"path\\\":\\\"\\/adsk-forge\\/DWG\\/GUGCI(A) - V4.rvt\\\" }\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n        ]\r\n\t  },\r\n\t  \"outputFile\": {\r\n        \"verb\": \"post\",\r\n        \"url\": \"https://content.dropboxapi.com/2/files/upload\",\r\n        \"headers\":{\r\n            \"Authorization\": \"Bearer {{DropboxBearer}}\",\r\n        \t\"Content-Type\": \"application/octet-stream\",\r\n        \t\"Dropbox-API-Arg\": \"{\\\"path\\\":\\\"\\/adsk-forge\\/DWG\\/result.zip\\\", \\\"mode\\\":\\\"overwrite\\\"}\"\r\n        }\r\n\t  }\r\n\t}\r\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n//x-request-id: fpd-t-kange-da-test-001\n",
"pathVariables": {}
},
{
"id": "6728496a-e493-4f5f-a888-68d8ed27bab8",
"name": "Data Mgmt - Append Version",
"url": "https://developer.api.autodesk.com/data/v1/projects/{{ProjectId}}/versions",
"description": "Data Mgmt - Create First Version\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/projects-project_id-versions-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"enabled": true,
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"enabled": true,
"key": "Content-Type",
"value": "application/vnd.api+json"
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "4b864382-5a39-497e-9e37-becadb28b6b4",
"exec": [
"tests[ \"Status code is 200\" ] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"",
"// base64URN will be encoded later"
],
"type": "text/javascript"
}
}
],
"folder": "b31706b7-1e86-4b20-9655-e34255160c8d",
"preRequestScript": null,
"tests": "tests[ \"Status code is 200\" ] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\n\n// base64URN will be encoded later",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\r\n  \"jsonapi\": {\r\n    \"version\": \"1.0\"\r\n  },\r\n  \"data\": {\r\n    \"type\": \"versions\",\r\n    \"attributes\": {\r\n      \"name\": \"{{Filename}}\",\r\n      \"extension\": {\r\n        \"type\": \"versions:autodesk.bim360:File\",\r\n        \"version\": \"1.0\"\r\n      }\r\n    },\r\n    \"relationships\": {\r\n      \"item\": {\r\n        \"data\": {\r\n          \"type\": \"items\",\r\n          \"id\": \"{{ItemId}}\"\r\n        }\r\n      },\r\n      \"storage\": {\r\n        \"data\": {\r\n          \"type\": \"objects\",\r\n          \"id\": \"{{URN}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "681e0eca-8f14-4299-be48-12bf98d3dd4c",
"name": "Model - Request Translation (To DWG) ",
"url": "https://{{ForgeURL}}/modelderivative/v2/designdata/job",
"description": "Translate a source file from one format to DWG format.\n\nhttps://developer.autodesk.com/en/docs/model-derivative/v2/reference/http/job-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/json",
"description": "",
"enabled": true
},
{
"key": "x-ads-force",
"value": "true",
"description": "",
"enabled": true
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"id": "b96f8172-3f00-47ef-90a2-2b3dfa00222a",
"exec": [
"/*",
" * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $",
" *",
" *  Licensed under the BSD 3-Clause License.",
" *    http://opensource.org/licenses/BSD-3-Clause",
" *",
" *  References:",
" *    http://en.wikipedia.org/wiki/Base64",
" */",
"",
"(function(global) {",
"    'use strict';",
"    // existing version for noConflict()",
"    var _Base64 = global.Base64;",
"    var version = \"2.1.9\";",
"    // if node.js, we use Buffer",
"    var buffer;",
"    if (typeof module !== 'undefined' && module.exports) {",
"        try {",
"            buffer = require('buffer').Buffer;",
"        } catch (err) {}",
"    }",
"    // constants",
"    var b64chars",
"        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';",
"    var b64tab = function(bin) {",
"        var t = {};",
"        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;",
"        return t;",
"    }(b64chars);",
"    var fromCharCode = String.fromCharCode;",
"    // encoder stuff",
"    var cb_utob = function(c) {",
"        if (c.length < 2) {",
"            var cc = c.charCodeAt(0);",
"            return cc < 0x80 ? c",
"                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))",
"                                + fromCharCode(0x80 | (cc & 0x3f)))",
"                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))",
"                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                   + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        } else {",
"            var cc = 0x10000",
"                + (c.charCodeAt(0) - 0xD800) * 0x400",
"                + (c.charCodeAt(1) - 0xDC00);",
"            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))",
"                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))",
"                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                    + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        }",
"    };",
"    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;",
"    var utob = function(u) {",
"        return u.replace(re_utob, cb_utob);",
"    };",
"    var cb_encode = function(ccc) {",
"        var padlen = [0, 2, 1][ccc.length % 3],",
"        ord = ccc.charCodeAt(0) << 16",
"            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)",
"            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),",
"        chars = [",
"            b64chars.charAt( ord >>> 18),",
"            b64chars.charAt((ord >>> 12) & 63),",
"            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),",
"            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)",
"        ];",
"        return chars.join('');",
"    };",
"    var btoa = global.btoa ? function(b) {",
"        return global.btoa(b);",
"    } : function(b) {",
"        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);",
"    };",
"    var _encode = buffer ? function (u) {",
"        return (u.constructor === buffer.constructor ? u : new buffer(u))",
"        .toString('base64')",
"    }",
"    : function (u) { return btoa(utob(u)) }",
"    ;",
"    var encode = function(u, urisafe) {",
"        return !urisafe",
"            ? _encode(String(u))",
"            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {",
"                return m0 == '+' ? '-' : '_';",
"            }).replace(/=/g, '');",
"    };",
"    var encodeURI = function(u) { return encode(u, true) };",
"    // decoder stuff",
"    var re_btou = new RegExp([",
"        '[\\xC0-\\xDF][\\x80-\\xBF]',",
"        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',",
"        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'",
"    ].join('|'), 'g');",
"    var cb_btou = function(cccc) {",
"        switch(cccc.length) {",
"        case 4:",
"            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)",
"                |    ((0x3f & cccc.charCodeAt(1)) << 12)",
"                |    ((0x3f & cccc.charCodeAt(2)) <<  6)",
"                |     (0x3f & cccc.charCodeAt(3)),",
"            offset = cp - 0x10000;",
"            return (fromCharCode((offset  >>> 10) + 0xD800)",
"                    + fromCharCode((offset & 0x3FF) + 0xDC00));",
"        case 3:",
"            return fromCharCode(",
"                ((0x0f & cccc.charCodeAt(0)) << 12)",
"                    | ((0x3f & cccc.charCodeAt(1)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(2))",
"            );",
"        default:",
"            return  fromCharCode(",
"                ((0x1f & cccc.charCodeAt(0)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(1))",
"            );",
"        }",
"    };",
"    var btou = function(b) {",
"        return b.replace(re_btou, cb_btou);",
"    };",
"    var cb_decode = function(cccc) {",
"        var len = cccc.length,",
"        padlen = len % 4,",
"        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)",
"            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)",
"            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)",
"            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),",
"        chars = [",
"            fromCharCode( n >>> 16),",
"            fromCharCode((n >>>  8) & 0xff),",
"            fromCharCode( n         & 0xff)",
"        ];",
"        chars.length -= [0, 0, 2, 1][padlen];",
"        return chars.join('');",
"    };",
"    var atob = global.atob ? function(a) {",
"        return global.atob(a);",
"    } : function(a){",
"        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);",
"    };",
"    var _decode = buffer ? function(a) {",
"        return (a.constructor === buffer.constructor",
"                ? a : new buffer(a, 'base64')).toString();",
"    }",
"    : function(a) { return btou(atob(a)) };",
"    var decode = function(a){",
"        return _decode(",
"            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })",
"                .replace(/[^A-Za-z0-9\\+\\/]/g, '')",
"        );",
"    };",
"    var noConflict = function() {",
"        var Base64 = global.Base64;",
"        global.Base64 = _Base64;",
"        return Base64;",
"    };",
"    // export Base64",
"    global.Base64 = {",
"        VERSION: version,",
"        atob: atob,",
"        btoa: btoa,",
"        fromBase64: decode,",
"        toBase64: encode,",
"        utob: utob,",
"        encode: encode,",
"        encodeURI: encodeURI,",
"        btou: btou,",
"        decode: decode,",
"        noConflict: noConflict",
"    };",
"    // if ES5 is available, make Base64.extendString() available",
"    if (typeof Object.defineProperty === 'function') {",
"        var noEnum = function(v){",
"            return {value:v,enumerable:false,writable:true,configurable:true};",
"        };",
"        global.Base64.extendString = function () {",
"            Object.defineProperty(",
"                String.prototype, 'fromBase64', noEnum(function () {",
"                    return decode(this)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64', noEnum(function (urisafe) {",
"                    return encode(this, urisafe)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64URI', noEnum(function () {",
"                    return encode(this, true)",
"                }));",
"        };",
"    }",
"    // that's it!",
"    if (global['Meteor']) {",
"        Base64 = global.Base64; // for normal export in Meteor.js",
"    }",
"    if (typeof module !== 'undefined' && module.exports) {",
"        module.exports.Base64 = global.Base64;",
"    }",
"    if (typeof define === 'function' && define.amd) {",
"        // AMD. Register as an anonymous module.",
"        define([], function(){ return global.Base64 });",
"    }",
"})(typeof self !== 'undefined' ? self",
" : typeof window !== 'undefined' ? window",
" : typeof global !== 'undefined' ? global",
" : this",
");",
"",
"var rootFilename = postman.getEnvironmentVariable( \"RootFilename\" );",
"",
"if( !rootFilename ) throw \"rootFilename cannot be empty\";",
"",
"postman.setEnvironmentVariable( \"Base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );"
],
"type": "text/javascript"
}
},
{
"listen": "test",
"script": {
"id": "13308609-5a9e-495b-848e-493f476effbf",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200; // or 201 if called a second time",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data =JSON.parse( responseBody );",
"tests[\"Success\"] = data.result === \"success\"; // or Created if called a second time"
],
"type": "text/javascript"
}
}
],
"folder": "63cd52eb-ecb1-4353-88c2-cab4ea26dd8f",
"preRequestScript": "/*\n * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n\n(function(global) {\n    'use strict';\n    // existing version for noConflict()\n    var _Base64 = global.Base64;\n    var version = \"2.1.9\";\n    // if node.js, we use Buffer\n    var buffer;\n    if (typeof module !== 'undefined' && module.exports) {\n        try {\n            buffer = require('buffer').Buffer;\n        } catch (err) {}\n    }\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                   + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa ? function(b) {\n        return global.btoa(b);\n    } : function(b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = buffer ? function (u) {\n        return (u.constructor === buffer.constructor ? u : new buffer(u))\n        .toString('base64')\n    }\n    : function (u) { return btoa(utob(u)) }\n    ;\n    var encode = function(u, urisafe) {\n        return !urisafe\n            ? _encode(String(u))\n            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {\n                return m0 == '+' ? '-' : '_';\n            }).replace(/=/g, '');\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    // decoder stuff\n    var re_btou = new RegExp([\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n    ].join('|'), 'g');\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var atob = global.atob ? function(a) {\n        return global.atob(a);\n    } : function(a){\n        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);\n    };\n    var _decode = buffer ? function(a) {\n        return (a.constructor === buffer.constructor\n                ? a : new buffer(a, 'base64')).toString();\n    }\n    : function(a) { return btou(atob(a)) };\n    var decode = function(a){\n        return _decode(\n            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n        );\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    // that's it!\n    if (global['Meteor']) {\n        Base64 = global.Base64; // for normal export in Meteor.js\n    }\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], function(){ return global.Base64 });\n    }\n})(typeof self !== 'undefined' ? self\n : typeof window !== 'undefined' ? window\n : typeof global !== 'undefined' ? global\n : this\n);\n\nvar rootFilename = postman.getEnvironmentVariable( \"RootFilename\" );\n\nif( !rootFilename ) throw \"rootFilename cannot be empty\";\n\npostman.setEnvironmentVariable( \"Base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );",
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200; // or 201 if called a second time\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data =JSON.parse( responseBody );\ntests[\"Success\"] = data.result === \"success\"; // or Created if called a second time",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\n   \"input\": {\n     \"urn\": \"{{Base64URN}}\",\n     \"compressedUrn\": false,\n     \"rootFilename\": \"{{Filename}}\"\n   },\n   \"output\": {\n     \"formats\": [\n       {\n         \"type\": \"dwg\",\n         \"views\": [\n           \"2d\"\n         ]\n       }\n     ]\n   }\n }",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\nx-ads-force: true\n",
"pathVariables": {}
},
{
"id": "6e50730b-da6b-4ca0-81d3-b0b98fdfc0ee",
"name": "Data Mgmt - GET Folder Contents",
"url": "https://{{ForgeURL}}/data/v1/projects/{{ProjectId}}/folders/{{FolderId}}/contents",
"description": "Get Project\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/hubs-hub_id-projects-project_id-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/vnd.api+json",
"description": "",
"enabled": true
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "ba5a4c18-8b2e-4e6c-b738-d25beeab9e51",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
],
"type": "text/javascript"
}
}
],
"folder": "5635befe-82b8-453d-b0df-440eee29ccdc",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "6fc915f6-a072-4f11-a3aa-e8880491e978",
"name": "Data Mgmt - GET Hub",
"url": "https://{{ForgeURL}}/project/v1/hubs/{{HubId}}",
"description": "Get Hub\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/hubs-hub_id-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"value": "application/vnd.api+json"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
]
}
}
],
"folder": "d1d9b5ce-9844-4787-9cfc-1725027606be",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "7181b354-5199-41e4-961c-69d5cf8e76a0",
"name": "BIM360 - GET Account Users",
"url": "https://{{ForgeURL}}/hq/v1/accounts/{{AccountId}}/users",
"description": "Get account user list\n\nhttps://developer.autodesk.com/en/docs/bim360/v1/reference/http/users-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/vnd.api+json",
"description": "",
"enabled": false
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "ed5c5b1f-bd70-4dc5-b5f2-1fdb28ba9451",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
],
"type": "text/javascript"
}
}
],
"folder": "36b5c55e-1372-4a60-9cb6-3014f8ca89a4",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\n//Content-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "724f7348-4f95-408a-a0f5-1a879c55d9f6",
"name": "Data Mgmt - GET Team Hub List",
"url": "https://{{ForgeURL}}/project/v1/hubs?filter[extension.type]=hubs:autodesk.core:Hub",
"description": "Get Hub list\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/hubs-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"value": "application/vnd.api+json"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [
{
"key": "filter[extension.type]",
"value": "hubs:autodesk.core:Hub",
"equals": true,
"description": "",
"enabled": true
}
],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
]
}
}
],
"folder": "d1d9b5ce-9844-4787-9cfc-1725027606be",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "72fc2d70-5a8a-48b6-b243-b5d5c3957627",
"name": "DA - Create AppBundle",
"url": "https://{{ForgeURL}}/da/us-east/v3/appbundles",
"description": "POST\tappbundles\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/appbundles-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"type": "text",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"type": "text",
"value": "application/json"
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": null,
"folder": "71990473-bdaf-45d7-8834-a563578ef8ba",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\r\n\t\"id\": \"{{AppBundleName}}\",\r\n\t\"package\": \"{{AppBundleName}}\",\r\n\t\"engine\": \"{{EngineName}}\",\r\n\t\"description\": \"Description for {{AppBundleName}}\"\r\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "7608812a-06f2-4fe3-a940-4fde168639c2",
"name": "Data Mgmt - Set Relationships (Team)",
"url": "https://{{ForgeURL}}/data/v1/projects/{{ProjectId}}/versions/{{EscapedStorageURN}}/relationships/refs",
"description": "Data Mgmt - Set Relationships\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/projects-project_id-versions-version_id-relationships-refs-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/vnd.api+json",
"enabled": true
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"id": "848714c8-11cd-4c0f-821a-e9b3f527b61f",
"exec": [
"var storageURN = postman.getEnvironmentVariable( \"StorageURN\" );",
"",
"if( !storageURN ) throw \"StorageURN cannot be empty\";",
"",
"postman.setEnvironmentVariable( \"EscapedStorageURN\", encodeURIComponent( storageURN ) );"
],
"type": "text/javascript"
}
}
],
"folder": "b31706b7-1e86-4b20-9655-e34255160c8d",
"preRequestScript": "var storageURN = postman.getEnvironmentVariable( \"StorageURN\" );\n\nif( !storageURN ) throw \"StorageURN cannot be empty\";\n\npostman.setEnvironmentVariable( \"EscapedStorageURN\", encodeURIComponent( storageURN ) );",
"tests": null,
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\n  \"jsonapi\": {\n    \"version\": \"1.0\"\n  },\n  \"data\": {\n    \"type\": \"versions\",\n    \"id\": \"{{LinkingStorageURN}}\",\n    \"meta\": {\n      \"extension\": {\n        \"type\": \"xrefs:autodesk.core:Xref\",\n        \"version\": \"1.0\",\n        \"data\": {}\n      }\n    }\n  }\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "77b6ab2e-d06e-4af2-925d-5c4eed663851",
"name": "Model - Request Translation (ZIP to SVF)",
"url": "https://{{ForgeURL}}/modelderivative/v2/designdata/job",
"description": "Translate a source file from one format to SVF format.\n\nhttps://developer.autodesk.com/en/docs/model-derivative/v2/reference/http/job-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/json",
"description": "",
"enabled": true
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"id": "2b92e52c-150a-41a0-a8f7-71ccc8ae8ccc",
"exec": [
"/*",
" * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $",
" *",
" *  Licensed under the BSD 3-Clause License.",
" *    http://opensource.org/licenses/BSD-3-Clause",
" *",
" *  References:",
" *    http://en.wikipedia.org/wiki/Base64",
" */",
"",
"(function(global) {",
"    'use strict';",
"    // existing version for noConflict()",
"    var _Base64 = global.Base64;",
"    var version = \"2.1.9\";",
"    // if node.js, we use Buffer",
"    var buffer;",
"    if (typeof module !== 'undefined' && module.exports) {",
"        try {",
"            buffer = require('buffer').Buffer;",
"        } catch (err) {}",
"    }",
"    // constants",
"    var b64chars",
"        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';",
"    var b64tab = function(bin) {",
"        var t = {};",
"        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;",
"        return t;",
"    }(b64chars);",
"    var fromCharCode = String.fromCharCode;",
"    // encoder stuff",
"    var cb_utob = function(c) {",
"        if (c.length < 2) {",
"            var cc = c.charCodeAt(0);",
"            return cc < 0x80 ? c",
"                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))",
"                                + fromCharCode(0x80 | (cc & 0x3f)))",
"                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))",
"                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                   + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        } else {",
"            var cc = 0x10000",
"                + (c.charCodeAt(0) - 0xD800) * 0x400",
"                + (c.charCodeAt(1) - 0xDC00);",
"            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))",
"                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))",
"                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                    + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        }",
"    };",
"    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;",
"    var utob = function(u) {",
"        return u.replace(re_utob, cb_utob);",
"    };",
"    var cb_encode = function(ccc) {",
"        var padlen = [0, 2, 1][ccc.length % 3],",
"        ord = ccc.charCodeAt(0) << 16",
"            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)",
"            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),",
"        chars = [",
"            b64chars.charAt( ord >>> 18),",
"            b64chars.charAt((ord >>> 12) & 63),",
"            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),",
"            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)",
"        ];",
"        return chars.join('');",
"    };",
"    var btoa = global.btoa ? function(b) {",
"        return global.btoa(b);",
"    } : function(b) {",
"        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);",
"    };",
"    var _encode = buffer ? function (u) {",
"        return (u.constructor === buffer.constructor ? u : new buffer(u))",
"        .toString('base64')",
"    }",
"    : function (u) { return btoa(utob(u)) }",
"    ;",
"    var encode = function(u, urisafe) {",
"        return !urisafe",
"            ? _encode(String(u))",
"            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {",
"                return m0 == '+' ? '-' : '_';",
"            }).replace(/=/g, '');",
"    };",
"    var encodeURI = function(u) { return encode(u, true) };",
"    // decoder stuff",
"    var re_btou = new RegExp([",
"        '[\\xC0-\\xDF][\\x80-\\xBF]',",
"        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',",
"        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'",
"    ].join('|'), 'g');",
"    var cb_btou = function(cccc) {",
"        switch(cccc.length) {",
"        case 4:",
"            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)",
"                |    ((0x3f & cccc.charCodeAt(1)) << 12)",
"                |    ((0x3f & cccc.charCodeAt(2)) <<  6)",
"                |     (0x3f & cccc.charCodeAt(3)),",
"            offset = cp - 0x10000;",
"            return (fromCharCode((offset  >>> 10) + 0xD800)",
"                    + fromCharCode((offset & 0x3FF) + 0xDC00));",
"        case 3:",
"            return fromCharCode(",
"                ((0x0f & cccc.charCodeAt(0)) << 12)",
"                    | ((0x3f & cccc.charCodeAt(1)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(2))",
"            );",
"        default:",
"            return  fromCharCode(",
"                ((0x1f & cccc.charCodeAt(0)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(1))",
"            );",
"        }",
"    };",
"    var btou = function(b) {",
"        return b.replace(re_btou, cb_btou);",
"    };",
"    var cb_decode = function(cccc) {",
"        var len = cccc.length,",
"        padlen = len % 4,",
"        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)",
"            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)",
"            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)",
"            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),",
"        chars = [",
"            fromCharCode( n >>> 16),",
"            fromCharCode((n >>>  8) & 0xff),",
"            fromCharCode( n         & 0xff)",
"        ];",
"        chars.length -= [0, 0, 2, 1][padlen];",
"        return chars.join('');",
"    };",
"    var atob = global.atob ? function(a) {",
"        return global.atob(a);",
"    } : function(a){",
"        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);",
"    };",
"    var _decode = buffer ? function(a) {",
"        return (a.constructor === buffer.constructor",
"                ? a : new buffer(a, 'base64')).toString();",
"    }",
"    : function(a) { return btou(atob(a)) };",
"    var decode = function(a){",
"        return _decode(",
"            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })",
"                .replace(/[^A-Za-z0-9\\+\\/]/g, '')",
"        );",
"    };",
"    var noConflict = function() {",
"        var Base64 = global.Base64;",
"        global.Base64 = _Base64;",
"        return Base64;",
"    };",
"    // export Base64",
"    global.Base64 = {",
"        VERSION: version,",
"        atob: atob,",
"        btoa: btoa,",
"        fromBase64: decode,",
"        toBase64: encode,",
"        utob: utob,",
"        encode: encode,",
"        encodeURI: encodeURI,",
"        btou: btou,",
"        decode: decode,",
"        noConflict: noConflict",
"    };",
"    // if ES5 is available, make Base64.extendString() available",
"    if (typeof Object.defineProperty === 'function') {",
"        var noEnum = function(v){",
"            return {value:v,enumerable:false,writable:true,configurable:true};",
"        };",
"        global.Base64.extendString = function () {",
"            Object.defineProperty(",
"                String.prototype, 'fromBase64', noEnum(function () {",
"                    return decode(this)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64', noEnum(function (urisafe) {",
"                    return encode(this, urisafe)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64URI', noEnum(function () {",
"                    return encode(this, true)",
"                }));",
"        };",
"    }",
"    // that's it!",
"    if (global['Meteor']) {",
"        Base64 = global.Base64; // for normal export in Meteor.js",
"    }",
"    if (typeof module !== 'undefined' && module.exports) {",
"        module.exports.Base64 = global.Base64;",
"    }",
"    if (typeof define === 'function' && define.amd) {",
"        // AMD. Register as an anonymous module.",
"        define([], function(){ return global.Base64 });",
"    }",
"})(typeof self !== 'undefined' ? self",
" : typeof window !== 'undefined' ? window",
" : typeof global !== 'undefined' ? global",
" : this",
");",
"",
"var rootFilename = postman.getEnvironmentVariable( \"RootFilename\" );",
"",
"if( !rootFilename ) throw \"rootFilename cannot be empty\";",
"",
"postman.setEnvironmentVariable( \"Base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );"
],
"type": "text/javascript"
}
},
{
"listen": "test",
"script": {
"id": "32a60ccf-25fd-4f48-b35a-0fb64bb0460b",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200; // or 201 if called a second time",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data =JSON.parse( responseBody );",
"tests[\"Success\"] = data.result === \"success\"; // or Created if called a second time"
],
"type": "text/javascript"
}
}
],
"folder": "63cd52eb-ecb1-4353-88c2-cab4ea26dd8f",
"preRequestScript": "/*\n * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n\n(function(global) {\n    'use strict';\n    // existing version for noConflict()\n    var _Base64 = global.Base64;\n    var version = \"2.1.9\";\n    // if node.js, we use Buffer\n    var buffer;\n    if (typeof module !== 'undefined' && module.exports) {\n        try {\n            buffer = require('buffer').Buffer;\n        } catch (err) {}\n    }\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                   + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa ? function(b) {\n        return global.btoa(b);\n    } : function(b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = buffer ? function (u) {\n        return (u.constructor === buffer.constructor ? u : new buffer(u))\n        .toString('base64')\n    }\n    : function (u) { return btoa(utob(u)) }\n    ;\n    var encode = function(u, urisafe) {\n        return !urisafe\n            ? _encode(String(u))\n            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {\n                return m0 == '+' ? '-' : '_';\n            }).replace(/=/g, '');\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    // decoder stuff\n    var re_btou = new RegExp([\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n    ].join('|'), 'g');\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var atob = global.atob ? function(a) {\n        return global.atob(a);\n    } : function(a){\n        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);\n    };\n    var _decode = buffer ? function(a) {\n        return (a.constructor === buffer.constructor\n                ? a : new buffer(a, 'base64')).toString();\n    }\n    : function(a) { return btou(atob(a)) };\n    var decode = function(a){\n        return _decode(\n            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n        );\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    // that's it!\n    if (global['Meteor']) {\n        Base64 = global.Base64; // for normal export in Meteor.js\n    }\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], function(){ return global.Base64 });\n    }\n})(typeof self !== 'undefined' ? self\n : typeof window !== 'undefined' ? window\n : typeof global !== 'undefined' ? global\n : this\n);\n\nvar rootFilename = postman.getEnvironmentVariable( \"RootFilename\" );\n\nif( !rootFilename ) throw \"rootFilename cannot be empty\";\n\npostman.setEnvironmentVariable( \"Base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );",
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200; // or 201 if called a second time\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data =JSON.parse( responseBody );\ntests[\"Success\"] = data.result === \"success\"; // or Created if called a second time",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\n   \"input\": {\n     \"urn\": \"{{Base64URN}}\",\n     \"compressedUrn\": true,\n     \"rootFilename\": \"{{RootFilename}}\"\n   },\n   \"output\": {\n     \"formats\": [\n       {\n         \"type\": \"svf\",\n         \"views\": [\n           \"2d\",\n           \"3d\"\n         ]\n       }\n     ]\n   }\n }",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "812ccd70-311e-4615-9f17-af89cdf2aba5",
"name": "Two Legged - Token Request",
"url": "https://{{ForgeURL}}/authentication/v1/authenticate",
"description": "https://developer.autodesk.com/en/docs/oauth/v2/reference/http/authenticate-POST/",
"data": [
{
"key": "client_id",
"value": "{{ClientKey}}",
"type": "text",
"enabled": true
},
{
"key": "client_secret",
"value": "{{ClientSecret}}",
"type": "text",
"enabled": true
},
{
"key": "grant_type",
"value": "client_credentials",
"type": "text",
"enabled": true
},
{
"key": "scope",
"value": "{{OAuthScopes}}",
"type": "text",
"enabled": true
}
],
"dataMode": "urlencoded",
"headerData": [],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "20eb60f6-7e52-438a-81b5-a503d439ba8b",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200 ;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data = JSON.parse( responseBody );",
"tests[\"Bearer ok\"] = data.access_token !== '' ;",
"",
"postman.setEnvironmentVariable( \"Bearer\", data.access_token );"
],
"type": "text/javascript"
}
}
],
"folder": "aa6fbf08-6622-4c6c-bb6e-d72c73cbbdfa",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200 ;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data = JSON.parse( responseBody );\ntests[\"Bearer ok\"] = data.access_token !== '' ;\n\npostman.setEnvironmentVariable( \"Bearer\", data.access_token );",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "",
"pathVariables": {}
},
{
"id": "81f8f83c-3ff6-4ed4-9ee0-274ef4acb0d4",
"name": "Data Mgmt - Get Bucket Details",
"url": "https://{{ForgeURL}}/oss/v2/buckets/{{BucketName}}/details",
"description": "Return bucket details in JSON format.\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/buckets-:bucketKey-details-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"key": "Content-Type",
"value": "application/json"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[ \"Content-Type is json\" ] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data = JSON.parse( responseBody );",
"tests[\"Key verified\"] = data.key === postman.getEnvironmentVariable( \"BucketName\" );",
""
]
}
}
],
"folder": "67ccc792-23b1-44e0-959e-d3a991dce762",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[ \"Content-Type is json\" ] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data = JSON.parse( responseBody );\ntests[\"Key verified\"] = data.key === postman.getEnvironmentVariable( \"BucketName\" );\n",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "856d1bae-f6e5-42f6-b158-9c32d973b930",
"name": "Data Mgmt - Create First Version",
"url": "https://{{ForgeURL}}/data/v1/projects/{{ProjectId}}/items",
"description": "Data Mgmt - Create First Version\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/projects-project_id-versions-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/vnd.api+json",
"enabled": true
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "4b864382-5a39-497e-9e37-becadb28b6b4",
"type": "text/javascript",
"exec": [
"tests[ \"Status code is 200\" ] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var response = JSON.parse( responseBody );",
"var included = response.included;",
"var firstIncluded = included[0];",
"var relationships = firstIncluded.relationships;",
"var storage = relationships.storage;",
"var data = storage.data;",
"",
"tests[\"Key verified\"] = data.id === postman.getEnvironmentVariable( \"URN\" );",
"",
"postman.setEnvironmentVariable( \"StorageURN\", data.id );",
"",
"",
"// base64URN will be encoded later"
]
}
}
],
"folder": "b31706b7-1e86-4b20-9655-e34255160c8d",
"preRequestScript": null,
"tests": "tests[ \"Status code is 200\" ] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar response = JSON.parse( responseBody );\nvar included = response.included;\nvar firstIncluded = included[0];\nvar relationships = firstIncluded.relationships;\nvar storage = relationships.storage;\nvar data = storage.data;\n\ntests[\"Key verified\"] = data.id === postman.getEnvironmentVariable( \"URN\" );\n\npostman.setEnvironmentVariable( \"StorageURN\", data.id );\n\n\n// base64URN will be encoded later",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\n   \"jsonapi\":{\n      \"version\":\"1.0\"\n   },\n   \"data\":{\n      \"type\":\"items\",\n      \"attributes\":{\n         \"displayName\":\"{{Filename}}\",\n         \"extension\":{\n            \"type\":\"items:autodesk.bim360:File\",\n            \"version\":\"1.0\"\n         }\n      },\n      \"relationships\":{\n         \"tip\":{\n            \"data\":{\n               \"type\":\"versions\",\n               \"id\":\"1\"\n            }\n         },\n         \"parent\":{\n            \"data\":{\n               \"type\":\"folders\",\n               \"id\":\"{{FolderId}}\"\n            }\n         }\n      }\n   },\n   \"included\":[\n      {\n         \"type\":\"versions\",\n         \"id\":\"1\",\n         \"attributes\":{\n            \"name\":\"{{Filename}}\",\n            \"extension\":{\n               \"type\":\"versions:autodesk.bim360:File\",\n               \"version\":\"1.0\"\n            }\n         },\n         \"relationships\":{\n            \"storage\":{\n               \"data\":{\n                  \"type\":\"objects\",\n                  \"id\":\"{{URN}}\"\n               }\n            }\n         }\n      }\n   ]\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "86772843-3224-4f38-9bdd-954816d023af",
"name": "DA - Get Engines",
"url": "https://{{ForgeURL}}/da/us-east/v3/engines",
"description": "GET\tengines\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/engines-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"type": "text",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"type": "text",
"value": "application/json"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": null,
"folder": "5aca7d2d-20e4-4e32-a0de-8b6eb589e3e0",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "86b985dc-77e0-44ef-b501-6df90f59c659",
"name": "DA - Create Activity IFC",
"url": "https://{{ForgeURL}}/da/us-east/v3/activities",
"description": "POST\tactivities\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/activities-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"type": "text",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"type": "text",
"value": "application/json"
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": null,
"folder": "40290aaf-3397-4747-ac05-bbd012dc6b75",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\r\n    \"id\": \"{{ActivityName}}\",\r\n    \"commandLine\": [ \"$(engine.path)\\\\\\\\revitcoreconsole.exe /i $(args[inputFile].path) /al $(appbundles[{{AppBundleName}}].path)\" ],\r\n    \"parameters\": {\r\n      \"inputFile\": {\r\n        \"zip\": false,\r\n        \"ondemand\": false,\r\n        \"verb\": \"get\",\r\n        \"description\": \"Input Revit model\",\r\n        \"required\": true,\r\n        \"localName\": \"$(inputFile)\"\r\n      },\r\n      \"inputIFC\": {\r\n        \"zip\": false,\r\n        \"ondemand\": false,\r\n        \"verb\": \"get\",\r\n        \"description\": \"Input IFC model\",\r\n        \"required\": false,\r\n        \"localName\": \"inputFile.ifc\"\r\n      },\r\n      \"outputFile\": {\r\n        \"zip\": false,\r\n        \"ondemand\": false,\r\n        \"verb\": \"put\",\r\n        \"description\": \"Output Revit model\",\r\n        \"required\": true,\r\n        \"localName\": \"outputFile.rvt\"\r\n      }\r\n    },\r\n    \"engine\": \"{{EngineName}}\",\r\n    \"appbundles\": [ \"{{AppNickName}}.{{AppBundleName}}+{{AppBundleAliasId}}\" ],\r\n    \"description\": \"{{AppBundleName}}\"\r\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "8c8335b6-2fc4-4ce2-98da-284d5a4265c1",
"name": "Model - Request Translation (To IFC) ",
"url": "https://{{ForgeURL}}/modelderivative/v2/designdata/job",
"description": "Translate a source file from one format to IFC format.\n\nhttps://developer.autodesk.com/en/docs/model-derivative/v2/reference/http/job-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/json",
"enabled": true
},
{
"key": "x-ads-force",
"value": "true",
"enabled": true
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"id": "4651b49a-d5bb-448d-af43-a000475fe3a8",
"exec": [
"/*",
" * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $",
" *",
" *  Licensed under the BSD 3-Clause License.",
" *    http://opensource.org/licenses/BSD-3-Clause",
" *",
" *  References:",
" *    http://en.wikipedia.org/wiki/Base64",
" */",
"",
"(function(global) {",
"    'use strict';",
"    // existing version for noConflict()",
"    var _Base64 = global.Base64;",
"    var version = \"2.1.9\";",
"    // if node.js, we use Buffer",
"    var buffer;",
"    if (typeof module !== 'undefined' && module.exports) {",
"        try {",
"            buffer = require('buffer').Buffer;",
"        } catch (err) {}",
"    }",
"    // constants",
"    var b64chars",
"        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';",
"    var b64tab = function(bin) {",
"        var t = {};",
"        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;",
"        return t;",
"    }(b64chars);",
"    var fromCharCode = String.fromCharCode;",
"    // encoder stuff",
"    var cb_utob = function(c) {",
"        if (c.length < 2) {",
"            var cc = c.charCodeAt(0);",
"            return cc < 0x80 ? c",
"                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))",
"                                + fromCharCode(0x80 | (cc & 0x3f)))",
"                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))",
"                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                   + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        } else {",
"            var cc = 0x10000",
"                + (c.charCodeAt(0) - 0xD800) * 0x400",
"                + (c.charCodeAt(1) - 0xDC00);",
"            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))",
"                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))",
"                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                    + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        }",
"    };",
"    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;",
"    var utob = function(u) {",
"        return u.replace(re_utob, cb_utob);",
"    };",
"    var cb_encode = function(ccc) {",
"        var padlen = [0, 2, 1][ccc.length % 3],",
"        ord = ccc.charCodeAt(0) << 16",
"            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)",
"            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),",
"        chars = [",
"            b64chars.charAt( ord >>> 18),",
"            b64chars.charAt((ord >>> 12) & 63),",
"            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),",
"            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)",
"        ];",
"        return chars.join('');",
"    };",
"    var btoa = global.btoa ? function(b) {",
"        return global.btoa(b);",
"    } : function(b) {",
"        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);",
"    };",
"    var _encode = buffer ? function (u) {",
"        return (u.constructor === buffer.constructor ? u : new buffer(u))",
"        .toString('base64')",
"    }",
"    : function (u) { return btoa(utob(u)) }",
"    ;",
"    var encode = function(u, urisafe) {",
"        return !urisafe",
"            ? _encode(String(u))",
"            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {",
"                return m0 == '+' ? '-' : '_';",
"            }).replace(/=/g, '');",
"    };",
"    var encodeURI = function(u) { return encode(u, true) };",
"    // decoder stuff",
"    var re_btou = new RegExp([",
"        '[\\xC0-\\xDF][\\x80-\\xBF]',",
"        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',",
"        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'",
"    ].join('|'), 'g');",
"    var cb_btou = function(cccc) {",
"        switch(cccc.length) {",
"        case 4:",
"            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)",
"                |    ((0x3f & cccc.charCodeAt(1)) << 12)",
"                |    ((0x3f & cccc.charCodeAt(2)) <<  6)",
"                |     (0x3f & cccc.charCodeAt(3)),",
"            offset = cp - 0x10000;",
"            return (fromCharCode((offset  >>> 10) + 0xD800)",
"                    + fromCharCode((offset & 0x3FF) + 0xDC00));",
"        case 3:",
"            return fromCharCode(",
"                ((0x0f & cccc.charCodeAt(0)) << 12)",
"                    | ((0x3f & cccc.charCodeAt(1)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(2))",
"            );",
"        default:",
"            return  fromCharCode(",
"                ((0x1f & cccc.charCodeAt(0)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(1))",
"            );",
"        }",
"    };",
"    var btou = function(b) {",
"        return b.replace(re_btou, cb_btou);",
"    };",
"    var cb_decode = function(cccc) {",
"        var len = cccc.length,",
"        padlen = len % 4,",
"        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)",
"            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)",
"            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)",
"            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),",
"        chars = [",
"            fromCharCode( n >>> 16),",
"            fromCharCode((n >>>  8) & 0xff),",
"            fromCharCode( n         & 0xff)",
"        ];",
"        chars.length -= [0, 0, 2, 1][padlen];",
"        return chars.join('');",
"    };",
"    var atob = global.atob ? function(a) {",
"        return global.atob(a);",
"    } : function(a){",
"        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);",
"    };",
"    var _decode = buffer ? function(a) {",
"        return (a.constructor === buffer.constructor",
"                ? a : new buffer(a, 'base64')).toString();",
"    }",
"    : function(a) { return btou(atob(a)) };",
"    var decode = function(a){",
"        return _decode(",
"            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })",
"                .replace(/[^A-Za-z0-9\\+\\/]/g, '')",
"        );",
"    };",
"    var noConflict = function() {",
"        var Base64 = global.Base64;",
"        global.Base64 = _Base64;",
"        return Base64;",
"    };",
"    // export Base64",
"    global.Base64 = {",
"        VERSION: version,",
"        atob: atob,",
"        btoa: btoa,",
"        fromBase64: decode,",
"        toBase64: encode,",
"        utob: utob,",
"        encode: encode,",
"        encodeURI: encodeURI,",
"        btou: btou,",
"        decode: decode,",
"        noConflict: noConflict",
"    };",
"    // if ES5 is available, make Base64.extendString() available",
"    if (typeof Object.defineProperty === 'function') {",
"        var noEnum = function(v){",
"            return {value:v,enumerable:false,writable:true,configurable:true};",
"        };",
"        global.Base64.extendString = function () {",
"            Object.defineProperty(",
"                String.prototype, 'fromBase64', noEnum(function () {",
"                    return decode(this)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64', noEnum(function (urisafe) {",
"                    return encode(this, urisafe)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64URI', noEnum(function () {",
"                    return encode(this, true)",
"                }));",
"        };",
"    }",
"    // that's it!",
"    if (global['Meteor']) {",
"        Base64 = global.Base64; // for normal export in Meteor.js",
"    }",
"    if (typeof module !== 'undefined' && module.exports) {",
"        module.exports.Base64 = global.Base64;",
"    }",
"    if (typeof define === 'function' && define.amd) {",
"        // AMD. Register as an anonymous module.",
"        define([], function(){ return global.Base64 });",
"    }",
"})(typeof self !== 'undefined' ? self",
" : typeof window !== 'undefined' ? window",
" : typeof global !== 'undefined' ? global",
" : this",
");",
"",
"var rootFilename = postman.getEnvironmentVariable( \"RootFilename\" );",
"",
"if( !rootFilename ) throw \"rootFilename cannot be empty\";",
"",
"postman.setEnvironmentVariable( \"Base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );"
],
"type": "text/javascript"
}
},
{
"listen": "test",
"script": {
"id": "3a711b32-9803-4855-8278-07ee9800e4de",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200; // or 201 if called a second time",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data =JSON.parse( responseBody );",
"tests[\"Success\"] = data.result === \"success\"; // or Created if called a second time"
],
"type": "text/javascript"
}
}
],
"folder": "63cd52eb-ecb1-4353-88c2-cab4ea26dd8f",
"preRequestScript": "/*\n * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n\n(function(global) {\n    'use strict';\n    // existing version for noConflict()\n    var _Base64 = global.Base64;\n    var version = \"2.1.9\";\n    // if node.js, we use Buffer\n    var buffer;\n    if (typeof module !== 'undefined' && module.exports) {\n        try {\n            buffer = require('buffer').Buffer;\n        } catch (err) {}\n    }\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                   + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa ? function(b) {\n        return global.btoa(b);\n    } : function(b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = buffer ? function (u) {\n        return (u.constructor === buffer.constructor ? u : new buffer(u))\n        .toString('base64')\n    }\n    : function (u) { return btoa(utob(u)) }\n    ;\n    var encode = function(u, urisafe) {\n        return !urisafe\n            ? _encode(String(u))\n            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {\n                return m0 == '+' ? '-' : '_';\n            }).replace(/=/g, '');\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    // decoder stuff\n    var re_btou = new RegExp([\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n    ].join('|'), 'g');\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var atob = global.atob ? function(a) {\n        return global.atob(a);\n    } : function(a){\n        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);\n    };\n    var _decode = buffer ? function(a) {\n        return (a.constructor === buffer.constructor\n                ? a : new buffer(a, 'base64')).toString();\n    }\n    : function(a) { return btou(atob(a)) };\n    var decode = function(a){\n        return _decode(\n            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n        );\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    // that's it!\n    if (global['Meteor']) {\n        Base64 = global.Base64; // for normal export in Meteor.js\n    }\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], function(){ return global.Base64 });\n    }\n})(typeof self !== 'undefined' ? self\n : typeof window !== 'undefined' ? window\n : typeof global !== 'undefined' ? global\n : this\n);\n\nvar rootFilename = postman.getEnvironmentVariable( \"RootFilename\" );\n\nif( !rootFilename ) throw \"rootFilename cannot be empty\";\n\npostman.setEnvironmentVariable( \"Base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );",
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200; // or 201 if called a second time\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data =JSON.parse( responseBody );\ntests[\"Success\"] = data.result === \"success\"; // or Created if called a second time",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\n   \"input\": {\n     \"urn\": \"{{Base64URN}}\",\n     \"compressedUrn\": false,\n     \"rootFilename\": \"{{Filename}}\"\n   },\n   \"output\": {\n     \"formats\": [\n       {\n         \"type\": \"IFC\",\n         \"views\": [\n           \"2d\",\n           \"3d\"\n         ],\n         \"advanced\": {\n        \t\"exportSettingName\": \"IFC4 Design Transfer View\"\t\n         }\n       }\n     ]\n   }\n }",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\nx-ads-force: true\n",
"pathVariables": {}
},
{
"id": "8d16b809-200a-4690-aaa5-a433986433a0",
"name": "DA - Get Activity by Id",
"url": "https://{{ForgeURL}}/da/us-east/v3/activities/:id",
"description": "GET\tactivities/:id\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/activities-id-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"type": "text",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"type": "text",
"value": "application/json"
}
],
"method": "GET",
"pathVariableData": [
{
"key": "id",
"value": "{{AppNickName}}.{{ActivityName}}+{{ActivityAliasId}}"
}
],
"queryParams": [],
"auth": null,
"events": null,
"folder": "40290aaf-3397-4747-ac05-bbd012dc6b75",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {
"id": "{{AppNickName}}.{{ActivityName}}+{{ActivityAliasId}}"
}
},
{
"id": "90086aa4-737f-4fa4-b470-eba51a517f62",
"name": "DA - Unset Nickname",
"url": "https://{{ForgeURL}}/da/us-east/v3/forgeapps/:id",
"description": "DELETE\tforgeapps/:id\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/forgeapps-id-DELETE/",
"data": null,
"dataMode": null,
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"type": "text",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"type": "text",
"value": "application/json"
}
],
"method": "DELETE",
"pathVariableData": [
{
"key": "id",
"value": "me"
}
],
"queryParams": [],
"auth": null,
"events": null,
"folder": "8b102939-3020-4983-a2fb-f3cc601def15",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {
"id": "me"
}
},
{
"id": "90be0bfd-b019-4b14-81cb-3218515d4ee9",
"name": "Data Mgmt - Revoke Bucket Permission",
"url": "https://{{ForgeURL}}/oss/v2/buckets/{{BucketName}}/revoke",
"description": "",
"data": [],
"dataMode": "raw",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"enabled": true,
"description": ""
},
{
"key": "Content-Type",
"value": "application/json",
"enabled": true,
"description": ""
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[ \"Content-Type is json\" ] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data = JSON.parse( responseBody );",
"tests[\"Key verified\"] = data.key === postman.getEnvironmentVariable( \"BucketName\" );",
""
]
}
}
],
"folder": "67ccc792-23b1-44e0-959e-d3a991dce762",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[ \"Content-Type is json\" ] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data = JSON.parse( responseBody );\ntests[\"Key verified\"] = data.key === postman.getEnvironmentVariable( \"BucketName\" );\n",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\n  \"revoke\": [\n    {\n      \"authId\": \"\"\n    }\n  ]\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "91134e06-13b7-4482-9dc6-d7fb3412797e",
"name": "Data Mgmt -  Move Item",
"url": "https://{{ForgeURL}}/data/v1/projects/{{ProjectId}}/items/{{ItemId}}",
"description": "PATCH Item\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/projects-project_id-items-item_id-PATCH/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/vnd.api+json",
"description": ""
}
],
"method": "PATCH",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "dda7134a-c30e-49c3-b202-66a5bccb86ff",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
],
"type": "text/javascript"
}
}
],
"folder": "d69ef64e-eb4d-49d4-a9d6-522960edf6a6",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\n    \"jsonapi\": {\n        \"version\": \"1.0\"\n    },\n    \"data\": {\n        \"type\": \"items\",\n        \"id\": \"{{ItemId}}\",\n        \"relationships\": {\n            \"parent\": {\n                \"data\": {\n                    \"type\": \"folders\",\n                    \"id\": \"{{ParentFolderId}}\"\n                }\n            }\n        }\n    }\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "9142bf30-7e85-445b-b9ae-116df940f70f",
"name": "Data Mgmt - ListItems",
"url": "https://{{ForgeURL}}/data/v1/projects/{{ProjectId}}/commands",
"description": "Data Mgmt - ListItems\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/ListItems/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/vnd.api+json",
"enabled": true
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "4b864382-5a39-497e-9e37-becadb28b6b4",
"exec": [
"tests[ \"Status code is 200\" ] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var response = JSON.parse( responseBody );",
"var included = response.included;",
"var firstIncluded = included[0];",
"var relationships = firstIncluded.relationships;",
"var storage = relationships.storage;",
"var data = storage.data;",
"",
"tests[\"Key verified\"] = data.id === postman.getEnvironmentVariable( \"URN\" );",
"",
"postman.setEnvironmentVariable( \"StorageURN\", data.id );",
"",
"",
"// base64URN will be encoded later"
],
"type": "text/javascript"
}
}
],
"folder": "dc6ff017-a212-42aa-9104-e2e71f5199dc",
"preRequestScript": null,
"tests": "tests[ \"Status code is 200\" ] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar response = JSON.parse( responseBody );\nvar included = response.included;\nvar firstIncluded = included[0];\nvar relationships = firstIncluded.relationships;\nvar storage = relationships.storage;\nvar data = storage.data;\n\ntests[\"Key verified\"] = data.id === postman.getEnvironmentVariable( \"URN\" );\n\npostman.setEnvironmentVariable( \"StorageURN\", data.id );\n\n\n// base64URN will be encoded later",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\n   \"jsonapi\":{\n      \"version\":\"1.0\"\n   },\n   \"data\":{\n      \"type\":\"commands\",\n      \"attributes\": {\n\t      \"extension\":{\n\t         \"type\":\"commands:autodesk.core:ListItems\",\n\t         \"version\":\"1.0.0\"\n\t      }\n      },\n      \"relationships\": {\n\t      \"resources\": {\n\t        \"data\": [\n\t          {\n\t            \"type\": \"folders\",\n\t            \"id\": \"{{FolderId}}\"\n\t          }\n\t        ]\n\t      }\n\t    }\n    }\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "917a7ebe-255d-4649-ba12-8f91bcce2cd2",
"name": "Data Mgmt - Grant Bucket Permission",
"url": "https://{{ForgeURL}}/oss/v2/buckets/{{BucketName}}/grant",
"description": "",
"data": [],
"dataMode": "raw",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"enabled": true,
"description": ""
},
{
"key": "Content-Type",
"value": "application/json",
"enabled": true,
"description": ""
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[ \"Content-Type is json\" ] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data = JSON.parse( responseBody );",
"tests[\"Key verified\"] = data.key === postman.getEnvironmentVariable( \"BucketName\" );",
""
]
}
}
],
"folder": "67ccc792-23b1-44e0-959e-d3a991dce762",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[ \"Content-Type is json\" ] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data = JSON.parse( responseBody );\ntests[\"Key verified\"] = data.key === postman.getEnvironmentVariable( \"BucketName\" );\n",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\n  \"allow\": [\n    {\n      \"authId\": \"\",\n      \"access\": \"read\"\n    }\n  ]\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "92615d9d-eaad-4a60-bcbb-7461722ead02",
"name": "Data Mgmt - Get File Details",
"url": "https://{{ForgeURL}}/oss/v2/buckets/{{BucketName}}/objects/{{Filename}}/details",
"description": "Returns file details in JSON format.\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/buckets-:bucketKey-objects-:objectName-details-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"type": "text/javascript",
"exec": [
"var fileName = postman.getEnvironmentVariable( \"Filename\" );",
"",
"if( !fileName ) throw \"Filename cannot be empty\";"
]
}
},
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data = JSON.parse( responseBody );",
"tests[\"Key verified\"] = data.objectKey === postman.getEnvironmentVariable( \"Filename\" );"
]
}
}
],
"folder": "67ccc792-23b1-44e0-959e-d3a991dce762",
"preRequestScript": "var fileName = postman.getEnvironmentVariable( \"Filename\" );\n\nif( !fileName ) throw \"Filename cannot be empty\";",
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data = JSON.parse( responseBody );\ntests[\"Key verified\"] = data.objectKey === postman.getEnvironmentVariable( \"Filename\" );",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\n",
"pathVariables": {}
},
{
"id": "955bbed8-94a6-4674-8199-5a9df23307da",
"name": "DA - Get AppBundle by Id",
"url": "https://{{ForgeURL}}/da/us-east/v3/appbundles/:id",
"description": "GET\tappbundles/:id\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/appbundles-id-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"type": "text",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"type": "text",
"value": "application/json"
}
],
"method": "GET",
"pathVariableData": [
{
"key": "id",
"value": "{{AppNickName}}.{{AppBundleName}}+{{AppBundleAliasId}}"
}
],
"queryParams": [],
"auth": null,
"events": null,
"folder": "71990473-bdaf-45d7-8834-a563578ef8ba",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {
"id": "{{AppNickName}}.{{AppBundleName}}+{{AppBundleAliasId}}"
}
},
{
"id": "9b61b1d8-45eb-46b8-a829-58da7ecc1b37",
"name": "Data Mgmt - GetPublishModelJob",
"url": "https://{{ForgeURL}}/data/v1/projects/{{ProjectId}}/commands",
"description": "Data Mgmt - GetPublishModelJob\n\nhttps://forge.autodesk.com/en/docs/data/v2/reference/http/GetPublishModelJob/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/vnd.api+json",
"enabled": true
},
{
"key": "x-user-id",
"value": "{{UserUID}}",
"description": "",
"enabled": true
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "85179c7c-da26-4be3-9b50-ef24fe1a4344",
"exec": [
"tests[ \"Status code is 200\" ] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"",
"// base64URN will be encoded later"
],
"type": "text/javascript"
}
}
],
"folder": "dc6ff017-a212-42aa-9104-e2e71f5199dc",
"preRequestScript": null,
"tests": "tests[ \"Status code is 200\" ] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\n\n// base64URN will be encoded later",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\n   \"jsonapi\":{\n      \"version\":\"1.0\"\n   },\n   \"data\":{\n      \"type\":\"commands\",\n      \"attributes\": {\n        \"extension\":{\n           \"type\":\"commands:autodesk.bim360:C4RModelGetPublishJob\",\n           \"version\":\"1.0.0\"\n        }\n      },\n      \"relationships\": {\n        \"resources\": {\n          \"data\": [\n            {\n              \"type\": \"items\",\n              \"id\": \"{{ItemId}}\" //!<<urn:adsk.wipprod:dm.lineage:lJ9o-go2TDS1OGdnIP5oKQ\n            }\n          ]\n        }\n      }\n    }\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\nx-user-id: {{UserUID}}\n",
"pathVariables": {}
},
{
"id": "9c234258-6400-466f-9a88-9c71baa25cc4",
"name": "DA - Create Activity JSON",
"url": "https://{{ForgeURL}}/da/us-east/v3/activities",
"description": "POST\tactivities\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/activities-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"enabled": true,
"key": "Authorization",
"type": "text",
"value": "Bearer {{Bearer}}"
},
{
"enabled": true,
"key": "Content-Type",
"type": "text",
"value": "application/json"
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": null,
"folder": "40290aaf-3397-4747-ac05-bbd012dc6b75",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\r\n    \"id\": \"{{ActivityName}}\",\r\n    \"commandLine\": [ \"$(engine.path)\\\\\\\\revitcoreconsole.exe /i $(args[inputFile].path) /al $(appbundles[{{AppBundleName}}].path)\" ],\r\n    \"parameters\": {\r\n      \"inputFile\": {\r\n        \"zip\": false,\r\n        \"ondemand\": false,\r\n        \"verb\": \"get\",\r\n        \"description\": \"Input Revit model\",\r\n        \"required\": true,\r\n        \"localName\": \"$(inputFile)\"\r\n      },\r\n      \"inputJson\": {\r\n        \"zip\": false,\r\n        \"ondemand\": false,\r\n        \"verb\": \"get\",\r\n        \"description\": \"input parameter definition json\",\r\n        \"required\": false,\r\n        \"localName\": \"params.json\"\r\n      },\r\n      \"outputFile\": {\r\n        \"zip\": false,\r\n        \"ondemand\": false,\r\n        \"verb\": \"put\",\r\n        \"description\": \"Output Revit model\",\r\n        \"required\": true,\r\n        \"localName\": \"outputFile.rvt\"\r\n      }\r\n    },\r\n    \"engine\": \"{{EngineName}}\",\r\n    \"appbundles\": [ \"{{AppNickName}}.{{AppBundleName}}+{{AppBundleAliasId}}\" ],\r\n    \"description\": \"{{AppBundleName}}\"\r\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "9cafda70-e12b-40aa-bec2-8fe6b95c2722",
"name": "BIM360 - GET Projects",
"url": "https://{{ForgeURL}}/hq/v1/accounts/{{AccountId}}/projects",
"description": "Get Project list\n\nhttps://developer.autodesk.com/en/docs/bim360/v1/reference/http/projects-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/vnd.api+json",
"description": "",
"enabled": false
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "fc644405-677b-4add-adfc-6e2e14d4baef",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
],
"type": "text/javascript"
}
}
],
"folder": "36b5c55e-1372-4a60-9cb6-3014f8ca89a4",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\n//Content-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "9f9d6842-ec85-4019-a67d-79c8bc24cdfb",
"name": "Data Mgmt - Delete a file",
"url": "https://{{ForgeURL}}/oss/v2/buckets/{{BucketName}}/objects/{{Filename}}",
"description": "Deletes a file from the bucket.\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/buckets-:bucketKey-objects-:objectName-DELETE/",
"data": [],
"dataMode": "params",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
}
],
"method": "DELETE",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"type": "text/javascript",
"exec": [
"var fileName = postman.getEnvironmentVariable( \"Filename\" );",
"",
"if( !fileName ) throw \"Filename cannot be empty\";"
]
}
},
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;"
]
}
}
],
"folder": "67ccc792-23b1-44e0-959e-d3a991dce762",
"preRequestScript": "var fileName = postman.getEnvironmentVariable( \"Filename\" );\n\nif( !fileName ) throw \"Filename cannot be empty\";",
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\n",
"pathVariables": {}
},
{
"id": "a208332c-4dc0-48c4-b309-3b2ed06698c5",
"name": "Data Mgmt - Upload to Storage",
"url": "https://{{ForgeURL}}/oss/v2/buckets/wip.dm.prod/objects/{{StorageNname}}",
"description": "Data Mgmt - Create Storage\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/buckets-:bucketKey-objects-:objectName-PUT/",
"data": [],
"dataMode": "binary",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/octet-stream",
"enabled": true
}
],
"method": "PUT",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "ece57f67-bc3d-46f1-9cc9-3e1a31f6a405",
"exec": [
"tests[ \"Status code is 200\" ] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data = JSON.parse( responseBody );",
"tests[\"Key verified\"] = data.objectKey === postman.getEnvironmentVariable( \"StorageFilename\" );",
"",
"postman.setEnvironmentVariable( \"URN\", data.objectId );",
"// base64URN will be encoded later"
],
"type": "text/javascript"
}
}
],
"folder": "b31706b7-1e86-4b20-9655-e34255160c8d",
"preRequestScript": null,
"tests": "tests[ \"Status code is 200\" ] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data = JSON.parse( responseBody );\ntests[\"Key verified\"] = data.objectKey === postman.getEnvironmentVariable( \"StorageFilename\" );\n\npostman.setEnvironmentVariable( \"URN\", data.objectId );\n// base64URN will be encoded later",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/octet-stream\n",
"pathVariables": {}
},
{
"id": "ad9d02ec-14b2-4789-ad29-369ff04a0cac",
"name": "Data Mgmt - Delete Folder",
"url": "https://{{ForgeURL}}/data/v1/projects/{{ProjectId}}/folders/{{FolderId}}",
"description": "PATCH Folder\n\nhttps://forge.autodesk.com/en/docs/data/v2/reference/http/projects-project_id-folders-folder_id-PATCH",
"data": [],
"dataMode": "raw",
"headerData": [
{
"enabled": true,
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"key": "Content-Type",
"value": "application/vnd.api+json"
}
],
"method": "PATCH",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "dda7134a-c30e-49c3-b202-66a5bccb86ff",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
],
"type": "text/javascript"
}
}
],
"folder": "5635befe-82b8-453d-b0df-440eee29ccdc",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\n    \"jsonapi\": {\n        \"version\": \"1.0\"\n    },\n    \"data\": {\n        \"type\": \"folders\",\n        \"id\": \"{{FolderId}}\",\n        \"attributes\": {\n        \t\"hidden\": true\n        }\n    }\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "b3ccbea9-064b-458d-8da2-896772f46f88",
"name": "Model - Get Metadata",
"url": "https://{{ForgeURL}}/modelderivative/v2/designdata/{{Base64URN}}/metadata",
"description": "Get File Metadata.\n\nhttps://developer.autodesk.com/en/docs/model-derivative/v2/reference/http/urn-metadata-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/json",
"description": "",
"enabled": true
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"id": "11504a54-afc6-470f-ae10-3d73a6ef94d3",
"exec": [
"/*",
" * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $",
" *",
" *  Licensed under the BSD 3-Clause License.",
" *    http://opensource.org/licenses/BSD-3-Clause",
" *",
" *  References:",
" *    http://en.wikipedia.org/wiki/Base64",
" */",
"",
"(function(global) {",
"    'use strict';",
"    // existing version for noConflict()",
"    var _Base64 = global.Base64;",
"    var version = \"2.1.9\";",
"    // if node.js, we use Buffer",
"    var buffer;",
"    if (typeof module !== 'undefined' && module.exports) {",
"        try {",
"            buffer = require('buffer').Buffer;",
"        } catch (err) {}",
"    }",
"    // constants",
"    var b64chars",
"        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';",
"    var b64tab = function(bin) {",
"        var t = {};",
"        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;",
"        return t;",
"    }(b64chars);",
"    var fromCharCode = String.fromCharCode;",
"    // encoder stuff",
"    var cb_utob = function(c) {",
"        if (c.length < 2) {",
"            var cc = c.charCodeAt(0);",
"            return cc < 0x80 ? c",
"                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))",
"                                + fromCharCode(0x80 | (cc & 0x3f)))",
"                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))",
"                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                   + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        } else {",
"            var cc = 0x10000",
"                + (c.charCodeAt(0) - 0xD800) * 0x400",
"                + (c.charCodeAt(1) - 0xDC00);",
"            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))",
"                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))",
"                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                    + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        }",
"    };",
"    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;",
"    var utob = function(u) {",
"        return u.replace(re_utob, cb_utob);",
"    };",
"    var cb_encode = function(ccc) {",
"        var padlen = [0, 2, 1][ccc.length % 3],",
"        ord = ccc.charCodeAt(0) << 16",
"            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)",
"            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),",
"        chars = [",
"            b64chars.charAt( ord >>> 18),",
"            b64chars.charAt((ord >>> 12) & 63),",
"            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),",
"            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)",
"        ];",
"        return chars.join('');",
"    };",
"    var btoa = global.btoa ? function(b) {",
"        return global.btoa(b);",
"    } : function(b) {",
"        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);",
"    };",
"    var _encode = buffer ? function (u) {",
"        return (u.constructor === buffer.constructor ? u : new buffer(u))",
"        .toString('base64')",
"    }",
"    : function (u) { return btoa(utob(u)) }",
"    ;",
"    var encode = function(u, urisafe) {",
"        return !urisafe",
"            ? _encode(String(u))",
"            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {",
"                return m0 == '+' ? '-' : '_';",
"            }).replace(/=/g, '');",
"    };",
"    var encodeURI = function(u) { return encode(u, true) };",
"    // decoder stuff",
"    var re_btou = new RegExp([",
"        '[\\xC0-\\xDF][\\x80-\\xBF]',",
"        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',",
"        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'",
"    ].join('|'), 'g');",
"    var cb_btou = function(cccc) {",
"        switch(cccc.length) {",
"        case 4:",
"            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)",
"                |    ((0x3f & cccc.charCodeAt(1)) << 12)",
"                |    ((0x3f & cccc.charCodeAt(2)) <<  6)",
"                |     (0x3f & cccc.charCodeAt(3)),",
"            offset = cp - 0x10000;",
"            return (fromCharCode((offset  >>> 10) + 0xD800)",
"                    + fromCharCode((offset & 0x3FF) + 0xDC00));",
"        case 3:",
"            return fromCharCode(",
"                ((0x0f & cccc.charCodeAt(0)) << 12)",
"                    | ((0x3f & cccc.charCodeAt(1)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(2))",
"            );",
"        default:",
"            return  fromCharCode(",
"                ((0x1f & cccc.charCodeAt(0)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(1))",
"            );",
"        }",
"    };",
"    var btou = function(b) {",
"        return b.replace(re_btou, cb_btou);",
"    };",
"    var cb_decode = function(cccc) {",
"        var len = cccc.length,",
"        padlen = len % 4,",
"        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)",
"            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)",
"            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)",
"            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),",
"        chars = [",
"            fromCharCode( n >>> 16),",
"            fromCharCode((n >>>  8) & 0xff),",
"            fromCharCode( n         & 0xff)",
"        ];",
"        chars.length -= [0, 0, 2, 1][padlen];",
"        return chars.join('');",
"    };",
"    var atob = global.atob ? function(a) {",
"        return global.atob(a);",
"    } : function(a){",
"        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);",
"    };",
"    var _decode = buffer ? function(a) {",
"        return (a.constructor === buffer.constructor",
"                ? a : new buffer(a, 'base64')).toString();",
"    }",
"    : function(a) { return btou(atob(a)) };",
"    var decode = function(a){",
"        return _decode(",
"            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })",
"                .replace(/[^A-Za-z0-9\\+\\/]/g, '')",
"        );",
"    };",
"    var noConflict = function() {",
"        var Base64 = global.Base64;",
"        global.Base64 = _Base64;",
"        return Base64;",
"    };",
"    // export Base64",
"    global.Base64 = {",
"        VERSION: version,",
"        atob: atob,",
"        btoa: btoa,",
"        fromBase64: decode,",
"        toBase64: encode,",
"        utob: utob,",
"        encode: encode,",
"        encodeURI: encodeURI,",
"        btou: btou,",
"        decode: decode,",
"        noConflict: noConflict",
"    };",
"    // if ES5 is available, make Base64.extendString() available",
"    if (typeof Object.defineProperty === 'function') {",
"        var noEnum = function(v){",
"            return {value:v,enumerable:false,writable:true,configurable:true};",
"        };",
"        global.Base64.extendString = function () {",
"            Object.defineProperty(",
"                String.prototype, 'fromBase64', noEnum(function () {",
"                    return decode(this)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64', noEnum(function (urisafe) {",
"                    return encode(this, urisafe)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64URI', noEnum(function () {",
"                    return encode(this, true)",
"                }));",
"        };",
"    }",
"    // that's it!",
"    if (global['Meteor']) {",
"        Base64 = global.Base64; // for normal export in Meteor.js",
"    }",
"    if (typeof module !== 'undefined' && module.exports) {",
"        module.exports.Base64 = global.Base64;",
"    }",
"    if (typeof define === 'function' && define.amd) {",
"        // AMD. Register as an anonymous module.",
"        define([], function(){ return global.Base64 });",
"    }",
"})(typeof self !== 'undefined' ? self",
" : typeof window !== 'undefined' ? window",
" : typeof global !== 'undefined' ? global",
" : this",
");",
"",
"postman.setEnvironmentVariable( \"Base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );"
],
"type": "text/javascript"
}
},
{
"listen": "test",
"script": {
"id": "8c8f6a16-c454-45c6-810f-7eebb6223d24",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200 ;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data = JSON.parse( responseBody );",
"tests[\"Response has progress\"] = data.hasOwnProperty( \"progress\" );",
"tests[\"Response has status\"] = data.hasOwnProperty( \"status\" );",
"tests[\"Response has urn\"] = data.hasOwnProperty( \"urn\" );",
"tests[\"urn verified\"] = data.urn === postman.getEnvironmentVariable( \"base64URN\" );"
],
"type": "text/javascript"
}
}
],
"folder": "63cd52eb-ecb1-4353-88c2-cab4ea26dd8f",
"preRequestScript": "/*\n * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n\n(function(global) {\n    'use strict';\n    // existing version for noConflict()\n    var _Base64 = global.Base64;\n    var version = \"2.1.9\";\n    // if node.js, we use Buffer\n    var buffer;\n    if (typeof module !== 'undefined' && module.exports) {\n        try {\n            buffer = require('buffer').Buffer;\n        } catch (err) {}\n    }\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                   + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa ? function(b) {\n        return global.btoa(b);\n    } : function(b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = buffer ? function (u) {\n        return (u.constructor === buffer.constructor ? u : new buffer(u))\n        .toString('base64')\n    }\n    : function (u) { return btoa(utob(u)) }\n    ;\n    var encode = function(u, urisafe) {\n        return !urisafe\n            ? _encode(String(u))\n            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {\n                return m0 == '+' ? '-' : '_';\n            }).replace(/=/g, '');\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    // decoder stuff\n    var re_btou = new RegExp([\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n    ].join('|'), 'g');\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var atob = global.atob ? function(a) {\n        return global.atob(a);\n    } : function(a){\n        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);\n    };\n    var _decode = buffer ? function(a) {\n        return (a.constructor === buffer.constructor\n                ? a : new buffer(a, 'base64')).toString();\n    }\n    : function(a) { return btou(atob(a)) };\n    var decode = function(a){\n        return _decode(\n            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n        );\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    // that's it!\n    if (global['Meteor']) {\n        Base64 = global.Base64; // for normal export in Meteor.js\n    }\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], function(){ return global.Base64 });\n    }\n})(typeof self !== 'undefined' ? self\n : typeof window !== 'undefined' ? window\n : typeof global !== 'undefined' ? global\n : this\n);\n\npostman.setEnvironmentVariable( \"Base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );",
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200 ;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data = JSON.parse( responseBody );\ntests[\"Response has progress\"] = data.hasOwnProperty( \"progress\" );\ntests[\"Response has status\"] = data.hasOwnProperty( \"status\" );\ntests[\"Response has urn\"] = data.hasOwnProperty( \"urn\" );\ntests[\"urn verified\"] = data.urn === postman.getEnvironmentVariable( \"base64URN\" );",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "b41fcf57-3096-4efc-a074-7754e8f5b0c2",
"name": "Data Mgmt - GET Personal Hub",
"url": "https://{{ForgeURL}}/project/v1/hubs?filter[extension.type]=hubs:autodesk.a360:PersonalHub",
"description": "Get Hub list\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/hubs-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"value": "application/vnd.api+json"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [
{
"key": "filter[extension.type]",
"value": "hubs:autodesk.a360:PersonalHub",
"equals": true,
"description": "",
"enabled": true
}
],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
]
}
}
],
"folder": "d1d9b5ce-9844-4787-9cfc-1725027606be",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "b4607ada-3d07-48da-8c54-fb54ca8df1d2",
"name": "Three Legged - Refresh Token",
"url": "https://{{ForgeURL}}/authentication/v1/refreshtoken",
"description": "https://forge.autodesk.com/en/docs/oauth/v2/reference/http/refreshtoken-POST/",
"data": [
{
"key": "client_id",
"value": "{{ClientKey}}",
"type": "text",
"enabled": true
},
{
"key": "client_secret",
"value": "{{ClientSecret}}",
"type": "text",
"enabled": true
},
{
"key": "grant_type",
"value": "refresh_token",
"type": "text",
"enabled": true
},
{
"key": "scope",
"value": "{{OAuthScopes}}",
"type": "text",
"enabled": true
},
{
"key": "refresh_token",
"value": "{{RefreshToken}}",
"description": "",
"type": "text",
"enabled": true
}
],
"dataMode": "urlencoded",
"headerData": [],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": {
"type": "oauth2",
"oauth2": [
{
"key": "accessToken",
"value": "eyJhbGciOiJIUzI1NiIsImtpZCI6Imp3dF9zeW1tZXRyaWNfa2V5In0.eyJ1c2VyaWQiOiJXOFpEUExVVFNKS1oiLCJleHAiOjE1MTU3NTEzOTEsInNjb3BlIjpbImRhdGE6cmVhZCIsImRhdGE6d3JpdGUiLCJkYXRhOmNyZWF0ZSIsImRhdGE6c2VhcmNoIiwiYnVja2V0OmNyZWF0ZSIsImJ1Y2tldDpyZWFkIiwiYnVja2V0OnVwZGF0ZSIsImJ1Y2tldDpkZWxldGUiXSwiY2xpZW50X2lkIjoiTGtXRUo3eHBiR1A2M3g0SEwzMzVZNm0yNm9Ba0dHb0YiLCJncmFudF9pZCI6ImsxS0RxdXR3UjVYWjNJb1ptYnR2MGlOMkVBSk1FTDRkIiwiYXVkIjoiaHR0cHM6Ly9hdXRvZGVzay5jb20vYXVkL2p3dGV4cDYwIiwianRpIjoicHgxY0l1M1VVU01GdEJTd0g5ejI0MGcwVUNTanZCc0pMbzJPRTh3SEhkMjBBVkl6WjlYUzJpTjBMeGNJZndiZyJ9.CSpulHpp5GUi4FOTlAAChiyRablXrn1ANokwb4NnecE",
"type": "string"
},
{
"key": "tokenType",
"value": "Bearer",
"type": "string"
},
{
"key": "addTokenTo",
"value": "header",
"type": "string"
}
]
},
"events": [
{
"listen": "test",
"script": {
"id": "802e982e-ee43-415b-bfd3-5d96e401b209",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200 ;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data = JSON.parse( responseBody );",
"tests[\"Bearer ok\"] = data.access_token !== '' ;",
"",
"postman.setEnvironmentVariable( \"Bearer\", data.access_token );"
],
"type": "text/javascript"
}
}
],
"folder": "aa6fbf08-6622-4c6c-bb6e-d72c73cbbdfa",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200 ;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data = JSON.parse( responseBody );\ntests[\"Bearer ok\"] = data.access_token !== '' ;\n\npostman.setEnvironmentVariable( \"Bearer\", data.access_token );",
"currentHelper": "oAuth2",
"helperAttributes": {
"id": "oAuth2",
"accessToken": "eyJhbGciOiJIUzI1NiIsImtpZCI6Imp3dF9zeW1tZXRyaWNfa2V5In0.eyJ1c2VyaWQiOiJXOFpEUExVVFNKS1oiLCJleHAiOjE1MTU3NTEzOTEsInNjb3BlIjpbImRhdGE6cmVhZCIsImRhdGE6d3JpdGUiLCJkYXRhOmNyZWF0ZSIsImRhdGE6c2VhcmNoIiwiYnVja2V0OmNyZWF0ZSIsImJ1Y2tldDpyZWFkIiwiYnVja2V0OnVwZGF0ZSIsImJ1Y2tldDpkZWxldGUiXSwiY2xpZW50X2lkIjoiTGtXRUo3eHBiR1A2M3g0SEwzMzVZNm0yNm9Ba0dHb0YiLCJncmFudF9pZCI6ImsxS0RxdXR3UjVYWjNJb1ptYnR2MGlOMkVBSk1FTDRkIiwiYXVkIjoiaHR0cHM6Ly9hdXRvZGVzay5jb20vYXVkL2p3dGV4cDYwIiwianRpIjoicHgxY0l1M1VVU01GdEJTd0g5ejI0MGcwVUNTanZCc0pMbzJPRTh3SEhkMjBBVkl6WjlYUzJpTjBMeGNJZndiZyJ9.CSpulHpp5GUi4FOTlAAChiyRablXrn1ANokwb4NnecE",
"addTokenTo": "header",
"tokenType": "Bearer"
},
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "",
"pathVariables": {}
},
{
"id": "b667f735-19f6-476a-b435-3193dc7e302d",
"name": "BIM360 - GET Field Issues",
"url": "https://{{ForgeURL}}/issues/v1/containers/{{ContainerId}}/issues",
"description": "GET Field Issues\n\nhttps://developer.autodesk.com/en/docs/bim360/v1/reference/http/field-issues-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/vnd.api+json",
"enabled": false
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "24e6ab6d-d5ee-4da7-9026-c821ee8052fd",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
],
"type": "text/javascript"
}
}
],
"folder": "176b1e9c-d3a6-4f92-8bb9-9570be2399d7",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\n//Content-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "bf70e37a-10c1-42c4-ae3d-8023ff0dc93a",
"name": "Data Mgmt - GET Item",
"url": "https://{{ForgeURL}}/data/v1/projects/{{ProjectId}}/items/{{ItemId}}",
"description": "GET Item\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/projects-project_id-items-item_id-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/vnd.api+json",
"description": "",
"enabled": true
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
]
}
}
],
"folder": "d69ef64e-eb4d-49d4-a9d6-522960edf6a6",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "cb01efd1-b3df-4ae0-913c-8599a225754e",
"name": "DA - Setup AppBundle alias",
"url": "https://{{ForgeURL}}/da/us-east/v3/appbundles/:id/aliases",
"description": "POST\tappbundles/:id/aliases\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/appbundles-id-aliases-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"type": "text",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"type": "text",
"value": "application/json"
}
],
"method": "POST",
"pathVariableData": [
{
"key": "id",
"value": "{{AppBundleName}}"
}
],
"queryParams": [],
"auth": null,
"events": null,
"folder": "71990473-bdaf-45d7-8834-a563578ef8ba",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\r\n      \"version\": {{AppBundleAliasVersion}},\r\n      \"id\": \"{{AppBundleAliasId}}\"\r\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {
"id": "{{AppBundleName}}"
}
},
{
"id": "d10d7eef-8362-4c2a-ae16-c25ea95f6d83",
"name": "Data Mgmt - Delete Item",
"url": "https://{{ForgeURL}}/data/v1/projects/{{ProjectId}}/versions",
"description": "POST\tprojects/:project_id/versions\n\nhttps://forge.autodesk.com/en/docs/data/v2/reference/http/projects-project_id-versions-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"enabled": true,
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"key": "Content-Type",
"name": "Content-Type",
"value": "application/vnd.api+json",
"description": "",
"type": "text"
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "57099266-c5e7-4eb2-aeb7-a3a17dbcf096",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
],
"type": "text/javascript"
}
}
],
"folder": "f43d812c-e698-4de9-8e25-186813f25eb4",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{ \r\n   \"jsonapi\":{ \r\n      \"version\":\"1.0\"\r\n   },\r\n   \"data\":{ \r\n      \"type\":\"versions\",\r\n      \"attributes\":{ \r\n         \"extension\":{ \r\n            \"type\":\"versions:autodesk.core:Deleted\",\r\n            \"version\":\"1.0\"\r\n         }\r\n      },\r\n      \"relationships\":{ \r\n         \"item\":{ \r\n            \"data\":{ \r\n               \"type\":\"items\",\r\n               \"id\":\"{{ItemId}}\"\r\n            }\r\n         }\r\n      }\r\n   }\r\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "dc4fec61-4ba4-451c-9f12-72fb7cddb369",
"name": "Model - Delete Viewable",
"url": "https://{{ForgeURL}}/modelderivative/v2/designdata/{{base64URN}}/manifest",
"description": "Delete all viewables of a file.\n\nhttps://developer.autodesk.com/en/docs/model-derivative/v2/reference/http/urn-manifest-DELETE/",
"data": [],
"dataMode": "params",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"key": "Content-Type",
"value": "application/json"
}
],
"method": "DELETE",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200 ;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data = JSON.parse( responseBody );",
"tests[\"Success\"] = data.result === \"success\"; // or Created if called a second time"
]
}
}
],
"folder": "63cd52eb-ecb1-4353-88c2-cab4ea26dd8f",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200 ;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data = JSON.parse( responseBody );\ntests[\"Success\"] = data.result === \"success\"; // or Created if called a second time",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "dd9b1e23-2cf7-4c16-b501-c1094a168941",
"name": "Data Mgmt - Get Project",
"url": "https://{{ForgeURL}}/project/v1/hubs/{{HubId}}/projects/{{ProjectId}}",
"description": "Get Project\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/hubs-hub_id-projects-project_id-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"value": "application/vnd.api+json"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
]
}
}
],
"folder": "58ed33dd-80ec-4ff7-ac2b-73f8a0224af2",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "ddcf2607-cf9e-4eaf-9156-b6ecde011f5d",
"name": "Data Mgmt - Upload a file",
"url": "https://{{ForgeURL}}/oss/v2/buckets/{{BucketName}}/objects/{{Filename}}",
"description": "Upload a file to bucket.\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/buckets-:bucketKey-objects-:objectName-PUT/",
"data": [],
"dataMode": "binary",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"key": "Content-Type",
"value": "application/octet-stream"
}
],
"method": "PUT",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"type": "text/javascript",
"exec": [
"var fileName = postman.getEnvironmentVariable( \"Filename\" );",
"",
"if( !fileName ) throw \"Filename cannot be empty\";"
]
}
},
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[ \"Status code is 200\" ] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data = JSON.parse( responseBody );",
"tests[\"Key verified\"] = data.objectKey === postman.getEnvironmentVariable( \"Filename\" );",
"",
"postman.setEnvironmentVariable( \"URN\", data.objectId );",
"// base64URN will be encoded later"
]
}
}
],
"folder": "67ccc792-23b1-44e0-959e-d3a991dce762",
"preRequestScript": "var fileName = postman.getEnvironmentVariable( \"Filename\" );\n\nif( !fileName ) throw \"Filename cannot be empty\";",
"tests": "tests[ \"Status code is 200\" ] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data = JSON.parse( responseBody );\ntests[\"Key verified\"] = data.objectKey === postman.getEnvironmentVariable( \"Filename\" );\n\npostman.setEnvironmentVariable( \"URN\", data.objectId );\n// base64URN will be encoded later",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/octet-stream\n",
"pathVariables": {}
},
{
"id": "e0a081ac-782d-4761-a769-127eec027c6b",
"name": "DA - Setup Activity alias",
"url": "https://{{ForgeURL}}/da/us-east/v3/activities/:id/aliases",
"description": "POST\tactivities/:id/aliases\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/activities-id-aliases-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"type": "text",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"type": "text",
"value": "application/json"
}
],
"method": "POST",
"pathVariableData": [
{
"key": "id",
"value": "{{ActivityName}}"
}
],
"queryParams": [],
"auth": null,
"events": null,
"folder": "40290aaf-3397-4747-ac05-bbd012dc6b75",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\r\n      \"version\": {{ActivityAliasVersion}},\r\n      \"id\": \"{{ActivityAliasId}}\"\r\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {
"id": "{{ActivityName}}"
}
},
{
"id": "e228a621-77b1-4a11-8d6a-7363ce004383",
"name": "DA - Get AppBundles",
"url": "https://{{ForgeURL}}/da/us-east/v3/appbundles",
"description": "GET\tappbundles\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/appbundles-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"type": "text",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"type": "text",
"value": "application/json"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": null,
"folder": "71990473-bdaf-45d7-8834-a563578ef8ba",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "e749086a-8ca9-44d9-8060-222b496ec72f",
"name": "Data Mgmt - GET Team Project List",
"url": "https://{{ForgeURL}}/project/v1/hubs/{{HubId}}/projects?filter[extension.type]=projects:autodesk.core:Project",
"description": "Get Project List\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/hubs-hub_id-projects-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"value": "application/vnd.api+json"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [
{
"key": "filter[extension.type]",
"value": "projects:autodesk.core:Project",
"equals": true,
"description": "",
"enabled": true
}
],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
]
}
}
],
"folder": "58ed33dd-80ec-4ff7-ac2b-73f8a0224af2",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "e9b44dc7-754c-4762-a8e6-4a629ffe340e",
"name": "Data Mgmt - PublishModel",
"url": "https://{{ForgeURL}}/data/v1/projects/{{ProjectId}}/commands",
"description": "Data Mgmt - PublishModel\n\nhttps://forge.autodesk.com/en/docs/data/v2/reference/http/PublishModel/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"enabled": true,
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"enabled": true,
"key": "Content-Type",
"value": "application/vnd.api+json"
},
{
"description": "",
"enabled": true,
"key": "x-user-id",
"value": "{{UserUID}}"
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "85179c7c-da26-4be3-9b50-ef24fe1a4344",
"exec": [
"tests[ \"Status code is 200\" ] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"",
"// base64URN will be encoded later"
],
"type": "text/javascript"
}
}
],
"folder": "dc6ff017-a212-42aa-9104-e2e71f5199dc",
"preRequestScript": null,
"tests": "tests[ \"Status code is 200\" ] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\n\n// base64URN will be encoded later",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\n   \"jsonapi\":{\n      \"version\":\"1.0\"\n   },\n   \"data\":{\n      \"type\":\"commands\",\n      \"attributes\": {\n        \"extension\":{\n           \"type\":\"commands:autodesk.bim360:C4RModelPublish\",\n           \"version\":\"1.0.0\"\n        }\n      },\n      \"relationships\": {\n        \"resources\": {\n          \"data\": [\n            {\n              \"type\": \"items\",\n              \"id\": \"{{ItemId}}\" //!<<urn:adsk.wipprod:dm.lineage:lJ9o-go2TDS1OGdnIP5oKQ\n            }\n          ]\n        }\n      }\n    }\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\nx-user-id: {{UserUID}}\n",
"pathVariables": {}
},
{
"id": "ef5df910-ace7-46e8-ac7e-6e91a36c833b",
"name": "Model - Request Translation (SVF)",
"url": "https://{{ForgeURL}}/modelderivative/v2/designdata/job",
"description": "Translate a source file from one format to SVF format.\n\nhttps://developer.autodesk.com/en/docs/model-derivative/v2/reference/http/job-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/json",
"description": "",
"enabled": true
},
{
"key": "x-ads-force",
"value": "true",
"description": "",
"enabled": true
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "prerequest",
"script": {
"id": "c9396e04-fa00-496e-896c-6b8938fb6b38",
"exec": [
"/*",
" * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $",
" *",
" *  Licensed under the BSD 3-Clause License.",
" *    http://opensource.org/licenses/BSD-3-Clause",
" *",
" *  References:",
" *    http://en.wikipedia.org/wiki/Base64",
" */",
"",
"(function(global) {",
"    'use strict';",
"    // existing version for noConflict()",
"    var _Base64 = global.Base64;",
"    var version = \"2.1.9\";",
"    // if node.js, we use Buffer",
"    var buffer;",
"    if (typeof module !== 'undefined' && module.exports) {",
"        try {",
"            buffer = require('buffer').Buffer;",
"        } catch (err) {}",
"    }",
"    // constants",
"    var b64chars",
"        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';",
"    var b64tab = function(bin) {",
"        var t = {};",
"        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;",
"        return t;",
"    }(b64chars);",
"    var fromCharCode = String.fromCharCode;",
"    // encoder stuff",
"    var cb_utob = function(c) {",
"        if (c.length < 2) {",
"            var cc = c.charCodeAt(0);",
"            return cc < 0x80 ? c",
"                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))",
"                                + fromCharCode(0x80 | (cc & 0x3f)))",
"                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))",
"                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                   + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        } else {",
"            var cc = 0x10000",
"                + (c.charCodeAt(0) - 0xD800) * 0x400",
"                + (c.charCodeAt(1) - 0xDC00);",
"            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))",
"                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))",
"                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))",
"                    + fromCharCode(0x80 | ( cc         & 0x3f)));",
"        }",
"    };",
"    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;",
"    var utob = function(u) {",
"        return u.replace(re_utob, cb_utob);",
"    };",
"    var cb_encode = function(ccc) {",
"        var padlen = [0, 2, 1][ccc.length % 3],",
"        ord = ccc.charCodeAt(0) << 16",
"            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)",
"            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),",
"        chars = [",
"            b64chars.charAt( ord >>> 18),",
"            b64chars.charAt((ord >>> 12) & 63),",
"            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),",
"            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)",
"        ];",
"        return chars.join('');",
"    };",
"    var btoa = global.btoa ? function(b) {",
"        return global.btoa(b);",
"    } : function(b) {",
"        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);",
"    };",
"    var _encode = buffer ? function (u) {",
"        return (u.constructor === buffer.constructor ? u : new buffer(u))",
"        .toString('base64')",
"    }",
"    : function (u) { return btoa(utob(u)) }",
"    ;",
"    var encode = function(u, urisafe) {",
"        return !urisafe",
"            ? _encode(String(u))",
"            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {",
"                return m0 == '+' ? '-' : '_';",
"            }).replace(/=/g, '');",
"    };",
"    var encodeURI = function(u) { return encode(u, true) };",
"    // decoder stuff",
"    var re_btou = new RegExp([",
"        '[\\xC0-\\xDF][\\x80-\\xBF]',",
"        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',",
"        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'",
"    ].join('|'), 'g');",
"    var cb_btou = function(cccc) {",
"        switch(cccc.length) {",
"        case 4:",
"            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)",
"                |    ((0x3f & cccc.charCodeAt(1)) << 12)",
"                |    ((0x3f & cccc.charCodeAt(2)) <<  6)",
"                |     (0x3f & cccc.charCodeAt(3)),",
"            offset = cp - 0x10000;",
"            return (fromCharCode((offset  >>> 10) + 0xD800)",
"                    + fromCharCode((offset & 0x3FF) + 0xDC00));",
"        case 3:",
"            return fromCharCode(",
"                ((0x0f & cccc.charCodeAt(0)) << 12)",
"                    | ((0x3f & cccc.charCodeAt(1)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(2))",
"            );",
"        default:",
"            return  fromCharCode(",
"                ((0x1f & cccc.charCodeAt(0)) << 6)",
"                    |  (0x3f & cccc.charCodeAt(1))",
"            );",
"        }",
"    };",
"    var btou = function(b) {",
"        return b.replace(re_btou, cb_btou);",
"    };",
"    var cb_decode = function(cccc) {",
"        var len = cccc.length,",
"        padlen = len % 4,",
"        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)",
"            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)",
"            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)",
"            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),",
"        chars = [",
"            fromCharCode( n >>> 16),",
"            fromCharCode((n >>>  8) & 0xff),",
"            fromCharCode( n         & 0xff)",
"        ];",
"        chars.length -= [0, 0, 2, 1][padlen];",
"        return chars.join('');",
"    };",
"    var atob = global.atob ? function(a) {",
"        return global.atob(a);",
"    } : function(a){",
"        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);",
"    };",
"    var _decode = buffer ? function(a) {",
"        return (a.constructor === buffer.constructor",
"                ? a : new buffer(a, 'base64')).toString();",
"    }",
"    : function(a) { return btou(atob(a)) };",
"    var decode = function(a){",
"        return _decode(",
"            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })",
"                .replace(/[^A-Za-z0-9\\+\\/]/g, '')",
"        );",
"    };",
"    var noConflict = function() {",
"        var Base64 = global.Base64;",
"        global.Base64 = _Base64;",
"        return Base64;",
"    };",
"    // export Base64",
"    global.Base64 = {",
"        VERSION: version,",
"        atob: atob,",
"        btoa: btoa,",
"        fromBase64: decode,",
"        toBase64: encode,",
"        utob: utob,",
"        encode: encode,",
"        encodeURI: encodeURI,",
"        btou: btou,",
"        decode: decode,",
"        noConflict: noConflict",
"    };",
"    // if ES5 is available, make Base64.extendString() available",
"    if (typeof Object.defineProperty === 'function') {",
"        var noEnum = function(v){",
"            return {value:v,enumerable:false,writable:true,configurable:true};",
"        };",
"        global.Base64.extendString = function () {",
"            Object.defineProperty(",
"                String.prototype, 'fromBase64', noEnum(function () {",
"                    return decode(this)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64', noEnum(function (urisafe) {",
"                    return encode(this, urisafe)",
"                }));",
"            Object.defineProperty(",
"                String.prototype, 'toBase64URI', noEnum(function () {",
"                    return encode(this, true)",
"                }));",
"        };",
"    }",
"    // that's it!",
"    if (global['Meteor']) {",
"        Base64 = global.Base64; // for normal export in Meteor.js",
"    }",
"    if (typeof module !== 'undefined' && module.exports) {",
"        module.exports.Base64 = global.Base64;",
"    }",
"    if (typeof define === 'function' && define.amd) {",
"        // AMD. Register as an anonymous module.",
"        define([], function(){ return global.Base64 });",
"    }",
"})(typeof self !== 'undefined' ? self",
" : typeof window !== 'undefined' ? window",
" : typeof global !== 'undefined' ? global",
" : this",
");",
"",
"var fileName = postman.getEnvironmentVariable( \"Filename\" );",
"",
"if( !fileName ) throw \"Filename cannot be empty\";",
"",
"postman.setEnvironmentVariable( \"Base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );",
""
],
"type": "text/javascript"
}
},
{
"listen": "test",
"script": {
"id": "15909105-1f06-48ed-97d7-90f90deb7a56",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200; // or 201 if called a second time",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;",
"",
"var data =JSON.parse( responseBody );",
"tests[\"Success\"] = data.result === \"success\"; // or Created if called a second time"
],
"type": "text/javascript"
}
}
],
"folder": "63cd52eb-ecb1-4353-88c2-cab4ea26dd8f",
"preRequestScript": "/*\n * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n\n(function(global) {\n    'use strict';\n    // existing version for noConflict()\n    var _Base64 = global.Base64;\n    var version = \"2.1.9\";\n    // if node.js, we use Buffer\n    var buffer;\n    if (typeof module !== 'undefined' && module.exports) {\n        try {\n            buffer = require('buffer').Buffer;\n        } catch (err) {}\n    }\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                   + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa ? function(b) {\n        return global.btoa(b);\n    } : function(b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = buffer ? function (u) {\n        return (u.constructor === buffer.constructor ? u : new buffer(u))\n        .toString('base64')\n    }\n    : function (u) { return btoa(utob(u)) }\n    ;\n    var encode = function(u, urisafe) {\n        return !urisafe\n            ? _encode(String(u))\n            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {\n                return m0 == '+' ? '-' : '_';\n            }).replace(/=/g, '');\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    // decoder stuff\n    var re_btou = new RegExp([\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n    ].join('|'), 'g');\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var atob = global.atob ? function(a) {\n        return global.atob(a);\n    } : function(a){\n        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);\n    };\n    var _decode = buffer ? function(a) {\n        return (a.constructor === buffer.constructor\n                ? a : new buffer(a, 'base64')).toString();\n    }\n    : function(a) { return btou(atob(a)) };\n    var decode = function(a){\n        return _decode(\n            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n        );\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    // that's it!\n    if (global['Meteor']) {\n        Base64 = global.Base64; // for normal export in Meteor.js\n    }\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], function(){ return global.Base64 });\n    }\n})(typeof self !== 'undefined' ? self\n : typeof window !== 'undefined' ? window\n : typeof global !== 'undefined' ? global\n : this\n);\n\nvar fileName = postman.getEnvironmentVariable( \"Filename\" );\n\nif( !fileName ) throw \"Filename cannot be empty\";\n\npostman.setEnvironmentVariable( \"Base64URN\", this.Base64.encodeURI( postman.getEnvironmentVariable( \"URN\" ) ) );\n",
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200; // or 201 if called a second time\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/json\" ) !== -1;\n\nvar data =JSON.parse( responseBody );\ntests[\"Success\"] = data.result === \"success\"; // or Created if called a second time",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\n   \"input\": {\n     \"urn\": \"{{Base64URN}}\"\n   },\n   \"output\": {\n     \"formats\": [\n       {\n         \"type\": \"svf\",\n         \"views\": [\n           \"2d\",\n           \"3d\"\n         ]\n       }\n     ]\n   }\n }",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\nx-ads-force: true\n",
"pathVariables": {}
},
{
"id": "f17ae40f-ae08-47f1-a1c0-a3e410dce6c1",
"name": "Data Mgmt - Resumable Upload Status",
"url": "https://{{ForgeURL}}/oss/v2/buckets/{{BucketName}}/objects/{{Filename}}/status/{{ResumableSessionId}}",
"description": "https://developer.autodesk.com/api/view-and-data-api/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}"
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests [\"Status code is 202\"] =responseCode.code === 202 ;",
"tests [\"Range is present\"] =responseHeaders.hasOwnProperty (\"Range\") ;",
""
]
}
}
],
"folder": "67ccc792-23b1-44e0-959e-d3a991dce762",
"preRequestScript": null,
"tests": "tests [\"Status code is 202\"] =responseCode.code === 202 ;\ntests [\"Range is present\"] =responseHeaders.hasOwnProperty (\"Range\") ;\n",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\n",
"pathVariables": {}
},
{
"id": "f399fc18-fde0-4964-928c-ba9d5f9de8ba",
"name": "Data Mgmt - Set Relationships (Docs)",
"url": "https://{{ForgeURL}}/data/v1/projects/{{ProjectId}}/versions",
"description": null,
"data": [],
"dataMode": "raw",
"headerData": [
{
"enabled": true,
"key": "Authorization",
"value": "Bearer {{Bearer}}"
},
{
"key": "Content-Type",
"name": "Content-Type",
"value": "application/vnd.api+json",
"description": "",
"type": "text"
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "57099266-c5e7-4eb2-aeb7-a3a17dbcf096",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
],
"type": "text/javascript"
}
}
],
"folder": "b31706b7-1e86-4b20-9655-e34255160c8d",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\r\n    \"jsonapi\": {\r\n        \"version\": \"1.0\"\r\n    },\r\n    \"data\": {\r\n        \"type\": \"versions\",\r\n        \"attributes\": {\r\n            \"name\": \"{{Filename}}\",\r\n            \"extension\": {\r\n                \"type\": \"versions:autodesk.bim360:File\",\r\n                \"version\": \"1.0\"\r\n            }\r\n        },\r\n        \"relationships\": {\r\n            \"item\": {\r\n                \"data\": {\r\n                    \"type\": \"items\",\r\n                    \"id\": \"{{ItemId}}\"\r\n                }\r\n            },\r\n            \"storage\": {\r\n                \"data\": {\r\n                    \"type\": \"objects\",\r\n                    \"id\": \"{{URN}}\"\r\n                }\r\n            },\r\n            \"refs\": {\r\n                \"data\": [{\r\n                        \"type\": \"versions\",\r\n                        \"id\": \"{{HostVersionURN}}\",\r\n                        \"meta\": {\r\n                            \"refType\": \"xrefs\",\r\n                            \"direction\": \"from\",\r\n                            \"extension\": {\r\n                                \"type\": \"xrefs:autodesk.core:Xref\",\r\n                                \"version\": \"1.1\",\r\n                                \"data\": {\r\n                                    \"nestedType\": \"overlay\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }, {\r\n                        \"type\": \"versions\",\r\n                        \"id\": \"{{LinkingVersionURN}}\",\r\n                        \"meta\": {\r\n                            \"refType\": \"xrefs\",\r\n                            \"direction\": \"from\",\r\n                            \"extension\": {\r\n                                \"type\": \"xrefs:autodesk.core:Xref\",\r\n                                \"version\": \"1.1\",\r\n                                \"data\": {\r\n                                    \"nestedType\": \"overlay\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    }\r\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "f406c475-16ea-473d-b05b-b7e72c64d3c3",
"name": "DA - Create Activity",
"url": "https://{{ForgeURL}}/da/us-east/v3/activities",
"description": "POST\tactivities\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/activities-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"type": "text",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"type": "text",
"value": "application/json"
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": null,
"folder": "40290aaf-3397-4747-ac05-bbd012dc6b75",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\r\n    \"id\": \"{{ActivityName}}\",\r\n    \"commandLine\": [ \"$(engine.path)\\\\\\\\revitcoreconsole.exe /i $(args[inputFile].path) /al $(appbundles[{{AppBundleName}}].path)\" ],\r\n    \"parameters\": {\r\n      \"inputFile\": {\r\n        \"zip\": false,\r\n        \"ondemand\": false,\r\n        \"verb\": \"get\",\r\n        \"description\": \"Input Revit model\",\r\n        \"required\": true,\r\n        \"localName\": \"$(inputFile)\"\r\n      },\r\n      \"outputFile\": {\r\n        \"zip\": false,\r\n        \"ondemand\": false,\r\n        \"verb\": \"put\",\r\n        \"description\": \"Output Revit model\",\r\n        \"required\": true,\r\n        \"localName\": \"outputFile.rvt\"\r\n      }\r\n    },\r\n    \"engine\": \"{{EngineName}}\",\r\n    \"appbundles\": [ \"{{AppNickName}}.{{AppBundleName}}+{{AppBundleAliasId}}\" ],\r\n    \"description\": \"{{AppBundleName}}\"\r\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "f448d4a2-f1f0-41bc-829d-822bfbad744b",
"name": "BIM360 - GET Docs Issues",
"url": "https://{{ForgeURL}}/issues/v1/containers/{{ContainerId}}/issues",
"description": "GET Docs Issues\n\nhttps://developer.autodesk.com/en/docs/bim360/v1/reference/http/document-issues-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/vnd.api+json",
"description": "",
"enabled": false
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"id": "6ba3ddc4-9890-45b4-9c03-9dfba00380f1",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
],
"type": "text/javascript"
}
}
],
"folder": "176b1e9c-d3a6-4f92-8bb9-9570be2399d7",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\n//Content-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "f522b009-0b6e-49ba-9c24-3bc70c3fad0d",
"name": "DA - Create new version of the AppBundle",
"url": "https://{{ForgeURL}}/da/us-east/v3/appbundles/:id/versions ",
"description": "POST\tappbundles/:id/versions\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/appbundles-id-versions-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"type": "text",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"type": "text",
"value": "application/json"
}
],
"method": "POST",
"pathVariableData": [
{
"key": "id",
"value": "{{AppBundleName}}"
}
],
"queryParams": [],
"auth": null,
"events": null,
"folder": "71990473-bdaf-45d7-8834-a563578ef8ba",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\r\n\t\"engine\": \"{{EngineName}}\",\r\n\t\"description\": \"Description for {{AppBundleName}}\"\r\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {
"id": "{{AppBundleName}}"
}
},
{
"id": "f5f8f331-72f9-455d-9061-507fb5f168d4",
"name": "Data Mgmt - Delete a bucket",
"url": "https://{{ForgeURL}}/oss/v2/buckets/{{BucketName}}",
"description": "Return bucket details in JSON format.\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/buckets-:bucketKey-details-GET/",
"data": [],
"dataMode": "params",
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/json",
"description": "",
"enabled": true
}
],
"method": "DELETE",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;"
]
}
}
],
"folder": "67ccc792-23b1-44e0-959e-d3a991dce762",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n",
"pathVariables": {}
},
{
"id": "f8126c91-9fcb-4cd0-abcd-089632d9d213",
"name": "Data Mgmt - GET Top Folders",
"url": "https://{{ForgeURL}}/project/v1/hubs/{{HubId}}/projects/{{ProjectId}}/topFolders",
"description": "Get Project\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/hubs-hub_id-projects-project_id-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/vnd.api+json",
"description": "",
"enabled": true
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
]
}
}
],
"folder": "5635befe-82b8-453d-b0df-440eee29ccdc",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "fa671c3b-0b8d-4b1d-b00e-dbbb2579a9d0",
"name": "Data Mgmt - GET Folder",
"url": "https://{{ForgeURL}}/data/v1/projects/{{ProjectId}}/folders/{{FolderId}}",
"description": "Get Project\n\nhttps://developer.autodesk.com/en/docs/data/v2/reference/http/hubs-hub_id-projects-project_id-GET/",
"data": null,
"dataMode": null,
"headerData": [
{
"key": "Authorization",
"value": "Bearer {{Bearer}}",
"description": "",
"enabled": true
},
{
"key": "Content-Type",
"value": "application/vnd.api+json",
"description": "",
"enabled": true
}
],
"method": "GET",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": [
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"tests[\"Status code is 200\"] = responseCode.code === 200;",
"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );",
"tests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;"
]
}
}
],
"folder": "5635befe-82b8-453d-b0df-440eee29ccdc",
"preRequestScript": null,
"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty( \"Content-Type\" );\ntests[\"Content-Type is vnd.api+json\"] = postman.getResponseHeader( \"Content-Type\" ).indexOf( \"application/vnd.api+json\" ) !== -1;",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/vnd.api+json\n",
"pathVariables": {}
},
{
"id": "fa8bb22f-d7cf-4d48-85c4-1a0d729184b0",
"name": "DA - Create Workitem ZIP",
"url": "https://{{ForgeURL}}/da/us-east/v3/workitems",
"description": "POST\tworkitems\nhttps://forge.autodesk.com/en/docs/design-automation/v3/reference/http/workitems-POST/",
"data": [],
"dataMode": "raw",
"headerData": [
{
"description": "",
"enabled": true,
"key": "Authorization",
"type": "text",
"value": "Bearer {{Bearer}}"
},
{
"description": "",
"enabled": true,
"key": "Content-Type",
"type": "text",
"value": "application/json"
},
{
"description": "",
"enabled": false,
"key": "x-request-id",
"type": "text",
"value": "fpd-t-kange-da-test-001"
}
],
"method": "POST",
"pathVariableData": [],
"queryParams": [],
"auth": null,
"events": null,
"folder": "92fe8767-e6b5-4de9-ba3e-d022709b4453",
"currentHelper": null,
"helperAttributes": null,
"collectionId": "aa8bdbd1-42bf-433c-8b78-429cdd4b8ce5",
"rawModeData": "{\r\n\t\"activityId\": \"{{AppNickName}}.{{ActivityName}}+{{ActivityAliasId}}\",\r\n\t\"arguments\": {\r\n\t  \"inputFile\": {\r\n\t  \t\"verb\": \"get\",\r\n\t    \"url\": \"https://content.dropboxapi.com/2/files/download\",\r\n        \"headers\": {\r\n            \"Authorization\": \"Bearer {{DropboxBearer}}\",\r\n            \"Dropbox-API-Arg\": \"{ \\\"path\\\":\\\"\\/adsk-forge\\/DWG\\/input.rvt\\\" }\"\r\n\t\t}\r\n\t  },\r\n\t  \"outputFile\": {\r\n        \"verb\": \"post\",\r\n        \"url\": \"https://content.dropboxapi.com/2/files/upload\",\r\n        \"headers\":{\r\n            \"Authorization\": \"Bearer {{DropboxBearer}}\",\r\n        \t\"Content-Type\": \"application/octet-stream\",\r\n        \t\"Dropbox-API-Arg\": \"{\\\"path\\\":\\\"\\/adsk-forge\\/DWG\\/result.zip\\\", \\\"mode\\\":\\\"add\\\"}\"\r\n        }\r\n\t  }\r\n\t}\r\n}",
"headers": "Authorization: Bearer {{Bearer}}\nContent-Type: application/json\n//x-request-id: fpd-t-kange-da-test-001\n",
"pathVariables": {}
}
]
}
